{"version":3,"sources":["1_global.js","2.0_navbar.js","2.1_regvalidate.js","2.2_pwmeter.js","2.3_operations.js","2.4_megamenu.js","3_data_prep.js","4.5_profile.js","4_body.js","5_marquee.js","6_security.js"],"names":["console","log","currentTheme","localStorage","getItem","toggleSwitch","document","querySelector","switchTheme","e","target","checked","documentElement","setAttribute","setItem","addEventListener","supportedLangs","locale","getLocale","language","geoip_url","goBack","window","history","back","querySelectorAll","forEach","menu","stopPropagation","sessionIpData","async","url","sessionStorage","JSON","parse","ipObj","getFreshData","stringify","addtoIpHistory","obj","Array","prototype","pushMax","value","max","this","length","shift","push","entries","langArray","lang","getCookie","indexOf","navigator","languages","substring","cname","name","ca","cookie","split","i","c","charAt","geoLocate","geolocation","getCurrentPosition","position","lat","coords","latitude","lon","longitude","reverseGeocode","error","searchContainerMain","searchForm","searchInput","langSelectors","authBtn","authModal","bootstrap","Modal","getElementById","registerTab","Tab","loginTab","regbutton","loginbutton","reglink","loginlink","hideBtns","toggleShow","element","previousElementSibling","type","children","style","display","show","preventDefault","btn","themeCheckbox","body","classList","toggle","langCookieAge","option","id","location","reload","regform","regemail","regpassword","regcaptcha","emailsmall","emailerr","captchasmall","loginForm","loginemail","loginCaptcha","loginBtn","loginEmailsmall","loginCaptchasmall","registrationErrors","emailbackend","email","password","recaptcha","loginErrors","setErrorFor","input","message","formControl","parentElement","innerText","className","setSuccessFor","isEmail","test","checkEmail","toLowerCase","fetch","method","headers","Content-Type","then","res","json","data","innerHTML","allFalse","item","validateEmail","emailValue","validatePassword","passValue","validateCaptcha","recaptchaCheck","recaptchaCheckExp","calPasswordStrength","pass","score","letters","Object","variations","digits","lower","upper","nonWords","check","variationCount","parseInt","form","loader","disabled","pointerEvents","opacity","msg","meters","passwordScore","backgroundColor","color","pathname","href","showMegamenuMovie","movie","movieCol","main","title","poster_path","vote_average","overview","release_date","genre_ids","movieElement","createElement","add","img_path","Date","getFullYear","getClassByRate","class","star","getGenres","appendChild","fetchMovie","cacheInterval","url_params","URLSearchParams","img_path_highres","url_movie_genres","url_search","url_theatersNow","url_theatersUpcoming","url_moviesTrend","url_moviesPopular","url_movieInfo","marqueeReel","gallery","galleryThumbnails","section","header","movieGenres","searchValue","toMain","fetchData","writeToCache","readFromCache","response","time","now","interval","cache","cacheData","movieId","watchMovie","showMovieListGenres","genres","list","genresarr","map","genre","join","showMovieGenres","rate","url_weatherInfo","weather","clientInfo","profileInit","ipdata","showWeather","showClientside","params","units","resdata","toWeather","toClientInfo","city","temp","icon","desc","description","weatherElement","ip","country","country_name","timezone","time_zone","clientInfoElement","os","osarch","osversion","browser","browser_ver","sessionsip","proxy","initData","showGenres","showMoviesTrending","showMoviesPopular","toGenresList","moviesPopular","moviesTrending","toCarousel","array","results","index","backdrop_path","filmSlide","backgroundImage","button","filmElement","infiniteMarquee","movies","genreElement","root","marqueeElementsDisplayed","getComputedStyle","getPropertyValue","marqueeContent","setProperty","cloneNode"],"mappings":"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","file":"main.min.js","sourcesContent":["console.log('connected 1_global.js');\r\n\r\n// Toggle Day and Night mode\r\nconst currentTheme = localStorage.getItem('theme') ? localStorage.getItem('theme') : null;\r\nconst toggleSwitch = document.querySelector('.theme-checkbox');\r\n\r\nif(currentTheme) {\r\n  document.documentElement.setAttribute('data-theme', currentTheme);\r\n\r\n  if(currentTheme === 'dark') {\r\n    toggleSwitch.checked = true;\r\n  }\r\n}\r\n\r\nfunction switchTheme(e) {\r\n  if(e.target.checked) {\r\n    document.documentElement.setAttribute('data-theme', 'dark');\r\n    // Save theme setting to local storage\r\n    localStorage.setItem('theme', 'dark');\r\n  } else {\r\n    document.documentElement.setAttribute('data-theme', 'light');\r\n    localStorage.setItem('theme', 'light');\r\n  }\r\n};\r\n\r\ntoggleSwitch.addEventListener('change', switchTheme, false);\r\n// ------------\r\n\r\n// Set Global frontend language locale\r\nconst supportedLangs = ['en', 'ru', 'es'];    // List of site supported languages\r\nlet locale = getLocale(supportedLangs);\r\nconst language = locale;                      // TMDB API locale for fetch \r\n\r\n// GeoIP providers\r\nconst geoip_url = 'https://freegeoip.app/json/';        // 15 000 requests per hour\r\n\r\n\r\n\r\n\r\n// Clean up Local Storage of old data on second reload of same session\r\n  // add flag if there is current session ip data\r\n  // if there is flag clean up local storage of data older than 1 month\r\n\r\n\r\n\r\n  // Go back in browser history\r\nfunction goBack() {\r\n  window.history.back();\r\n}\r\n\r\n// Prevent closing on click inside dropdown\r\ndocument.querySelectorAll('.dropdown-menu').forEach(menu => {\r\n  menu.addEventListener('click', (e) => {\r\n    e.stopPropagation();\r\n  });\r\n});\r\n\r\n// Track IP lookup\r\nconst sessionIpData = async (url) => {\r\n  const sessionIpObj = sessionStorage.getItem(url) || null;\r\n  // if no url-named item in current SESSION then create one\r\n  if (!sessionIpObj) {\r\n    const ipObj = await getFreshData(url);\r\n    sessionStorage.setItem(url, JSON.stringify(ipObj));\r\n    addtoIpHistory(ipObj);\r\n    return ipObj;\r\n  } else {\r\n    const ipData = JSON.parse(sessionStorage.getItem(url)) || null;\r\n    return ipData;\r\n  }\r\n}\r\n\r\n// Add locale object to localstorage history array\r\nfunction addtoIpHistory(obj) {\r\n  // If max items then push to last and delete first\r\n  Array.prototype.pushMax = function(value, max) {\r\n    if (this.length >= max) {\r\n      this.shift();\r\n    }\r\n    this.push(value);\r\n  }\r\n\r\n  const entries = JSON.parse(localStorage.getItem('ipHistory')) || [];\r\n  entries.pushMax(obj, 10);\r\n  localStorage.setItem('ipHistory', JSON.stringify(entries));\r\n}\r\n\r\n// Evaluate preferred language\r\nfunction getLocale(langArray) {\r\n  let lang;\r\n  if(!getCookie('language')) {\r\n    lang = navigator.languages[0].substring(0, 2);\r\n  } else {\r\n    const index = langArray.indexOf(getCookie('language'));\r\n    lang = index >= 0 ? getCookie('language') : 'en';  // default to english\r\n  }\r\n  return lang;\r\n}\r\n\r\n// Parse and get cookie data by keyname\r\nfunction getCookie(cname) {\r\n  const name = cname + \"=\";\r\n  const ca = document.cookie.split(';');\r\n  for(let i = 0; i < ca.length; i++) {\r\n    let c = ca[i];\r\n    while (c.charAt(0) == ' ') {\r\n      c = c.substring(1);\r\n    }\r\n    if (c.indexOf(name) == 0) {\r\n      return c.substring(name.length, c.length);\r\n    }\r\n  }\r\n  return \"\";\r\n}\r\n\r\n// Use HTML5 Geolocation\r\nfunction geoLocate() {\r\n  if (!navigator.geolocation) {\r\n    console.log(\"Geolocation is not supported by your browser\");\r\n    return;\r\n  }\r\n\r\n  function success(position) {\r\n    // for when getting location is a success\r\n    const lat  = position.coords.latitude;\r\n    const lon = position.coords.longitude;\r\n    console.log('latitude', lat, 'longitude', lon);\r\n    reverseGeocode(lat, lon);\r\n  }\r\n\r\n  function error() {\r\n    // for when getting location results in an error\r\n    console.error('Cannot retrieve your position. Please enable geolocation in your browser');\r\n    // get your location some other way\r\n  }\r\n\r\n  navigator.geolocation.getCurrentPosition(success, error);\r\n}\r\n\r\n\r\n/* OPEN DROPDOWNS ON HOVER */\r\n// // Vars\r\n// const dropdowns = document.querySelectorAll('nav .dropdown');\r\n// const dropdownMenus = document.querySelectorAll('nav .dropdown-menu');\r\n\r\n// // Open dropdown menu on hover\r\n// dropdowns.forEach(dropdown => {\r\n//   const dropdownMenu = dropdown.querySelector('.dropdown-menu');\r\n//   dropdown.addEventListener('mouseover', () => {\r\n//     removeClass(dropdownMenus);\r\n//     if(window.getComputedStyle(dropdownMenu).visibility === \"visible\") {\r\n//       dropdownMenu.classList.add(\"show\");\r\n//     // }\r\n//   });\r\n// });\r\n\r\n// // Remove class from elements array\r\n// function removeClass(elements) {\r\n//   elements.forEach(element => {\r\n//     element.classList.remove(\"show\");\r\n//   });\r\n// }\r\n/* ======================= */","console.log('connected 2.0_navbar.js');\r\n\r\n// Search form\r\nconst searchContainerMain = document.querySelector('#search-container-main');\r\nconst searchForm = document.querySelector('.search-form');\r\nconst searchInput = document.querySelector('.search-input');\r\n// Select language options\r\nconst langSelectors = document.querySelectorAll('#lang a');\r\n// Authorization\r\nconst authBtn = document.querySelector('#auth-btn');\r\n// Modals\r\nconst authModal = new bootstrap.Modal(document.getElementById('auth-modal')); \r\nconst registerTab = new bootstrap.Tab(document.querySelector('#authTab a[href=\"#register-tab-page\"]'));\r\nconst loginTab = new bootstrap.Tab(document.querySelector('#authTab a[href=\"#login-tab-page\"]'));\r\n// Links to Login and Register tabs in Modal Window\r\nconst regbutton = document.querySelector('#btn-register');\r\nconst loginbutton = document.querySelector('#btn-login');\r\nconst reglink = document.querySelector('#register-link');\r\nconst loginlink = document.querySelector('#login-link');\r\n// Register form password visibility toggle\r\nconst hideBtns = document.querySelectorAll('.toggle-hide');\r\n\r\n// Auth button event\r\nif(authBtn) {\r\n  authBtn.addEventListener('click', () => {\r\n    authModal.show();\r\n    loginTab.show();\r\n  });\r\n}\r\n\r\n// Modal form links between Login and Register modals\r\nreglink.addEventListener('click', function (e) {\r\n  e.preventDefault()\r\n  registerTab.show();\r\n});\r\nloginlink.addEventListener('click', function (e) {\r\n  e.preventDefault()\r\n  loginTab.show();\r\n});\r\n\r\n// Toggle Password Visibility\r\nhideBtns.forEach(btn => {\r\n  btn.addEventListener('click', () => {\r\n    toggleShow(btn);\r\n  });\r\n});\r\n\r\nfunction toggleShow(element) {\r\n  if (element.previousElementSibling.type === \"password\") {\r\n    \r\n    element.previousElementSibling.type = \"text\";\r\n    element.children[0].style.display = 'none';\r\n    element.children[1].style.display = 'block';\r\n  } else {\r\n    element.previousElementSibling.type = \"password\";\r\n    element.children[0].style.display = 'block';\r\n    element.children[1].style.display = 'none';\r\n  }\r\n}\r\n// end toggle password visibility\r\n\r\n// Day & Night theme toggle\r\nconst themeCheckbox = document.querySelector('.theme-checkbox');\r\n\r\nthemeCheckbox.addEventListener('change', () => {\r\n  // change theme of the website\r\n  document.body.classList.toggle('light');\r\n});\r\n\r\n// Select language dropdown\r\nconst langCookieAge = 365 * 24 * 60 * 60;\r\nlangSelectors.forEach(option => {\r\n  option.addEventListener('click', () => {\r\n    document.cookie = \"language=\" + option.id + \"; \" + \"max-age=\" +  langCookieAge + \";path=/\";\r\n    location.reload();\r\n  });\r\n});","console.log('connected 2.1_regvalidate.js');\r\n\r\n// Register form\r\nconst regform = document.querySelector('#reg-form');\r\nconst regemail = document.querySelector('#reg-email');\r\nconst regpassword = document.querySelector('#reg-password');\r\nconst regcaptcha = document.querySelector('#reg-form .g-recaptcha');\r\n// Registration email errors from backend validation\r\nconst emailsmall = document.querySelector('#reg-form .email-small');\r\nconst emailerr = document.querySelector('#reg-form .email-error');\r\nconst captchasmall = document.querySelector('#reg-form .captcha-small');\r\n// Login form\r\nconst loginForm = document.querySelector('#login-form');\r\nconst loginemail = document.querySelector('#login-email');\r\nconst loginCaptcha = document.querySelector('#login-form .g-recaptcha');\r\nconst loginBtn = document.querySelector('#btn-login');\r\n// Login errors display\r\nconst loginEmailsmall = document.querySelector('#login-form .email-small');\r\nconst loginCaptchasmall = document.querySelector('#login-form .captcha-small');\r\n\r\n// Registration form Monitor errors\r\nlet registrationErrors = {\r\n  emailbackend: true,\r\n  email: true,\r\n  password: true,\r\n  recaptcha: true\r\n};\r\n// Login form errors monitor\r\nlet loginErrors = {\r\n  email: true,\r\n};\r\n\r\n// Email field error set True on focus in\r\nregemail.addEventListener('focusin', () => {\r\n  registrationErrors.emailbackend = true;\r\n});\r\n\r\n// Form processing\r\ndocument.querySelectorAll('.auth-form').forEach(form => {\r\n  const loader = form.querySelector('.submit-loader');\r\n  const btn = form.querySelector('.auth-btn');\r\n  // On form submit action\r\n  form.addEventListener('submit', (e) => {\r\n    // Validate registration\r\n    if(form.id === 'reg-form') {\r\n      if(!allFalse(registrationErrors)) {\r\n        e.preventDefault();\r\n        validateEmail(regemail);\r\n        validatePassword();\r\n        validateCaptcha();\r\n        checkEmail();\r\n\r\n        console.log('reg-form validation');\r\n        console.log(registrationErrors);\r\n        console.log(allFalse(registrationErrors));\r\n        return false;\r\n      }\r\n    }\r\n    // Validate login\r\n    if(form.id === 'login-form') {\r\n      validateEmail(loginemail);\r\n      if(!allFalse(loginErrors)) {\r\n        e.preventDefault();\r\n\r\n        console.log('login-form validation');\r\n        console.log(loginErrors);\r\n        console.log(allFalse(loginErrors));\r\n        return false;\r\n      }\r\n    }\r\n    // On wait: disable button and show loader\r\n    btn.disabled = true;\r\n    btn.style.pointerEvents = \"none\"; \r\n    btn.style.opacity = 0.3;\r\n    loader.innerHTML = `\r\n      <?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" style=\"margin: auto; background: none; display: block; shape-rendering: auto;\" width=\"50px\" height=\"50px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n      <path d=\"M10 50A40 40 0 0 0 90 50A40 43 0 0 1 10 50\" fill=\"#ececec\" stroke=\"none\">\r\n        <animateTransform attributeName=\"transform\" type=\"rotate\" dur=\"1s\" repeatCount=\"indefinite\" keyTimes=\"0;1\" values=\"0 50 51.5;360 50 51.5\"></animateTransform>\r\n      </path>\r\n      <!-- [ldio] generated by https://loading.io/ --></svg>\r\n    `;\r\n  });\r\n});\r\n\r\n// Email presence in database validation \r\nregemail.addEventListener('focusout', () => {\r\n  checkEmail();\r\n});\r\n\r\n// Validate registration email\r\nregemail.addEventListener('keyup', (e) => {\r\n  validateEmail(regemail);\r\n});\r\n\r\n// Validate login email\r\nloginemail.addEventListener('focusout', (e) => {\r\n  validateEmail(loginemail);\r\n});\r\n\r\n// Validate password\r\nregpassword.addEventListener('keyup', (e) => {\r\n  validatePassword();\r\n});\r\n\r\n// Output message and style on Successful Validation\r\nfunction setErrorFor(input, message) {\r\n  const formControl = input.parentElement;\r\n  const small = formControl.querySelector('.small');\r\n\r\n  // add error message inside small\r\n  small.innerText = message;\r\n\r\n  // add error class\r\n  formControl.className = 'form-group error';\r\n}\r\n\r\n// Output message and style on Error\r\nfunction setSuccessFor(input) {\r\n  const formControl = input.parentElement;\r\n  formControl.className = 'form-group success';\r\n}\r\n\r\n// Validate email structure\r\nfunction isEmail(email) {\r\n  return /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email);\r\n}\r\n\r\n// Check database for Email presence\r\nfunction checkEmail() {\r\n  let email = document.querySelector('#reg-email').value.toLowerCase();\r\n  \r\n  // send email input value to /usercheck route of the API\r\n  fetch('/usercheck', {\r\n    method: 'post',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({email})\r\n  })\r\n  // receive and process response from the API\r\n  .then(res => res.json())\r\n  .then(data => {\r\n    console.log(data);\r\n    if(data.message != 'success'){\r\n      emailsmall.innerHTML = `${data.message}`;\r\n\r\n      const formControl = emailsmall.parentElement;\r\n      formControl.className = 'form-group error';\r\n      registrationErrors.emailbackend = true;\r\n    } else {\r\n      // emailerr.innerHTML = '';\r\n      registrationErrors.emailbackend = false;\r\n    }\r\n  });\r\n}\r\n\r\n// Check if all errors cleared\r\nfunction allFalse(obj) {\r\n  for(let item in obj)\r\n    if(obj[item]) return false;\r\n    \r\n  return true;\r\n}\r\n\r\n// Validate Email\r\nfunction validateEmail(element) {\r\n  const emailValue = element.value;\r\n    \r\n  if(emailValue === '' || emailValue === null) {\r\n    setErrorFor(element, \"Email cannot be blank\");\r\n    registrationErrors.email = true;\r\n    loginErrors.email = true;\r\n  } else if(emailValue.length <=6) {\r\n    setErrorFor(element, \"Email too short\");\r\n    registrationErrors.email = true;\r\n    loginErrors.email = true;\r\n  } else if(!isEmail(emailValue)) {\r\n    setErrorFor(element, \"Email is not valid\");\r\n    registrationErrors.email = true;\r\n    loginErrors.email = true;\r\n  } else {\r\n    setSuccessFor(element);\r\n    registrationErrors.email = false;\r\n    loginErrors.email = false;\r\n  } \r\n}\r\n\r\n// Validate Password\r\nfunction validatePassword() {\r\n  passValue = regpassword.value;\r\n  \r\n  if(passValue === '' || passValue === null) {\r\n    setErrorFor(regpassword, \"Password cannot be blank\");\r\n    registrationErrors.password = true;\r\n  } else if(passValue.length <= 6) {\r\n    setErrorFor(regpassword, \"Password must be 7+ characters\");\r\n    registrationErrors.password = true;\r\n  } else {\r\n    setSuccessFor(regpassword);\r\n    registrationErrors.password = false;\r\n  }\r\n}\r\n\r\n// Google reCaptcha validation\r\nfunction validateCaptcha() {\r\n  const captchaValue = regemail.value;\r\n    \r\n  if(registrationErrors.recaptcha != false) {\r\n    setErrorFor(regcaptcha, \"Are you human? Please check captcha\");\r\n  } else {\r\n    setSuccessFor(regcaptcha);\r\n  } \r\n}\r\nfunction recaptchaCheck() {\r\n  registrationErrors.recaptcha = false;\r\n  setSuccessFor(regcaptcha);\r\n}\r\nfunction recaptchaCheckExp() {\r\n  registrationErrors.recaptcha = true;\r\n  setErrorFor(regcaptcha, \"Are you human?\");\r\n}","console.log('connected 2.2_pwmeter.js');\r\n\r\ndocument.querySelector('#reg-password').addEventListener('keyup', function() {\r\n  const msg = document.getElementById('passwordmessage');\r\n  const meters = document.querySelectorAll('.pwmeter span');\r\n\r\n  // Calculate the strength of the password\r\n  let passwordScore = calPasswordStrength(this.value);\r\n\r\n  // Set the width of the password meter to a multiple of the score\r\n  // meter.style.width = (passwordScore+1) * 1 + 'px';\r\n\r\n  if (passwordScore <= 40) {\r\n    meters[0].style.backgroundColor = 'red';\r\n    meters[0].className = 'meter-span-on';\r\n    meters[1].className = 'meter-span-off';\r\n    meters[2].className = 'meter-span-off';\r\n    msg.style.color = 'coral';\r\n    msg.innerHTML = 'Weak password';\r\n  } else if (passwordScore <= 77) {\r\n    meters[1].style.backgroundColor = 'orange';\r\n    meters[1].className = 'meter-span-on';\r\n    meters[2].className = 'meter-span-off';\r\n    msg.style.color = 'orange';\r\n    msg.innerHTML = 'Password is average';\r\n  } else {\r\n    meters[2].style.backgroundColor = 'green';\r\n    meters[2].className = 'meter-span-on';\r\n    msg.style.color = 'green';\r\n    msg.innerHTML = 'Your password is strong';\r\n  }\r\n\r\n  // If input empty, there is no text output\r\n  if (this.value == \"\") {\r\n    meters[0].className = 'meter-span-off';\r\n    meters[1].className = 'meter-span-off';\r\n    meters[2].className = 'meter-span-off';\r\n    msg.innerHTML = '';\r\n  }\r\n});\r\n\r\n// Return password score\r\nfunction calPasswordStrength(pass) {\r\n  var score = 0;\r\n  if (!pass) return score;\r\n\r\n  // award every unique letter until 5 repetitions\r\n  var letters = new Object();\r\n  for (var i=0; i<pass.length; i++) {\r\n    letters[pass[i]] = (letters[pass[i]] || 0) + 1;\r\n    score += 5.0 / letters[pass[i]];\r\n  }\r\n\r\n  // bonus points for mixing it up\r\n  var variations = {\r\n    digits: /\\d/.test(pass),\r\n    lower: /[a-z]/.test(pass),\r\n    upper: /[A-Z]/.test(pass),\r\n    nonWords: /\\W/.test(pass),\r\n  }\r\n\r\n  variationCount = 0;\r\n  for (var check in variations) {\r\n    variationCount += (variations[check] == true) ? 1 : 0;\r\n  }\r\n  score += (variationCount - 1) * 10;\r\n\r\n  return parseInt(score);\r\n}","console.log('connected 2.3_operations.js');\r\n\r\n// Reload with Register modal tab open if client-side validation fails\r\nif(sessionStorage.getItem('regformErrors') === 'true') {\r\n  document.addEventListener(\"DOMContentLoaded\", () => {\r\n    authModal.show();\r\n    registerTab.show();\r\n  });\r\n}\r\n// Prevent reOpening registration form on reload\r\nsessionStorage.setItem('regformErrors', false);\r\n\r\n// If login fails open login modal\r\nif(sessionStorage.getItem('loginErrors') === 'true') {\r\n  document.addEventListener(\"DOMContentLoaded\", () => {\r\n    authModal.show();\r\n    loginTab.show();\r\n  });\r\n}\r\n// Prevent reOpening login form on reload\r\nsessionStorage.setItem('loginErrors', false);\r\n\r\n// Redirect to home directory on Authorization modal close if in subdirectories\r\nif(location.pathname != '/') {\r\n  document.querySelector('#auth-modal').addEventListener('hide.bs.modal', (e) => {\r\n    console.log('hida maida');\r\n    window.location.href = '/';\r\n  });\r\n}\r\n","// Show movie information in Movie Column of Movie Megamenu\r\nconst showMegamenuMovie = movie => {\r\n  const movieCol = document.querySelector('.movie-column');\r\n  \r\n  movieCol.innerHTML = '';\r\n\r\n  if(!movie) {\r\n    main.innerHTML = `<div class=\"section-title\">Movie info not available<span class=\"section-backlogo\">Movie info not available</span></div>`;\r\n    return false;\r\n  }\r\n\r\n  const { title, \r\n          poster_path,\r\n          vote_average, \r\n          overview,\r\n          release_date,\r\n          genre_ids,\r\n          id\r\n        } = movie;\r\n\r\n  const movieElement = document.createElement('div');\r\n  movieElement.classList.add('movieCol');\r\n\r\n  movieElement.innerHTML = `\r\n    \r\n      <div style=\"background-image: url('${img_path + poster_path}'); background-size: cover; height: 250px; width: 100px\"></div>\r\n        <div>\r\n          <h3>${title}</h3>\r\n            <span>${new Date(release_date).getFullYear()}</span> \r\n            <span class=\"pipe\">|</span> \r\n            <span class=\"${getClassByRate(vote_average).class}\">\r\n              ${vote_average} <i class=\"${getClassByRate(vote_average).star}\"></i></span>\r\n            <span class=\"pipe\">|</span> \r\n            <span>${getGenres(genre_ids)}</span>\r\n        </div>\r\n        \r\n        <p>${overview}</p>\r\n      </div>\r\n    </div>\r\n  `\r\n\r\n  // Attach button to an element for movie details \r\n  movieCol.appendChild(movieElement);\r\n  movieElement.addEventListener('click', function() {\r\n    fetchMovie(id);\r\n  });\r\n}","console.log('connected 3_data_prep.js');\r\n\r\n// TMDb API parameters\r\nconst cacheInterval = 20 * 1000;   // 15s\r\nconst url_params = new URLSearchParams({ language });\r\nconst img_path = 'https://image.tmdb.org/t/p/w300';\r\nconst img_path_highres = 'https://image.tmdb.org/t/p/w1280';\r\n\r\n// TMDB data proxies\r\nconst url_movie_genres = `/api/movies/genres?`;\r\nconst url_search = `/api/movies/search?query=`;\r\nconst url_theatersNow = `/api/theaters/nowplaying?`;\r\nconst url_theatersUpcoming = `/api/theaters/upcoming?`;\r\nconst url_moviesTrend = `/api/movies/trending?`;\r\nconst url_moviesPopular = `/api/movies/popular?`;\r\nconst url_movieInfo = `/api/movies/movieinfo/`;\r\n\r\nconst marqueeReel = document.querySelector('.marquee-content');\r\nconst gallery = document.querySelector('.carousel-inner');\r\nconst galleryThumbnails = document.querySelector('.carousel-indicators');\r\nconst main = document.querySelector('main');\r\nconst section = document.querySelector('section');\r\nconst header = document.querySelector('header');\r\n\r\nlet movieGenres;\r\n\r\n// Search movies (w/o caching)\r\nsearchForm.addEventListener('submit', async (e) => {\r\n  e.preventDefault();\r\n  const searchValue = searchInput.value;\r\n  const url = url_search + searchValue + \"&\" + url_params;\r\n  \r\n  if (searchValue) {\r\n    header.innerHTML = '';\r\n    main.innerHTML = '';\r\n    document.querySelector('header').innerHTML = '';\r\n\r\n    const data = await fetchData(url);\r\n    toMain(data);\r\n    searchInput.value = '';\r\n  }\r\n});\r\n\r\n// Read and Write data to local storage\r\nconst writeToCache = (url, data) => localStorage.setItem(url, JSON.stringify(data));\r\nconst readFromCache = url => JSON.parse(localStorage.getItem(url)) || null;\r\n\r\n// Fetch fresh data\r\nasync function getFreshData(url) {\r\n  const response = await fetch(url);\r\n  let data = await response.json();\r\n  data.time = Date.now();\r\n  return data;\r\n};\r\n\r\n// Fetch data and cache by default\r\nconst fetchData = async (url, interval = cacheInterval, cache = true) => {\r\n  const cacheData = readFromCache(url);\r\n  if(cacheData && cacheData.time > Date.now() - interval) {\r\n    return cacheData;\r\n  } else {\r\n    const data = await getFreshData(url);\r\n    if(cache) {\r\n      writeToCache(url, data);\r\n    }\r\n    return data;\r\n  }\r\n};\r\n\r\n// Fetch movie details by Id\r\nasync function fetchMovie(movieId) {\r\n  const url = `${url_movieInfo + movieId}?${url_params}`;\r\n  const data = await fetchData(url);\r\n  watchMovie(data);\r\n}\r\n\r\n// Loop genres for Movie list\r\nconst showMovieListGenres = genres => {\r\n  const genresArr = movieGenres;\r\n  const list = movieGenres.genres;\r\n  let genresarr = [];\r\n  genres.map(genre => {\r\n    list.map(item => {\r\n      if(genre == item.id) {\r\n        genresarr.push(item.name);\r\n      } \r\n    });\r\n  });\r\n  return genresarr.join(', ');\r\n};\r\n\r\n// Loop genres for a movie\r\nconst showMovieGenres = genres => {\r\n  const list = genres;\r\n  let genresarr = [];\r\n    list.map(item => {\r\n      genresarr.push(item.name);\r\n    });\r\n  return genresarr.join(', ');\r\n};\r\n\r\n// Evaluate movie rating scores\r\nfunction getClassByRate(rate) {\r\n  if (rate == 0) {\r\n    return {\r\n      class: \"hide\",\r\n    }\r\n  } else if (rate >= 7) {\r\n    return {\r\n      class: \"green\",\r\n      star: \"fas fa-star\"\r\n    }\r\n  } else if (rate > 5) {\r\n    return {\r\n      class: \"orange\",\r\n      star: \"fas fa-star-half\"\r\n    }\r\n  } else {\r\n    return {\r\n      class: \"red\",\r\n      star: \"far fa-star\"\r\n    }\r\n  }\r\n}","console.log('connected 4.5_profile.js');\r\n\r\n\r\nconst url_weatherInfo = `/api/weather?`;\r\nconst weather = document.querySelector('.weather-data');\r\nconst clientInfo = document.querySelector('.client-data');\r\n\r\n// Init Profiles page\r\nconst profileInit = async () => {\r\n  if (window.location.href.indexOf('/profile/') != -1) {\r\n    const ipdata = await sessionIpData(geoip_url);\r\n\r\n    console.log(ipdata);\r\n\r\n    showWeather(ipdata);\r\n    showClientside(ipdata);\r\n  }\r\n}\r\n\r\nprofileInit();\r\n\r\n// Display Weather info\r\nasync function showWeather(data) {\r\n  if(weather) {\r\n    const params = new URLSearchParams({ \r\n      lat: data.latitude,\r\n      lon: data.longitude,\r\n      units: \"metric\",    // \"metric\", \"imperial\", \"kelvin\"\r\n      lang: language,\r\n    });    \r\n    const resdata = await fetchData(url_weatherInfo + params);\r\n    toWeather(resdata);\r\n    \r\n    console.log('received weather data: ', resdata);\r\n  }\r\n}\r\n\r\n// Display Clientside info\r\nasync function showClientside(data) {\r\n  if(clientInfo) {\r\n    let browser_geolocation = false;\r\n    \r\n    if(true) {\r\n\r\n    } else {\r\n\r\n    }\r\n\r\n    toClientInfo(data);\r\n      \r\n      // console.log('received weather data: ', \"resdata\");\r\n  }\r\n}\r\n\r\n\r\nfunction toWeather(data) {\r\n  if(data.length < 1) {\r\n    weather.innerHTML = '';\r\n    weather.innerHTML = `<div>No Weather Data</div>`;\r\n    return;\r\n  }\r\n  weather.innerHTML = '';\r\n  weather.innerHTML = `<div><strong>Weather Info with OpenWeatherMap:</strong></div>`\r\n\r\n  const lang = data.locale;\r\n  const city = data.name;\r\n  const temp = data.main.temp;\r\n  const icon = data.weather[0].icon;\r\n  const desc = data.weather[0].description;\r\n\r\n  const weatherElement = document.createElement('div');\r\n  weatherElement.classList.add('weather');\r\n  weatherElement.innerHTML = `\r\n    ${lang.city}: ${city}<br>\r\n    ${lang.temp}: ${temp} &deg;C <br>\r\n    <img class=\"weather-icon\" src=\"http://openweathermap.org/img/wn/${icon}@2x.png\"> <br>\r\n    ${desc}\r\n  `;\r\n\r\n  // On each forEach iteration attach the button to an element with \r\n  weather.appendChild(weatherElement);\r\n  weatherElement.addEventListener('click', function() {\r\n    // fetchMovie(id);\r\n  });\r\n}\r\n\r\n// Display ClienInfo\r\nfunction toClientInfo(data) {\r\n  if(data.length < 1) {\r\n    clientInfo.innerHTML = '';\r\n    clientInfo.innerHTML = `<div>No Client Data</div>`;\r\n    return;\r\n  }\r\n  clientInfo.innerHTML = '';\r\n  clientInfo.innerHTML = `<div><strong>Clientside Collected Info with freegeoip.app:</strong></div>`\r\n\r\n  const ip = data.ip;\r\n  const latitude = data.latitude;\r\n  const longitude = data.longitude;\r\n  const city = data.city;\r\n  const country = data.country_name;\r\n  const timezone = data.time_zone;\r\n\r\n  const os = data.os;\r\n  const osarchitecture = data.osarch;\r\n  const os_ver = data.osversion;\r\n  const browser = data.browser;\r\n  const browser_ver = data.browser_ver;\r\n  const sessionsip = data.sessionsip;\r\n  const proxy = data.proxy;\r\n\r\n\r\n  const clientInfoElement = document.createElement('div');\r\n  clientInfoElement.classList.add('client-info');\r\n  clientInfoElement.innerHTML = `\r\n    ${'lang.ipaddress'}: ${ip}<br>\r\n    ${'lang.latitude'}: ${latitude}<br>\r\n    ${'lang.longitude'}: ${longitude}<br>\r\n    ${'lang.city'}: ${city}<br>\r\n    ${'lang.country'}: ${country}<br>\r\n    ${'lang.timezone'}: ${timezone}<br>\r\n    ---  ---  --- <br>\r\n    ${'lang.proxy'}: ${'proxy'}<br>\r\n    ${'lang.os'}: ${'os'}<br>\r\n    ${'lang.osarchitecture'}: ${'osarchitecture'}<br>\r\n    ${'lang.os_ver'}: ${'os_ver'}<br>\r\n    ${'lang.browser'}: ${'browser'}<br>\r\n    ${'lang.browser_ver'}: ${'browser_ver'}<br>\r\n    ${'lang.sessionsip'}: ${'sessionsip'}<br>\r\n    <div id=\"map\">MAP</div>\r\n  `;\r\n\r\n  // On each forEach iteration attach the button to an element with \r\n  clientInfo.appendChild(clientInfoElement);\r\n  clientInfoElement.addEventListener('click', function() {\r\n    // fetchMovie(id);\r\n  });\r\n}","console.log('connected 4_body.js');\r\n\r\n// Initialize sequence\r\ninitData();\r\n\r\n// Collect initial TMDB data\r\nasync function initData() {\r\n  await showGenres();\r\n  showMoviesTrending();\r\n  showMoviesPopular();\r\n}\r\n\r\n// Collect genres list\r\nasync function showGenres() {\r\n  movieGenres = await fetchData(url_movie_genres + url_params, 24 * 60 * 60 * 1000);\r\n  document.querySelectorAll('.genres-list').forEach(list => {\r\n    toGenresList(movieGenres.genres, list);\r\n  });\r\n}\r\n\r\n// Display Popular movies\r\nasync function showMoviesPopular() {\r\n  if(main) {\r\n    moviesPopular = await fetchData(url_moviesPopular + url_params);\r\n    toMain(moviesPopular);\r\n  }\r\n}\r\n\r\n// Display Trending movies\r\nasync function showMoviesTrending() {\r\n  if(gallery) {\r\n    moviesTrending = await fetchData(url_moviesTrend + url_params);\r\n    toCarousel(moviesTrending);\r\n  }\r\n}\r\n\r\n// Populate Carousel\r\nfunction toCarousel(array) {\r\n  gallery.innerHTML = '';\r\n  galleryThumbnails.innerHTML = '';\r\n\r\n  array.results.forEach((item, index) => {\r\n    const { title,\r\n            poster_path,\r\n            vote_average,\r\n            backdrop_path,\r\n            overview,\r\n            release_date,\r\n            genre_ids,\r\n            id\r\n          } = item;\r\n\r\n    const filmSlide = document.createElement('div');\r\n    filmSlide.classList.add('carousel-item');\r\n    index === 0 ? filmSlide.className += \" active\" : '';\r\n    filmSlide.style.backgroundImage = `url(\"${img_path_highres + backdrop_path}\")`;\r\n    \r\n    // Slides output\r\n    filmSlide.innerHTML = `\r\n      <div class=\"fade-overlay\"></div>\r\n      <div class=\"carousel-caption d-md-block\">\r\n      <!-- <div class=\"carousel-caption d-none d-md-block\"> -->\r\n        <h2 class=\"display-4\">${title}</h2>\r\n          <p class=\"lead overview-header__stats\">\r\n            <span class=\"carousel-caption-overview\">${new Date(release_date).getFullYear()}</span> \r\n            <span class=\"pipe carousel-caption-overview\">|</span> \r\n            <span class=\"carousel-caption-overview\">\r\n              <i class=\"${vote_average == 0 ? \"\" : getClassByRate(vote_average).star}\"></i> ${vote_average == 0 ? \"\" : vote_average} </span>\r\n            <span class=\"pipe carousel-caption-overview\">|</span> \r\n            <span class=\"carousel-caption-overview\">${showMovieListGenres(genre_ids)}</span>\r\n          </p>\r\n        <div class=\"film-details\">\r\n          <a class=\"button-container-${index}\" href=\"#\"></a>\r\n          <p class=\"lead\">${overview.substring(0, 200)}...</p>\r\n        </div>\r\n      </div>\r\n      `;\r\n      \r\n      gallery.appendChild(filmSlide);\r\n\r\n      // Create a button and attach click event listener\r\n      const button = document.createElement(\"button\");\r\n      button.classList.add('btn-custom');\r\n      button.className += ' mb-3'\r\n      button.innerHTML = '<i class=\"fas fa-play\"></i> Play';\r\n      button.addEventListener('click', function() {\r\n        fetchMovie(id);\r\n      });\r\n      // On each forEach iteration attach the button to an element with \r\n      // a unique id\r\n      document.querySelector(\".button-container-\" + index).appendChild(button);\r\n\r\n    // Icons output\r\n    const filmElement = document.createElement('li');\r\n    // index === 0 ? filmElement.className += \" active\" : '';\r\n    filmElement.setAttribute(\"data-target\", \"#carousel-main\");\r\n    filmElement.setAttribute(\"data-slide-to\", `${index}`);\r\n    filmElement.innerHTML = `\r\n      <div class=\"card-dummy\">\r\n        <img src=\"${img_path + poster_path}\">\r\n      </div>\r\n    `\r\n    marqueeReel.appendChild(filmElement);\r\n  });\r\n\r\n  // Fill marquee space between last and first card \r\n  infiniteMarquee();\r\n}\r\n\r\n// Populate Main div\r\nfunction toMain(movies) {\r\n  if(movies.length < 1) {\r\n    main.innerHTML = '';\r\n    main.innerHTML = `<div class=\"section-title\">No Results Found<span class=\"section-backlogo\">No Results Found</span></div>`;\r\n    return false;\r\n  }\r\n\r\n  main.innerHTML = '';\r\n  main.innerHTML = `<div class=\"section-title\">POPULAR NOW<span class=\"section-backlogo\">POPULAR</span></div>`\r\n\r\n  movies.results.forEach((movie, index) => {\r\n    const { title, \r\n            poster_path,\r\n            vote_average, \r\n            backdrop_path,\r\n            overview,\r\n            release_date,\r\n            genre_ids,\r\n            id\r\n          } = movie;\r\n\r\n    const movieElement = document.createElement('div');\r\n    movieElement.classList.add('movie');\r\n\r\n    movieElement.innerHTML = `\r\n      <div id=\"burger\" class=\"burger\">\r\n        <div class=\"line1\"></div>\r\n        <div class=\"line2\"></div>\r\n        <div class=\"line3\"></div>\r\n      </div>\r\n      \r\n      <div class=\"img-container\">\r\n        <div class=\"img\" style=\"background-image: url('${img_path + poster_path}');\"></div>\r\n        <div class=\"overlay\"></div>\r\n      </div>\r\n      <div class=\"movie-info\">\r\n        <div class=\"overview\">\r\n          <div class=\"overview-header\">\r\n            <h3>${title}</h3>\r\n            <div class=\"overview-header__stats\">\r\n              <span>${new Date(release_date).getFullYear()}</span> \r\n              <span class=\"pipe\">|</span> \r\n              <span class=\"${getClassByRate(vote_average).class}\">\r\n                ${vote_average} <i class=\"${getClassByRate(vote_average).star}\"></i></span>\r\n              <span class=\"pipe\">|</span> \r\n              <span>${showMovieListGenres(genre_ids)}</span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"overview-body\">\r\n            <p>${overview}</p>\r\n          </div>\r\n          <div class=\"overview-footer\">\r\n          </div>          \r\n        </div>\r\n      </div>\r\n    `\r\n\r\n    // On each forEach iteration attach the button to an element with \r\n    main.appendChild(movieElement);\r\n    movieElement.addEventListener('click', function() {\r\n      fetchMovie(id);\r\n    });\r\n  });\r\n}\r\n\r\n// Populate Movie details\r\nfunction watchMovie(movie) {\r\n  const { \r\n    title, \r\n    poster_path,\r\n    vote_average, \r\n    backdrop_path,\r\n    overview,\r\n    release_date,\r\n    genres\r\n  } = movie;\r\n\r\n  header.innerHTML = '';\r\n  main.innerHTML = '';\r\n  section.innerHTML = `\r\n    <!-- <div class=\"section-title\">Title<span class=\"section-backlogo\">Title</span></div> -->\r\n    <!-- <h1>Title</h1> -->\r\n\r\n    <section class=\"watch-movie\">\r\n      <div class=\"watch-movie-bg-decor\">${title}</div>\r\n      <div class=\"watch-movie-bg\"></div>\r\n      <div class=\"container\">\r\n        <div class=\"row\">\r\n          <div class=\"col-lg-6 col-sm-12 padding-0\">\r\n            <div class=\"movie-glance\">\r\n              <div class=\"film-page_poster\">\r\n                <img class=\"img-fluid\" src=\"${img_path + poster_path}\" alt=\"${title}\" title=\"${title}\"> \r\n              </div>\r\n              <div class=\"movie-info-container\">\r\n                <div class=\"\">\r\n                  <div class=\"film-page_title\">${title}</div>\r\n                  <div class=\"film-page_title-stats\">\r\n                    <span>${new Date(release_date).getFullYear()}</span>\r\n                    <span>|</span>\r\n                    <span> R </span>\r\n                    <span>|</span>\r\n                    <span> 2hr 20min</span>\r\n                  </div>\r\n                </div>\r\n                <div class=\"film-page_rating\">\r\n                  <span class=\"rating-star\"><i class=\"${getClassByRate(vote_average).star}\"></i></span>\r\n                  <span class=\"rating-score ${getClassByRate(vote_average).class}\">${vote_average}</span>\r\n                  <span class=\"reviews\">87 875 <i class=\"fas fa-user-alt\"></i></span>\r\n                </div>\r\n                <div class=\"film-page_genre\">\r\n                  <span>${showMovieGenres(genres)}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"movie-sources\">\r\n              <ul class=\"play-button-group\">\r\n                <li><a href=\"#\" class=\"btn btn-sm btn-secondary wm-btn\">4K <i class=\"fas fa-play\"></i></a></li>\r\n                <li><a href=\"#\" class=\"btn btn-sm btn-secondary wm-btn\">HD <i class=\"fas fa-play\"></i></a></li>\r\n                <li><a href=\"#\" class=\"btn btn-sm btn-secondary wm-btn\">SD <i class=\"fas fa-play\"></i></a></li>\r\n                <li><a href=\"#\" class=\"btn btn-sm btn-secondary wm-btn\">IN THEATERS <i class=\"fas fa-film\"></i></a></li>\r\n              </ul>\r\n            </div>\r\n          </div> \r\n          <div class=\"col-lg-6 col-sm-12\">\r\n            <div class=\"movie-description\">\r\n              <p>${overview}</p>\r\n            </div>  \r\n          </div> \r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"iframe-container\">\r\n            <iframe src=\"https://www.youtube.com/embed/ngWBddVNVZs?autoplay=1&start=13&mute=1\" \r\n            allow=\"autoplay; picture-in-picture;\" frameborder=\"0\" allowfullscreen>\r\n            </iframe>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n    <section class=\"suggest-movie\">\r\n      <div class=\"container\">\r\n        <div class=\"title\">\r\n          <h4>You Also May Like</h4>\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n    <div class=\"container\" style=\"padding-bottom: 10rem;\">\r\n      <button data-tooltip=\" Tooltip\">Submit Form</button>\r\n    </div>\r\n  `\r\n}\r\n\r\n// Populate Genre lists\r\nfunction toGenresList(genres, list) {\r\n  list.innerHTML = '';\r\n\r\n  genres.forEach((genre, index) => {\r\n    const { name } = genre;\r\n\r\n    const genreElement = document.createElement('li');\r\n    genreElement.classList.add('genre-list');\r\n\r\n    genreElement.innerHTML = `<a href=\"\">${name}</a>`;\r\n\r\n    // On each forEach iteration attach the button to an element with \r\n    list.appendChild(genreElement);\r\n    genreElement.addEventListener('click', function() {\r\n      // fetchMoviebyGenre(id);\r\n    });\r\n  });\r\n}\r\n\r\n\r\n// event added to target if = #burger\r\ndocument.addEventListener('click', function(e){\r\n  if(e.target && e.target.id == 'burger'){\r\n    console.log('listener attached to document');\r\n   }\r\n});\r\n\r\n\r\n// burger menu listener assigned to parent\r\n// document.querySelector(\"#burger\").click();\r\n\r\n//   // Show movie card in Megamenu\r\n//   const randMovie = Math.floor(Math.random() * 20);\r\n//   showMegamenuMovie(respData.results[randMovie]);\r\n\r\n\r\n// Loop search inputs for value\r\n// searchForms.forEach((form) => {\r\n//   form.addEventListener('submit', (e) => {\r\n//     let searchValue = form.querySelector('.search-input').value;\r\n//     e.preventDefault();\r\n    \r\n//     if (searchValue) {\r\n//       main.innerHTML = '';\r\n//       document.querySelector('header').innerHTML = '';\r\n//       document.querySelector('#search-container-nav').style.visibility = 'unset';\r\n//       getMovies(search_url + searchValue);\r\n//       form.querySelector('.search-input').value = '';\r\n//     }\r\n//   });\r\n// });\r\n\r\n// function onhover() {\r\n//   console.log('hi');\r\n//   document.querySelector('.movie-info').className = 'movie-info-active';\r\n// }\r\n\r\n\r\n// document.addEventListener('click', (e) => {\r\n//   if(e.target && e.target.id == 'movie-link') {\r\n//     console.log('clicked to fetch movie info');\r\n//     fetchMovie(497582);\r\n//   }\r\n// });\r\n\r\n// function clickWatch(index) {\r\n//   document.addEventListener('click', function(e) {\r\n//     if(e.target && e.target.id == 'movie-link') {\r\n//       console.log('clicked from closure ', index);\r\n//     }\r\n//   });\r\n// }","console.log('connected 5_marquee.js');\r\n\r\nfunction infiniteMarquee() {\r\n  const root = document.documentElement;\r\n  const marqueeElementsDisplayed = getComputedStyle(root).getPropertyValue('--marquee-elements-displayed');\r\n  const marqueeContent = document.querySelector('.marquee-content');\r\n\r\n  root.style.setProperty(\"--marquee-elements\", marqueeContent.children.length);\r\n\r\n  for (let i = 0; i < marqueeElementsDisplayed; i++) {\r\n    marqueeContent.appendChild(marqueeContent.children[i].cloneNode(true));\r\n  }\r\n}","console.log('connected 6_security.js');\r\n\r\n// Google reCaptcha v2 & form\r\n// document.getElementById('register-form').addEventListener('submit', e => {\r\n//   e.preventDefault();\r\n\r\n//   const captcha = document.querySelector('#g-recaptcha-response').value;\r\n//   const email = document.querySelector('#reg-email').value;\r\n//   const password = document.querySelector('#reg-password').value;\r\n  \r\n//   console.log(email);\r\n\r\n//   return fetch('/register', {\r\n//     method: \"POST\",\r\n//     headers: { 'Content-type':'application/json' },\r\n//     body: JSON.stringify({ email, password, captcha })\r\n//   })\r\n//   .then(res => res.json())\r\n//   .then(data => {\r\n//     console.log(data);\r\n//     if(data.success) {\r\n//       console.log('successfully registered');\r\n//       registrationErrors.recaptca = false;\r\n//       return window.location.href = '/';\r\n//     }\r\n//   });\r\n// });"]}