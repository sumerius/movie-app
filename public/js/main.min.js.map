{"version":3,"sources":["1_global.js","2.0_navbar.js","2.1_regvalidate.js","2.2_pwmeter.js","2.3_operations.js","2.4_megamenu.js","3_genres.js","4_body.js","5_marquee.js","6_security.js"],"names":["console","log","currentTheme","localStorage","getItem","toggleSwitch","document","querySelector","switchTheme","e","target","checked","documentElement","setAttribute","setItem","addEventListener","supportedLangs","locale","getLocale","language","async","ipLookup","data","fetchStartupData","weatherLookup","url","response","fetch","json","languageCodes","goBack","window","history","back","trackIpHistory","Array","prototype","pushMax","value","max","this","length","shift","push","ipObj","ip","country","city","pcname","os","app","time","Date","now","sessionStorage","ipData","JSON","parse","stringify","ipHistory","obj","entries","langsArray","lang","getCookie","indexOf","navigator","languages","substring","cname","name","ca","cookie","split","i","c","charAt","Intl","Collator","supportedLocalesOf","querySelectorAll","forEach","menu","stopPropagation","searchContainerMain","searchForm","searchInput","langSelectors","authBtn","authModal","bootstrap","Modal","getElementById","registerTab","Tab","loginTab","regbutton","loginbutton","reglink","loginlink","hideBtns","toggleShow","element","previousElementSibling","type","className","innerText","show","preventDefault","btn","themeCheckbox","body","classList","toggle","langCookieAge","option","id","location","reload","regform","regemail","regpassword","regcaptcha","emailsmall","emailerr","captchasmall","loginForm","loginemail","loginCaptcha","loginBtn","loginEmailsmall","loginCaptchasmall","registrationErrors","emailbackend","email","password","recaptcha","loginErrors","setErrorFor","input","message","formControl","parentElement","setSuccessFor","isEmail","test","checkEmail","toLowerCase","method","headers","Content-Type","then","res","innerHTML","allFalse","item","validateEmail","emailValue","validatePassword","passValue","validateCaptcha","recaptchaCheck","recaptchaCheckExp","calPasswordStrength","pass","score","letters","Object","variations","digits","lower","upper","nonWords","check","variationCount","parseInt","form","loader","disabled","style","pointerEvents","opacity","msg","meters","passwordScore","backgroundColor","color","pathname","href","showMegamenuMovie","movie","movieCol","main","title","poster_path","vote_average","overview","release_date","genre_ids","movieElement","createElement","add","img_path","getFullYear","getClassByRate","class","star","getGenres","appendChild","fetchMovie","interval","url_params","URLSearchParams","img_path_highres","url_movie_genres","search_url","url_theatersNow","url_theatersUpcoming","url_moviesTrend","url_moviesPopular","url_movieInfo","marqueeReel","gallery","galleryThumbnails","section","header","writeToCache","readFromCache","getFreshData","fetchData","output","cache","fetchGenres","sup_genres","genre_data","genres","list","genresarr","map","genre","join","getMovieGenres","movieId","watchMovie","searchValue","toMain","initMovieData","genresData","toCarousel","array","results","index","backdrop_path","filmSlide","backgroundImage","button","filmElement","infiniteMarquee","movies","rate","root","marqueeElementsDisplayed","getComputedStyle","getPropertyValue","marqueeContent","setProperty","children","cloneNode"],"mappings":"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","file":"main.min.js","sourcesContent":["console.log('connected 1_global.js');\r\n\r\n// Toggle Day and Night mode\r\nconst currentTheme = localStorage.getItem('theme') ? localStorage.getItem('theme') : null;\r\nconst toggleSwitch = document.querySelector('.theme-checkbox');\r\n\r\nif(currentTheme) {\r\n  document.documentElement.setAttribute('data-theme', currentTheme);\r\n\r\n  if(currentTheme === 'dark') {\r\n    toggleSwitch.checked = true;\r\n  }\r\n}\r\n\r\nfunction switchTheme(e) {\r\n  if(e.target.checked) {\r\n    document.documentElement.setAttribute('data-theme', 'dark');\r\n    // Save theme setting to local storage\r\n    localStorage.setItem('theme', 'dark');\r\n  } else {\r\n    document.documentElement.setAttribute('data-theme', 'light');\r\n    localStorage.setItem('theme', 'light');\r\n  }\r\n};\r\n\r\ntoggleSwitch.addEventListener('change', switchTheme, false);\r\n// ------------\r\n\r\n// Set Global frontend language locale\r\nconst supportedLangs = ['en', 'ru', 'es'];    // List of site supported languages\r\nlet locale = getLocale(supportedLangs);\r\nconst language = locale;                      // TMDB API locale for fetch \r\n                 \r\n                 \r\n\r\n/* ==================================================================================== */\r\n// Detect Location\r\n// ipLookup();\r\n\r\n// Lookup IP address via geoip service\r\nasync function ipLookup() {\r\n  const url = 'https://freegeoip.app/json/';        // 15 000 requests per hour\r\n  const data = await fetchStartupData(url);\r\n  console.log(data);\r\n}\r\n\r\n// Collect weather information\r\nasync function weatherLookup() {\r\n  const url = 'https://freegeoip.app/json/';        // 15 000 requests per hour\r\n}\r\n\r\nasync function fetchStartupData(url) {\r\n  const response = await fetch(url);\r\n  const data = await response.json();\r\n  console.log(data);\r\n  return data;\r\n}\r\n\r\n// Set language based on Accept-Language request HTTP header\r\nlet languageCodes = ['sv', 'en', 'es', 'fr', 'dk', 'de', 'cn', 'ru', 'el', 'no'];\r\nconsole.log('LOCALE: ', Intl.Collator.supportedLocalesOf(languageCodes) );\r\n\r\n// Set Language\r\n// const selectedLocale = localStorage.getItem('selectedLocale') ? localStorage.getItem('selectedLocale') : ipLocale;\r\n// const langSelector = document.querySelector('.lang');\r\n// console.log('selectedLocale: ', selectedLocale);\r\n\r\n// ------------\r\n\r\n// Local Client IP tracking\r\ntrackIpHistory();\r\n\r\n// Go back in browser history\r\nfunction goBack() {\r\n  window.history.back();\r\n}\r\n\r\n// Prevent closing on click inside dropdown\r\ndocument.querySelectorAll('.dropdown-menu').forEach(menu => {\r\n  menu.addEventListener('click', (e) => {\r\n    e.stopPropagation();\r\n  });\r\n});\r\n\r\n// Track IP locale\r\nfunction trackIpHistory() {\r\n  // If max items then push to last and delete first\r\n  Array.prototype.pushMax = function(value, max) {\r\n    if (this.length >= max) {\r\n      this.shift();\r\n    }\r\n    this.push(value);\r\n  }\r\n  \r\n  const ipObj = { ip: '23.89.183.80', country: 'Russia', city: 'Tashkent', pcname: 'BEAST', os: 'Windows', app: 'Chrome', time: Date.now() };\r\n\r\n  if (!sessionStorage.getItem('ipCurrent')) {\r\n    console.log('There is no ip Data for this session');\r\n    sessionStorage.setItem('ipCurrent', JSON.stringify(ipObj));\r\n\r\n    // extract ip history array from local storage and add new ip, resave\r\n    ipHistory(ipObj);\r\n  } else {\r\n    const ipData = JSON.parse(sessionStorage.getItem('ipCurrent')) || null;\r\n    console.log('there is IP data: ', ipData);\r\n  }\r\n}\r\n\r\n// Add locale object to localstorage history array\r\nasync function ipHistory(obj) {\r\n  const entries = JSON.parse(localStorage.getItem('ipHistory')) || [];\r\n  entries.pushMax(obj, 10);\r\n  localStorage.setItem('ipHistory', JSON.stringify(entries));\r\n\r\n  console.log('added.................');\r\n}\r\n\r\n// Evaluate preferred language\r\nfunction getLocale(langsArray) {\r\n  let lang;\r\n\r\n  if(!getCookie('language')) {\r\n    lang = navigator.languages[0].substring(0, 2);\r\n  } else {\r\n    const index = supportedLangs.indexOf(getCookie('language'));\r\n    lang = index >= 0 ? getCookie('language') : 'en';  // default to english\r\n  }\r\n  return lang;\r\n}\r\n\r\n// Parse and get cookie data by keyname\r\nfunction getCookie(cname) {\r\n  const name = cname + \"=\";\r\n  const ca = document.cookie.split(';');\r\n  for(let i = 0; i < ca.length; i++) {\r\n    let c = ca[i];\r\n    while (c.charAt(0) == ' ') {\r\n      c = c.substring(1);\r\n    }\r\n    if (c.indexOf(name) == 0) {\r\n      return c.substring(name.length, c.length);\r\n    }\r\n  }\r\n  return \"\";\r\n}\r\n\r\n/* OPEN DROPDOWNS ON HOVER */\r\n// // Vars\r\n// const dropdowns = document.querySelectorAll('nav .dropdown');\r\n// const dropdownMenus = document.querySelectorAll('nav .dropdown-menu');\r\n\r\n// // Open dropdown menu on hover\r\n// dropdowns.forEach(dropdown => {\r\n//   const dropdownMenu = dropdown.querySelector('.dropdown-menu');\r\n//   dropdown.addEventListener('mouseover', () => {\r\n//     removeClass(dropdownMenus);\r\n//     if(window.getComputedStyle(dropdownMenu).visibility === \"visible\") {\r\n//       dropdownMenu.classList.add(\"show\");\r\n//     // }\r\n//   });\r\n// });\r\n\r\n// // Remove class from elements array\r\n// function removeClass(elements) {\r\n//   elements.forEach(element => {\r\n//     element.classList.remove(\"show\");\r\n//   });\r\n// }\r\n/* ======================= */","console.log('connected 2.0_navbar.js');\r\n\r\n// Search form\r\nconst searchContainerMain = document.querySelector('#search-container-main');\r\nconst searchForm = document.querySelector('.search-form');\r\nconst searchInput = document.querySelector('.search-input');\r\n// Select language options\r\nconst langSelectors = document.querySelectorAll('#lang a');\r\n// Authorization\r\nconst authBtn = document.querySelector('#auth-btn');\r\n// Modals\r\nconst authModal = new bootstrap.Modal(document.getElementById('auth-modal')); \r\nconst registerTab = new bootstrap.Tab(document.querySelector('#authTab a[href=\"#register-tab-page\"]'));\r\nconst loginTab = new bootstrap.Tab(document.querySelector('#authTab a[href=\"#login-tab-page\"]'));\r\n// Links to Login and Register tabs in Modal Window\r\nconst regbutton = document.querySelector('#btn-register');\r\nconst loginbutton = document.querySelector('#btn-login');\r\nconst reglink = document.querySelector('#register-link');\r\nconst loginlink = document.querySelector('#login-link');\r\n// Register form password visibility toggle\r\nconst hideBtns = document.querySelectorAll('.toggle-hide');\r\n\r\n// Auth button event\r\nif(authBtn) {\r\n  authBtn.addEventListener('click', () => {\r\n    authModal.show();\r\n    loginTab.show();\r\n  });\r\n}\r\n\r\n// Modal form links between Login and Register modals\r\nreglink.addEventListener('click', function (e) {\r\n  e.preventDefault()\r\n  registerTab.show();\r\n});\r\nloginlink.addEventListener('click', function (e) {\r\n  e.preventDefault()\r\n  loginTab.show();\r\n});\r\n\r\n// Toggle Password Visibility\r\nhideBtns.forEach(btn => {\r\n  btn.addEventListener('click', () => {\r\n    toggleShow(btn);    \r\n  });\r\n});\r\n\r\nfunction toggleShow(element) {\r\n  if (element.previousElementSibling.type === \"password\") {\r\n    element.previousElementSibling.type = \"text\";\r\n    element.className = 'toggle-hide toggle-hide-hide';\r\n    element.innerText = 'HIDE';\r\n  } else {\r\n    element.previousElementSibling.type = \"password\";\r\n    element.className = 'toggle-hide toggle-hide-show';\r\n    element.innerText = 'SHOW';\r\n  }\r\n}\r\n// end toggle password visibility\r\n\r\n// Day & Night theme toggle\r\nconst themeCheckbox = document.querySelector('.theme-checkbox');\r\n\r\nthemeCheckbox.addEventListener('change', () => {\r\n  // change theme of the website\r\n  document.body.classList.toggle('light');\r\n});\r\n\r\n// Select language dropdown\r\nconst langCookieAge = 365 * 24 * 60 * 60;\r\nlangSelectors.forEach(option => {\r\n  option.addEventListener('click', () => {\r\n    document.cookie = \"language=\" + option.id + \"; \" + \"max-age=\" +  langCookieAge + \";path=/\";\r\n    location.reload();\r\n  });\r\n});","console.log('connected 2.1_regvalidate.js');\r\n\r\n// Register form\r\nconst regform = document.querySelector('#reg-form');\r\nconst regemail = document.querySelector('#reg-email');\r\nconst regpassword = document.querySelector('#reg-password');\r\nconst regcaptcha = document.querySelector('#reg-form .g-recaptcha');\r\n// Registration email errors from backend validation\r\nconst emailsmall = document.querySelector('#reg-form .email-small');\r\nconst emailerr = document.querySelector('#reg-form .email-error');\r\nconst captchasmall = document.querySelector('#reg-form .captcha-small');\r\n// Login form\r\nconst loginForm = document.querySelector('#login-form');\r\nconst loginemail = document.querySelector('#login-email');\r\nconst loginCaptcha = document.querySelector('#login-form .g-recaptcha');\r\nconst loginBtn = document.querySelector('#btn-login');\r\n// Login errors display\r\nconst loginEmailsmall = document.querySelector('#login-form .email-small');\r\nconst loginCaptchasmall = document.querySelector('#login-form .captcha-small');\r\n\r\n// Registration form Monitor errors\r\nlet registrationErrors = {\r\n  emailbackend: true,\r\n  email: true,\r\n  password: true,\r\n  recaptcha: true\r\n};\r\n// Login form errors monitor\r\nlet loginErrors = {\r\n  email: true,\r\n};\r\n\r\n// Email field error set True on focus in\r\nregemail.addEventListener('focusin', () => {\r\n  registrationErrors.emailbackend = true;\r\n});\r\n\r\n// Form processing\r\ndocument.querySelectorAll('.auth-form').forEach(form => {\r\n  const loader = form.querySelector('.submit-loader');\r\n  const btn = form.querySelector('.auth-btn');\r\n  // On form submit action\r\n  form.addEventListener('submit', (e) => {\r\n    // Validate registration\r\n    if(form.id === 'reg-form') {\r\n      if(!allFalse(registrationErrors)) {\r\n        e.preventDefault();\r\n        validateEmail(regemail);\r\n        validatePassword();\r\n        validateCaptcha();\r\n        checkEmail();\r\n\r\n        console.log('reg-form validation');\r\n        console.log(registrationErrors);\r\n        console.log(allFalse(registrationErrors));\r\n        return false;\r\n      }\r\n    }\r\n    // Validate login\r\n    if(form.id === 'login-form') {\r\n      validateEmail(loginemail);\r\n      if(!allFalse(loginErrors)) {\r\n        e.preventDefault();\r\n\r\n        console.log('login-form validation');\r\n        console.log(loginErrors);\r\n        console.log(allFalse(loginErrors));\r\n        return false;\r\n      }\r\n    }\r\n    // On wait: disable button and show loader\r\n    btn.disabled = true;\r\n    btn.style.pointerEvents = \"none\"; \r\n    btn.style.opacity = 0.3;\r\n    loader.innerHTML = `\r\n      <?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" style=\"margin: auto; background: none; display: block; shape-rendering: auto;\" width=\"50px\" height=\"50px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n      <path d=\"M10 50A40 40 0 0 0 90 50A40 43 0 0 1 10 50\" fill=\"#ececec\" stroke=\"none\">\r\n        <animateTransform attributeName=\"transform\" type=\"rotate\" dur=\"1s\" repeatCount=\"indefinite\" keyTimes=\"0;1\" values=\"0 50 51.5;360 50 51.5\"></animateTransform>\r\n      </path>\r\n      <!-- [ldio] generated by https://loading.io/ --></svg>\r\n    `;\r\n  });\r\n});\r\n\r\n// Email presence in database validation \r\nregemail.addEventListener('focusout', () => {\r\n  checkEmail();\r\n});\r\n\r\n// Validate registration email\r\nregemail.addEventListener('keyup', (e) => {\r\n  validateEmail(regemail);\r\n});\r\n\r\n// Validate login email\r\nloginemail.addEventListener('focusout', (e) => {\r\n  validateEmail(loginemail);\r\n});\r\n\r\n// Validate password\r\nregpassword.addEventListener('keyup', (e) => {\r\n  validatePassword();\r\n});\r\n\r\n// Output message and style on Successful Validation\r\nfunction setErrorFor(input, message) {\r\n  const formControl = input.parentElement;\r\n  const small = formControl.querySelector('.small');\r\n\r\n  // add error message inside small\r\n  small.innerText = message;\r\n\r\n  // add error class\r\n  formControl.className = 'form-group error';\r\n}\r\n\r\n// Output message and style on Error\r\nfunction setSuccessFor(input) {\r\n  const formControl = input.parentElement;\r\n  formControl.className = 'form-group success';\r\n}\r\n\r\n// Validate email structure\r\nfunction isEmail(email) {\r\n  return /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email);\r\n}\r\n\r\n// Check database for Email presence\r\nfunction checkEmail() {\r\n  let email = document.querySelector('#reg-email').value.toLowerCase();\r\n  \r\n  // send email input value to /usercheck route of the API\r\n  fetch('/usercheck', {\r\n    method: 'post',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({email})\r\n  })\r\n  // receive and process response from the API\r\n  .then(res => res.json())\r\n  .then(data => {\r\n    console.log(data);\r\n    if(data.message != 'success'){\r\n      emailsmall.innerHTML = `${data.message}`;\r\n\r\n      const formControl = emailsmall.parentElement;\r\n      formControl.className = 'form-group error';\r\n      registrationErrors.emailbackend = true;\r\n    } else {\r\n      // emailerr.innerHTML = '';\r\n      registrationErrors.emailbackend = false;\r\n    }\r\n  });\r\n}\r\n\r\n// Check if all errors cleared\r\nfunction allFalse(obj) {\r\n  for(let item in obj)\r\n    if(obj[item]) return false;\r\n    \r\n  return true;\r\n}\r\n\r\n// Validate Email\r\nfunction validateEmail(element) {\r\n  const emailValue = element.value;\r\n    \r\n  if(emailValue === '' || emailValue === null) {\r\n    setErrorFor(element, \"Email cannot be blank\");\r\n    registrationErrors.email = true;\r\n    loginErrors.email = true;\r\n  } else if(emailValue.length <=6) {\r\n    setErrorFor(element, \"Email too short\");\r\n    registrationErrors.email = true;\r\n    loginErrors.email = true;\r\n  } else if(!isEmail(emailValue)) {\r\n    setErrorFor(element, \"Email is not valid\");\r\n    registrationErrors.email = true;\r\n    loginErrors.email = true;\r\n  } else {\r\n    setSuccessFor(element);\r\n    registrationErrors.email = false;\r\n    loginErrors.email = false;\r\n  } \r\n}\r\n\r\n// Validate Password\r\nfunction validatePassword() {\r\n  passValue = regpassword.value;\r\n  \r\n  if(passValue === '' || passValue === null) {\r\n    setErrorFor(regpassword, \"Password cannot be blank\");\r\n    registrationErrors.password = true;\r\n  } else if(passValue.length <= 6) {\r\n    setErrorFor(regpassword, \"Password must be 7+ characters\");\r\n    registrationErrors.password = true;\r\n  } else {\r\n    setSuccessFor(regpassword);\r\n    registrationErrors.password = false;\r\n  }\r\n}\r\n\r\n// Google reCaptcha validation\r\nfunction validateCaptcha() {\r\n  const captchaValue = regemail.value;\r\n    \r\n  if(registrationErrors.recaptcha != false) {\r\n    setErrorFor(regcaptcha, \"Are you human? Please check captcha\");\r\n  } else {\r\n    setSuccessFor(regcaptcha);\r\n  } \r\n}\r\nfunction recaptchaCheck() {\r\n  registrationErrors.recaptcha = false;\r\n  setSuccessFor(regcaptcha);\r\n}\r\nfunction recaptchaCheckExp() {\r\n  registrationErrors.recaptcha = true;\r\n  setErrorFor(regcaptcha, \"Are you human?\");\r\n}","console.log('connected 2.2_pwmeter.js');\r\n\r\ndocument.querySelector('#reg-password').addEventListener('keyup', function() {\r\n  const msg = document.getElementById('passwordmessage');\r\n  const meters = document.querySelectorAll('.pwmeter span');\r\n\r\n  // Calculate the strength of the password\r\n  let passwordScore = calPasswordStrength(this.value);\r\n\r\n  // Set the width of the password meter to a multiple of the score\r\n  // meter.style.width = (passwordScore+1) * 1 + 'px';\r\n\r\n  if (passwordScore <= 40) {\r\n    meters[0].style.backgroundColor = 'red';\r\n    meters[0].className = 'meter-span-on';\r\n    meters[1].className = 'meter-span-off';\r\n    meters[2].className = 'meter-span-off';\r\n    msg.style.color = 'coral';\r\n    msg.innerHTML = 'Weak password';\r\n  } else if (passwordScore <= 77) {\r\n    meters[1].style.backgroundColor = 'orange';\r\n    meters[1].className = 'meter-span-on';\r\n    meters[2].className = 'meter-span-off';\r\n    msg.style.color = 'orange';\r\n    msg.innerHTML = 'Password is average';\r\n  } else {\r\n    meters[2].style.backgroundColor = 'green';\r\n    meters[2].className = 'meter-span-on';\r\n    msg.style.color = 'green';\r\n    msg.innerHTML = 'Your password is strong';\r\n  }\r\n\r\n  // If input empty, there is no text output\r\n  if (this.value == \"\") {\r\n    meters[0].className = 'meter-span-off';\r\n    meters[1].className = 'meter-span-off';\r\n    meters[2].className = 'meter-span-off';\r\n    msg.innerHTML = '';\r\n  }\r\n});\r\n\r\n// Return password score\r\nfunction calPasswordStrength(pass) {\r\n  var score = 0;\r\n  if (!pass) return score;\r\n\r\n  // award every unique letter until 5 repetitions\r\n  var letters = new Object();\r\n  for (var i=0; i<pass.length; i++) {\r\n    letters[pass[i]] = (letters[pass[i]] || 0) + 1;\r\n    score += 5.0 / letters[pass[i]];\r\n  }\r\n\r\n  // bonus points for mixing it up\r\n  var variations = {\r\n    digits: /\\d/.test(pass),\r\n    lower: /[a-z]/.test(pass),\r\n    upper: /[A-Z]/.test(pass),\r\n    nonWords: /\\W/.test(pass),\r\n  }\r\n\r\n  variationCount = 0;\r\n  for (var check in variations) {\r\n    variationCount += (variations[check] == true) ? 1 : 0;\r\n  }\r\n  score += (variationCount - 1) * 10;\r\n\r\n  return parseInt(score);\r\n}","console.log('connected 2.3_operations.js');\r\n\r\n// Reload with Register modal tab open if client-side validation fails\r\nif(sessionStorage.getItem('regformErrors') === 'true') {\r\n  document.addEventListener(\"DOMContentLoaded\", () => {\r\n    authModal.show();\r\n    registerTab.show();\r\n  });\r\n}\r\n// Prevent reOpening registration form on reload\r\nsessionStorage.setItem('regformErrors', false);\r\n\r\n// If login fails open login modal\r\nif(sessionStorage.getItem('loginErrors') === 'true') {\r\n  document.addEventListener(\"DOMContentLoaded\", () => {\r\n    authModal.show();\r\n    loginTab.show();\r\n  });\r\n}\r\n// Prevent reOpening login form on reload\r\nsessionStorage.setItem('loginErrors', false);\r\n\r\n// Redirect to home directory on Authorization modal close if in subdirectories\r\nif(location.pathname != '/') {\r\n  document.querySelector('#auth-modal').addEventListener('hide.bs.modal', (e) => {\r\n    console.log('hida maida');\r\n    window.location.href = '/';\r\n  });\r\n}\r\n","// Show movie information in Movie Column of Movie Megamenu\r\nconst showMegamenuMovie = movie => {\r\n  const movieCol = document.querySelector('.movie-column');\r\n  \r\n  movieCol.innerHTML = '';\r\n\r\n  if(!movie) {\r\n    main.innerHTML = `<div class=\"section-title\">Movie info not available<span class=\"section-backlogo\">Movie info not available</span></div>`;\r\n    return false;\r\n  }\r\n\r\n  const { title, \r\n          poster_path,\r\n          vote_average, \r\n          overview,\r\n          release_date,\r\n          genre_ids,\r\n          id\r\n        } = movie;\r\n\r\n  const movieElement = document.createElement('div');\r\n  movieElement.classList.add('movieCol');\r\n\r\n  movieElement.innerHTML = `\r\n    \r\n      <div style=\"background-image: url('${img_path + poster_path}'); background-size: cover; height: 250px; width: 100px\"></div>\r\n        <div>\r\n          <h3>${title}</h3>\r\n            <span>${new Date(release_date).getFullYear()}</span> \r\n            <span class=\"pipe\">|</span> \r\n            <span class=\"${getClassByRate(vote_average).class}\">\r\n              ${vote_average} <i class=\"${getClassByRate(vote_average).star}\"></i></span>\r\n            <span class=\"pipe\">|</span> \r\n            <span>${getGenres(genre_ids)}</span>\r\n        </div>\r\n        \r\n        <p>${overview}</p>\r\n      </div>\r\n    </div>\r\n  `\r\n\r\n  // Attach button to an element for movie details \r\n  movieCol.appendChild(movieElement);\r\n  movieElement.addEventListener('click', function() {\r\n    fetchMovie(id);\r\n  });\r\n}","console.log('connected 3_genres.js');\r\n\r\n// TMDB api caching fetch interval\r\nconst interval = 15 * 1000;   // 15s\r\n\r\n// TMDb API url parameters\r\nconst url_params = new URLSearchParams({\r\n  language,\r\n});\r\n\r\nconst img_path = 'https://image.tmdb.org/t/p/w300';\r\nconst img_path_highres = 'https://image.tmdb.org/t/p/w1280';\r\n\r\nconst url_movie_genres = `/api/movies/genres?`;\r\nconst search_url = `/api/movies/search?query=`;\r\nconst url_theatersNow = `/api/theaters/nowplaying?`;\r\nconst url_theatersUpcoming = `/api/theaters/upcoming?`;\r\nconst url_moviesTrend = `/api/movies/trending?`;\r\nconst url_moviesPopular = `/api/movies/popular?`;\r\nconst url_movieInfo = `/api/movies/movieinfo/`\r\n\r\nconst marqueeReel = document.querySelector('.marquee-content');\r\nconst gallery = document.querySelector('.carousel-inner');\r\nconst galleryThumbnails = document.querySelector('.carousel-indicators');\r\nconst main = document.querySelector('main');\r\nconst section = document.querySelector('section');\r\nconst header = document.querySelector('header');\r\n\r\n\r\n// Read and Write data to local storage cache\r\nconst writeToCache = (url, data) => localStorage.setItem(url, JSON.stringify(data));\r\nconst readFromCache = url => JSON.parse(localStorage.getItem(url)) || null;\r\n\r\n// Fetch fresh data from API and cache\r\nconst getFreshData = async (url) => {\r\n  const response = await fetch(url);\r\n  let data = await response.json();\r\n  data.time = Date.now();\r\n\r\n  return data;\r\n};\r\n\r\n// Fetch data with cache by default\r\nconst fetchData = async (url, output, cache = true) => {\r\n  if(readFromCache(url) && readFromCache(url).time > Date.now() - interval) {\r\n\r\n    console.log('cached Data with time: ', readFromCache(url).time);\r\n    output(readFromCache(url));\r\n  } else {\r\n    const data = await getFreshData(url);\r\n\r\n    if(cache) {\r\n      writeToCache(url, data);\r\n      console.log('fetch cached.........');\r\n    }\r\n\r\n    console.log('fresh data from API with time: ', data.time);\r\n    output(data);\r\n  }\r\n};\r\n\r\n// Get Movie Genres\r\nasync function fetchGenres(url, cache = true) {\r\n  if(readFromCache(url) && readFromCache(url).time > Date.now() - interval) {\r\n    return readFromCache(url);\r\n  } else {\r\n    const data = await getFreshData(url);\r\n    if(cache) {\r\n      writeToCache(url, data);\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\n\r\n// Movies genres list\r\nlet sup_genres;       // Dynamic\r\nlet genre_data = {    // Static\r\n  \"genres\": [\r\n    {\r\n      \"id\": 28,\r\n      \"name\": \"Action\"\r\n    },\r\n    {\r\n      \"id\": 12,\r\n      \"name\": \"Adventure\"\r\n    },\r\n    {\r\n      \"id\": 16,\r\n      \"name\": \"Animation\"\r\n    },\r\n    {\r\n      \"id\": 35,\r\n      \"name\": \"Comedy\"\r\n    },\r\n    {\r\n      \"id\": 80,\r\n      \"name\": \"Crime\"\r\n    },\r\n    {\r\n      \"id\": 99,\r\n      \"name\": \"Documentary\"\r\n    },\r\n    {\r\n      \"id\": 18,\r\n      \"name\": \"Drama\"\r\n    },\r\n    {\r\n      \"id\": 10751,\r\n      \"name\": \"Family\"\r\n    },\r\n    {\r\n      \"id\": 14,\r\n      \"name\": \"Fantasy\"\r\n    },\r\n    {\r\n      \"id\": 36,\r\n      \"name\": \"History\"\r\n    },\r\n    {\r\n      \"id\": 27,\r\n      \"name\": \"Horror\"\r\n    },\r\n    {\r\n      \"id\": 10402,\r\n      \"name\": \"Music\"\r\n    },\r\n    {\r\n      \"id\": 9648,\r\n      \"name\": \"Mystery\"\r\n    },\r\n    {\r\n      \"id\": 10749,\r\n      \"name\": \"Romance\"\r\n    },\r\n    {\r\n      \"id\": 878,\r\n      \"name\": \"Science Fiction\"\r\n    },\r\n    {\r\n      \"id\": 10770,\r\n      \"name\": \"TV Movie\"\r\n    },\r\n    {\r\n      \"id\": 53,\r\n      \"name\": \"Thriller\"\r\n    },\r\n    {\r\n      \"id\": 10752,\r\n      \"name\": \"War\"\r\n    },\r\n    {\r\n      \"id\": 37,\r\n      \"name\": \"Western\"\r\n    }\r\n  ]\r\n}\r\n\r\n\r\n// Loop genres for Movie Lists\r\nconst getGenres = (genres) => {\r\n    const list = sup_genres;\r\n    let genresarr = [];\r\n    genres.map(genre => {\r\n      list.map(item => {\r\n        if(genre == item.id) {\r\n          genresarr.push(item.name);\r\n        } \r\n      });\r\n    });\r\n    return genresarr.join(', ');\r\n};\r\n\r\n// Loop genres for Movie Details page\r\nconst getMovieGenres = (genres) => {\r\n  const list = genres;\r\n  let genresarr = [];\r\n    list.map(item => {\r\n      genresarr.push(item.name);\r\n    });\r\n  return genresarr.join(', ');\r\n};","console.log('connected 4_body.js');\r\n\r\n\r\n// Search movies (w/o caching)\r\nsearchForm.addEventListener('submit', (e) => {\r\n  e.preventDefault();\r\n  const searchValue = searchInput.value;\r\n  const url = search_url + searchValue + \"&\" + url_params;\r\n  \r\n  if (searchValue) {\r\n    header.innerHTML = '';\r\n    main.innerHTML = '';\r\n    document.querySelector('header').innerHTML = '';\r\n\r\n    fetchData(url, toMain, 0);\r\n    searchInput.value = '';\r\n  }\r\n});\r\n\r\n// Fetch movie details by Id\r\nasync function fetchMovie(movieId) {\r\n  const url = `${url_movieInfo + movieId}?${url_params}`;\r\n  const data = fetchData(url, watchMovie);\r\n  console.log('url: ', url);\r\n}\r\n\r\n\r\n// Initiate Data Fetch if at root url\r\nconst initMovieData = async () => {\r\n  const genresData = await fetchGenres(url_movie_genres + url_params);\r\n  sup_genres = genresData.genres;\r\n\r\n  // fetchData(url_theatersNow, showTN);\r\n  // fetchData(url_theatersUpcoming, showTU);\r\n  fetchData(url_moviesTrend + url_params, toCarousel);\r\n  fetchData(url_moviesPopular + url_params, toMain);\r\n};\r\ninitMovieData();\r\n\r\n\r\n// Populate Carousel\r\nfunction toCarousel(array) {\r\n  gallery.innerHTML = '';\r\n  galleryThumbnails.innerHTML = '';\r\n\r\n  array.results.forEach((item, index) => {\r\n    const { title,\r\n            poster_path,\r\n            vote_average,\r\n            backdrop_path,\r\n            overview,\r\n            release_date,\r\n            genre_ids,\r\n            id\r\n          } = item;\r\n\r\n    const filmSlide = document.createElement('div');\r\n    filmSlide.classList.add('carousel-item');\r\n    index === 0 ? filmSlide.className += \" active\" : '';\r\n    filmSlide.style.backgroundImage = `url(\"${img_path_highres + backdrop_path}\")`;\r\n    \r\n    // Slides output\r\n    filmSlide.innerHTML = `\r\n      <div class=\"fade-overlay\"></div>\r\n      <div class=\"carousel-caption d-md-block\">\r\n      <!-- <div class=\"carousel-caption d-none d-md-block\"> -->\r\n        <h2 class=\"display-4\">${title}</h2>\r\n          <p class=\"lead overview-header__stats\">\r\n            <span class=\"carousel-caption-overview\">${new Date(release_date).getFullYear()}</span> \r\n            <span class=\"pipe carousel-caption-overview\">|</span> \r\n            <span class=\"carousel-caption-overview\">\r\n              <i class=\"${vote_average == 0 ? \"\" : getClassByRate(vote_average).star}\"></i> ${vote_average == 0 ? \"\" : vote_average} </span>\r\n            <span class=\"pipe carousel-caption-overview\">|</span> \r\n            <span class=\"carousel-caption-overview\">${getGenres(genre_ids)}</span>\r\n          </p>\r\n        <div class=\"film-details\">\r\n          <a class=\"button-container-${index}\" href=\"#\"></a>\r\n          <p class=\"lead\">${overview.substring(0, 200)}...</p>\r\n        </div>\r\n      </div>\r\n      `;\r\n      \r\n      gallery.appendChild(filmSlide);\r\n\r\n      // Create a button and attach click event listener\r\n      const button = document.createElement(\"button\");\r\n      button.classList.add('btn-custom');\r\n      button.className += ' mb-3'\r\n      button.innerHTML = '<i class=\"fas fa-play\"></i> Play';\r\n      button.addEventListener('click', function() {\r\n        fetchMovie(id);\r\n      });\r\n      // On each forEach iteration attach the button to an element with \r\n      // a unique id\r\n      document.querySelector(\".button-container-\" + index).appendChild(button);\r\n\r\n    // Icons output\r\n    const filmElement = document.createElement('li');\r\n    // index === 0 ? filmElement.className += \" active\" : '';\r\n    filmElement.setAttribute(\"data-target\", \"#carousel-main\");\r\n    filmElement.setAttribute(\"data-slide-to\", `${index}`);\r\n    filmElement.innerHTML = `\r\n      <div class=\"card-dummy\">\r\n        <img src=\"${img_path + poster_path}\">\r\n      </div>\r\n    `\r\n    marqueeReel.appendChild(filmElement);\r\n  });\r\n\r\n  // Fill marquee space between last and first card \r\n  infiniteMarquee();\r\n}\r\n\r\n// Populate Main div\r\nfunction toMain(movies) {\r\n  if(movies.length < 1) {\r\n    main.innerHTML = '';\r\n    main.innerHTML = `<div class=\"section-title\">No Results Found<span class=\"section-backlogo\">No Results Found</span></div>`;\r\n    return false;\r\n  }\r\n\r\n  main.innerHTML = '';\r\n  main.innerHTML = `<div class=\"section-title\">POPULAR NOW<span class=\"section-backlogo\">POPULAR</span></div>`\r\n\r\n  movies.results.forEach((movie, index) => {\r\n    const { title, \r\n            poster_path,\r\n            vote_average, \r\n            backdrop_path,\r\n            overview,\r\n            release_date,\r\n            genre_ids,\r\n            id\r\n          } = movie;\r\n\r\n    const movieElement = document.createElement('div');\r\n    movieElement.classList.add('movie');\r\n\r\n    movieElement.innerHTML = `\r\n      <div id=\"burger\" class=\"burger\">\r\n        <div class=\"line1\"></div>\r\n        <div class=\"line2\"></div>\r\n        <div class=\"line3\"></div>\r\n      </div>\r\n      \r\n      <div class=\"img-container\">\r\n        <div class=\"img\" style=\"background-image: url('${img_path + poster_path}');\"></div>\r\n        <div class=\"overlay\"></div>\r\n      </div>\r\n      <div class=\"movie-info\">\r\n        <div class=\"overview\">\r\n          <div class=\"overview-header\">\r\n            <h3>${title}</h3>\r\n            <div class=\"overview-header__stats\">\r\n              <span>${new Date(release_date).getFullYear()}</span> \r\n              <span class=\"pipe\">|</span> \r\n              <span class=\"${getClassByRate(vote_average).class}\">\r\n                ${vote_average} <i class=\"${getClassByRate(vote_average).star}\"></i></span>\r\n              <span class=\"pipe\">|</span> \r\n              <span>${getGenres(genre_ids)}</span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"overview-body\">\r\n            <p>${overview}</p>\r\n          </div>\r\n          <div class=\"overview-footer\">\r\n          </div>          \r\n        </div>\r\n      </div>\r\n    `\r\n\r\n    // On each forEach iteration attach the button to an element with \r\n    main.appendChild(movieElement);\r\n    movieElement.addEventListener('click', function() {\r\n      fetchMovie(id);\r\n    });\r\n  });\r\n}\r\n\r\n// Movie Details\r\nfunction watchMovie(movie) {\r\n  const { \r\n    title, \r\n    poster_path,\r\n    vote_average, \r\n    backdrop_path,\r\n    overview,\r\n    release_date,\r\n    genres\r\n  } = movie;\r\n\r\n  header.innerHTML = '';\r\n  main.innerHTML = '';\r\n  section.innerHTML = `\r\n    <!-- <div class=\"section-title\">Title<span class=\"section-backlogo\">Title</span></div> -->\r\n    <!-- <h1>Title</h1> -->\r\n\r\n    <section class=\"watch-movie\">\r\n      <div class=\"watch-movie-bg-decor\">${title}</div>\r\n      <div class=\"watch-movie-bg\"></div>\r\n      <div class=\"container\">\r\n        <div class=\"row\">\r\n          <div class=\"col-lg-6 col-sm-12 padding-0\">\r\n            <div class=\"movie-glance\">\r\n              <div class=\"film-page_poster\">\r\n                <img class=\"img-fluid\" src=\"${img_path + poster_path}\" alt=\"${title}\" title=\"${title}\"> \r\n              </div>\r\n              <div class=\"movie-info-container\">\r\n                <div class=\"\">\r\n                  <div class=\"film-page_title\">${title}</div>\r\n                  <div class=\"film-page_title-stats\">\r\n                    <span>${new Date(release_date).getFullYear()}</span>\r\n                    <span>|</span>\r\n                    <span> R </span>\r\n                    <span>|</span>\r\n                    <span> 2hr 20min</span>\r\n                  </div>\r\n                </div>\r\n                <div class=\"film-page_rating\">\r\n                  <span class=\"rating-star\"><i class=\"${getClassByRate(vote_average).star}\"></i></span>\r\n                  <span class=\"rating-score ${getClassByRate(vote_average).class}\">${vote_average}</span>\r\n                  <span class=\"reviews\">87 875 <i class=\"fas fa-user-alt\"></i></span>\r\n                </div>\r\n                <div class=\"film-page_genre\">\r\n                  <span>${getMovieGenres(genres)}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"movie-sources\">\r\n              <ul class=\"play-button-group\">\r\n                <li><a href=\"#\" class=\"btn btn-sm btn-secondary wm-btn\">4K <i class=\"fas fa-play\"></i></a></li>\r\n                <li><a href=\"#\" class=\"btn btn-sm btn-secondary wm-btn\">HD <i class=\"fas fa-play\"></i></a></li>\r\n                <li><a href=\"#\" class=\"btn btn-sm btn-secondary wm-btn\">SD <i class=\"fas fa-play\"></i></a></li>\r\n                <li><a href=\"#\" class=\"btn btn-sm btn-secondary wm-btn\">IN THEATERS <i class=\"fas fa-film\"></i></a></li>\r\n              </ul>\r\n            </div>\r\n          </div> \r\n          <div class=\"col-lg-6 col-sm-12\">\r\n            <div class=\"movie-description\">\r\n              <p>${overview}</p>\r\n            </div>  \r\n          </div> \r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"iframe-container\">\r\n            <iframe src=\"https://www.youtube.com/embed/ngWBddVNVZs?autoplay=1&start=13&mute=1\" \r\n            allow=\"autoplay; picture-in-picture;\" frameborder=\"0\" allowfullscreen>\r\n            </iframe>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n    <section class=\"suggest-movie\">\r\n      <div class=\"container\">\r\n        <div class=\"title\">\r\n          <h4>You Also May Like</h4>\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n    <div class=\"container\" style=\"padding-bottom: 10rem;\">\r\n      <button data-tooltip=\" Tooltip\">Submit Form</button>\r\n    </div>\r\n  `\r\n}\r\n\r\n// Evaluate movie rating scores\r\nfunction getClassByRate(rate) {\r\n  if (rate == 0) {\r\n    return {\r\n      class: \"hide\",\r\n    }\r\n  } else if (rate >= 7) {\r\n    return {\r\n      class: \"green\",\r\n      star: \"fas fa-star\"\r\n    }\r\n  } else if (rate > 5) {\r\n    return {\r\n      class: \"orange\",\r\n      star: \"fas fa-star-half\"\r\n    }\r\n  } else {\r\n    return {\r\n      class: \"red\",\r\n      star: \"far fa-star\"\r\n    }\r\n  }\r\n}\r\n\r\n// event added to target if = #burger\r\ndocument.addEventListener('click', function(e){\r\n  if(e.target && e.target.id == 'burger'){\r\n    console.log('listener attached to document');\r\n   }\r\n});\r\n\r\n\r\n// burger menu listener assigned to parent\r\n// document.querySelector(\"#burger\").click();\r\n\r\n//   // Show movie card in Megamenu\r\n//   const randMovie = Math.floor(Math.random() * 20);\r\n//   showMegamenuMovie(respData.results[randMovie]);\r\n\r\n\r\n// Loop search inputs for value\r\n// searchForms.forEach((form) => {\r\n//   form.addEventListener('submit', (e) => {\r\n//     let searchValue = form.querySelector('.search-input').value;\r\n//     e.preventDefault();\r\n    \r\n//     if (searchValue) {\r\n//       main.innerHTML = '';\r\n//       document.querySelector('header').innerHTML = '';\r\n//       document.querySelector('#search-container-nav').style.visibility = 'unset';\r\n//       getMovies(search_url + searchValue);\r\n//       form.querySelector('.search-input').value = '';\r\n//     }\r\n//   });\r\n// });\r\n\r\n// function onhover() {\r\n//   console.log('hi');\r\n//   document.querySelector('.movie-info').className = 'movie-info-active';\r\n// }\r\n\r\n\r\n// document.addEventListener('click', (e) => {\r\n//   if(e.target && e.target.id == 'movie-link') {\r\n//     console.log('clicked to fetch movie info');\r\n//     fetchMovie(497582);\r\n//   }\r\n// });\r\n\r\n// function clickWatch(index) {\r\n//   document.addEventListener('click', function(e) {\r\n//     if(e.target && e.target.id == 'movie-link') {\r\n//       console.log('clicked from closure ', index);\r\n//     }\r\n//   });\r\n// }","console.log('connected 5_marquee.js');\r\n\r\nfunction infiniteMarquee() {\r\n  const root = document.documentElement;\r\n  const marqueeElementsDisplayed = getComputedStyle(root).getPropertyValue('--marquee-elements-displayed');\r\n  const marqueeContent = document.querySelector('.marquee-content');\r\n\r\n  root.style.setProperty(\"--marquee-elements\", marqueeContent.children.length);\r\n\r\n  for (let i = 0; i < marqueeElementsDisplayed; i++) {\r\n    marqueeContent.appendChild(marqueeContent.children[i].cloneNode(true));\r\n  }\r\n}","console.log('connected 6_security.js');\r\n\r\n// Google reCaptcha v2 & form\r\n// document.getElementById('register-form').addEventListener('submit', e => {\r\n//   e.preventDefault();\r\n\r\n//   const captcha = document.querySelector('#g-recaptcha-response').value;\r\n//   const email = document.querySelector('#reg-email').value;\r\n//   const password = document.querySelector('#reg-password').value;\r\n  \r\n//   console.log(email);\r\n\r\n//   return fetch('/register', {\r\n//     method: \"POST\",\r\n//     headers: { 'Content-type':'application/json' },\r\n//     body: JSON.stringify({ email, password, captcha })\r\n//   })\r\n//   .then(res => res.json())\r\n//   .then(data => {\r\n//     console.log(data);\r\n//     if(data.success) {\r\n//       console.log('successfully registered');\r\n//       registrationErrors.recaptca = false;\r\n//       return window.location.href = '/';\r\n//     }\r\n//   });\r\n// });"]}