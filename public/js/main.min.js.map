{"version":3,"sources":["01_startup.js","02_utilities.js","03_global.js","04_listeners.js","05_instructions.js","06_navbar.js","07_megamenu.js","08_body.js","09_marquee.js","10_forms.js","11_regvalidate.js","12_pwmeter.js","13_profile.js","14_gmap.js"],"names":["console","log","currentTheme","getCookie","toggleSwitch","document","querySelector","supportedLangs","locale","getLocale","language","cacheInterval","coordinates","cname","name","ca","cookie","split","i","length","c","charAt","substring","indexOf","langArray","lang","navigator","languages","timeFormat","ms","h","getHours","toString","m","getMinutes","checkTime","parseInt","conditionTheme","sunrise","sunset","now","Date","dayTheme","nightTheme","documentElement","setAttribute","checked","goBack","window","history","back","writeToCache","url","data","localStorage","setItem","JSON","stringify","readFromCache","parse","getItem","fetchFresh","async","res","fetch","valid","ok","Error","statusText","json","time","err","fetchData","interval","cache","cacheData","fetchMovie","url_movieInfo","movieId","url_params","watchMovie","getGeoip","getLocation","Promise","rej","geolocation","getCurrentPosition","getCoords","permission","permissions","query","state","location","latitude","parseFloat","coords","toFixed","longitude","getWeather","lat","lon","getSunTimes","geoip","weather","suntimes","sys","message","clearPage","header","innerHTML","sections","forEach","section","getClassByRate","rate","class","star","sessionIpData","sessionStorage","ipObj","addtoIpHistory","obj","Array","prototype","pushMax","value","max","this","shift","push","entries","showMovieListGenres","genres","list","movieGenres","genresarr","map","genre","item","id","join","showMovieGenres","URLSearchParams","img_path","img_path_highres","url_movie_genres","url_search","url_theatersNow","url_theatersUpcoming","url_moviesTrend","url_moviesPopular","url_similars","marqueeReel","gallery","galleryThumbnails","searchResults","querySelectorAll","searchContainerMain","searchForm","searchInput","addEventListener","switchTheme","menu","e","stopPropagation","preventDefault","searchValue","then","results","toSection","autoTheme","setTheme","style","transition","target","setInterval","authModal","show","registerTab","loginTab","pathname","href","langSelectors","authBtn","bootstrap","Modal","getElementById","Tab","regbutton","loginbutton","reglink","loginlink","hideBtns","toggleShow","element","previousElementSibling","type","children","display","btn","themeCheckbox","body","classList","toggle","langCookieAge","option","reload","showMegamenuMovie","movie","movieCol","main","title","poster_path","vote_average","overview","release_date","genre_ids","movieElement","createElement","add","getFullYear","getGenres","appendChild","secTheaters","secTheatersPick","secMovies","secMoviesPick","secTv","initData","showGenres","showMoviesTrending","showInTheaters","showMoviesPopular","toGenresList","moviesIntheaters","picked","pickShow","toTheaterPicked","movies","similars","getSimilarShows","toSimilars","toMoviePicked","shows","Math","floor","random","slice","moviesTrending","toCarousel","array","index","backdrop_path","filmSlide","className","backgroundImage","button","filmElement","infiniteMarquee","getAttribute","showMap","initMap","setTimeout","scrollTo","genreElement","root","marqueeElementsDisplayed","getComputedStyle","getPropertyValue","marqueeContent","setProperty","cloneNode","contactForm","email","method","headers","Content-type","opacity","regform","regemail","regpassword","regcaptcha","emailsmall","emailerr","captchasmall","loginForm","loginemail","loginCaptcha","loginBtn","loginEmailsmall","loginCaptchasmall","registrationErrors","emailbackend","password","recaptcha","loginErrors","setErrorFor","input","formControl","parentElement","innerText","setSuccessFor","isEmail","test","checkEmail","toLowerCase","Content-Type","allFalse","validateEmail","emailValue","validatePassword","passValue","validateCaptcha","recaptchaCheck","recaptchaCheckExp","calPasswordStrength","pass","score","letters","Object","variations","digits","lower","upper","nonWords","check","variationCount","form","loader","disabled","pointerEvents","msg","meters","passwordScore","backgroundColor","color","url_weatherInfo","clientInfo","profileInit","ipdata","showWeather","showClientside","params","units","toWeather","toClientInfo","city","temp","icon","desc","description","weatherElement","spans","ip","country_name","time_zone","marker","myLatLng","lng","google","maps","Map","center","zoom","disableDefaultUI","Marker","position","animation","Animation","DROP","addListener","toggleBounce","getAnimation","setAnimation","BOUNCE"],"mappings":"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","file":"main.min.js","sourcesContent":["console.log('startup.js');\r\n\r\nconst currentTheme = getCookie('theme') || null;\r\nconst toggleSwitch = document.querySelector('.theme-checkbox');\r\n\r\n// Set Global frontend language locale\r\nconst supportedLangs = ['en', 'ru', 'es']; // List of site supported languages\r\nlet locale = getLocale(supportedLangs);\r\nconst language = locale; // TMDB API locale for fetch\r\n\r\n// Default caching interval\r\nconst cacheInterval = 1000 * 60 * 60;\r\n\r\n// Geo coordinates\r\nlet coordinates;\r\n","console.log('utilities.js');\r\n\r\n// Parse and get cookie data by keyname\r\nfunction getCookie(cname) {\r\n  const name = cname + '=';\r\n  const ca = document.cookie.split(';');\r\n  for (let i = 0; i < ca.length; i++) {\r\n    let c = ca[i];\r\n    while (c.charAt(0) == ' ') {\r\n      c = c.substring(1);\r\n    }\r\n    if (c.indexOf(name) == 0) {\r\n      return c.substring(name.length, c.length);\r\n    }\r\n  }\r\n  return '';\r\n}\r\n\r\n// Evaluate preferred language\r\nfunction getLocale(langArray) {\r\n  let lang;\r\n  if (!getCookie('language')) {\r\n    lang = navigator.languages[0].substring(0, 2);\r\n  } else {\r\n    const index = langArray.indexOf(getCookie('language'));\r\n    lang = index >= 0 ? getCookie('language') : 'en'; // default to english\r\n  }\r\n  return lang;\r\n}\r\n\r\n// Format Date object to hrs mins integer (military format like)\r\nconst timeFormat = ms => {\r\n  let h = ms.getHours().toString();\r\n  let m = ms.getMinutes().toString();\r\n  h = checkTime(h);\r\n  m = checkTime(m);\r\n  return parseInt(h + m);\r\n\r\n  // Add leading 0s\r\n  function checkTime(i) {\r\n    return i < 10 ? (i = '0' + i) : i;\r\n  }\r\n};\r\n\r\n// Set theme depending on sun position\r\nconst conditionTheme = (sunrise, sunset) => {\r\n  const now = timeFormat(new Date());\r\n  const isDay = now > sunrise && now < sunset;\r\n  isDay ? dayTheme() : nightTheme();\r\n};\r\n\r\n// set Day Theme\r\nconst dayTheme = () => {\r\n  document.documentElement.setAttribute('data-theme', 'light');\r\n  toggleSwitch.checked = false;\r\n};\r\n\r\n// set Night Theme\r\nconst nightTheme = () => {\r\n  document.documentElement.setAttribute('data-theme', 'dark');\r\n  toggleSwitch.checked = true;\r\n};\r\n\r\n// Go back in browser history\r\nconst goBack = () => {\r\n  window.history.back();\r\n};\r\n\r\n// Read and Write data to local storage\r\nconst writeToCache = (url, data) => localStorage.setItem(url, JSON.stringify(data));\r\nconst readFromCache = url => JSON.parse(localStorage.getItem(url)) || null;\r\n\r\n// Fetch new data\r\nconst fetchFresh = async url => {\r\n  try {\r\n    const res = await fetch(url);\r\n    const valid = res.ok ? res : new Error(res.statusText);\r\n    const data = await valid.json();\r\n    data.time = Date.now();\r\n    return data;\r\n  } catch (err) {\r\n    console.log('error:', err);\r\n  }\r\n};\r\n\r\n// Fetch Fresh or Cached Data\r\nconst fetchData = async (url, interval = cacheInterval, cache = true) => {\r\n  const cacheData = readFromCache(url);\r\n  if (cacheData && cacheData.time > Date.now() - interval) {\r\n    return cacheData;\r\n  } else {\r\n    const data = await fetchFresh(url);\r\n    // Cache data if cache option set to true and there is data\r\n    if (cache && data) {\r\n      writeToCache(url, data);\r\n    }\r\n    // If unable to fetch data from API then use cache data\r\n    return data ? data : cacheData;\r\n  }\r\n};\r\n\r\n// Fetch movie details by Id\r\nconst fetchMovie = async movieId => {\r\n  const url = `${url_movieInfo + movieId}?${url_params}`;\r\n  const data = await fetchData(url);\r\n  watchMovie(data);\r\n};\r\n\r\n// Receive coordinates via GeoIP service\r\nconst getGeoip = () => {\r\n  const url = 'https://freegeoip.app/json/'; // 15 000 requests per hour\r\n  const cacheInterval = 1000 * 60 * 30; // 30 minutes\r\n  return fetchData(url, cacheInterval);\r\n};\r\n\r\n// Receive coordinates via Browser's geolocation\r\nconst getLocation = async () => {\r\n  return new Promise((res, rej) => {\r\n    navigator.geolocation.getCurrentPosition(res, rej);\r\n  });\r\n};\r\n\r\n// Get latitude and longitude\r\nconst getCoords = async () => {\r\n  const permission = await navigator.permissions.query({ name: 'geolocation' });\r\n  if (navigator.geolocation && permission.state == 'granted') {\r\n    console.log('from navigator.geolocation...');\r\n    try {\r\n      const location = await getLocation();\r\n      return {\r\n        latitude: parseFloat(location.coords.latitude.toFixed(4)),\r\n        longitude: parseFloat(location.coords.longitude.toFixed(4)),\r\n      };\r\n    } catch (err) {\r\n      console.log('ERRORS...', err);\r\n      return getGeoip();\r\n    }\r\n  } else {\r\n    console.log('from geoIP...');\r\n    return getGeoip();\r\n  }\r\n};\r\n\r\n// Collect local Weather data based on latitude and longitude from GeoIP data\r\nconst getWeather = async data => {\r\n  const coords = { lat: data.latitude, lon: data.longitude };\r\n  // save coordinates in variable\r\n  coordinates = coords;\r\n  const key = '73ccfb39651ee95f5ba9a7a7ae60941a';\r\n  const url = `https://api.openweathermap.org/data/2.5/weather?lat=${coords.lat}&lon=${coords.lon}&units=metric&lang=ru&appid=${key}`;\r\n  return await fetchData(url);\r\n};\r\n\r\n// Get sunrise and sunset times based on weather data\r\nconst getSunTimes = async () => {\r\n  try {\r\n    const geoip = await getCoords();\r\n    const weather = await getWeather(geoip);\r\n    const suntimes = {\r\n      sunrise: timeFormat(new Date(weather.sys.sunrise * 1000)),\r\n      sunset: timeFormat(new Date(weather.sys.sunset * 1000)),\r\n    };\r\n    document.cookie = 'suntimes=' + JSON.stringify(suntimes) + '; Max-Age=' + 60 * 60 * 24;\r\n    return suntimes;\r\n  } catch (err) {\r\n    console.log('new ERRORs...', err.message);\r\n  }\r\n};\r\n\r\n// Clear page of data\r\nconst clearPage = () => {\r\n  header.innerHTML = '';\r\n  sections.forEach(section => {\r\n    section.innerHTML = '';\r\n  });\r\n};\r\n\r\n// Evaluate movie rating scores\r\nconst getClassByRate = rate => {\r\n  if (rate == 0) {\r\n    return {\r\n      class: 'hide',\r\n    };\r\n  } else if (rate >= 7) {\r\n    return {\r\n      class: 'green',\r\n      star: 'fas fa-star',\r\n    };\r\n  } else if (rate > 5) {\r\n    return {\r\n      class: 'orange',\r\n      star: 'fas fa-star-half',\r\n    };\r\n  } else {\r\n    return {\r\n      class: 'red',\r\n      star: 'far fa-star',\r\n    };\r\n  }\r\n};\r\n\r\n// Track IP lookup\r\nconst sessionIpData = async url => {\r\n  const sessionIpObj = sessionStorage.getItem(url) || null;\r\n  // if no url-named item in current SESSION then create one\r\n  if (!sessionIpObj) {\r\n    const ipObj = await fetchFresh(url);\r\n    sessionStorage.setItem(url, JSON.stringify(ipObj));\r\n    addtoIpHistory(ipObj);\r\n    return ipObj;\r\n  } else {\r\n    const ipData = JSON.parse(sessionStorage.getItem(url)) || null;\r\n    return ipData;\r\n  }\r\n};\r\n\r\n// Add locale object to localstorage history array\r\nfunction addtoIpHistory(obj) {\r\n  // If max items then push to last and delete first\r\n  Array.prototype.pushMax = function (value, max) {\r\n    if (this.length >= max) {\r\n      this.shift();\r\n    }\r\n    this.push(value);\r\n  };\r\n\r\n  const entries = JSON.parse(localStorage.getItem('ipHistory')) || [];\r\n  entries.pushMax(obj, 10);\r\n  localStorage.setItem('ipHistory', JSON.stringify(entries));\r\n}\r\n\r\n// Loop genres for Movie list\r\nconst showMovieListGenres = genres => {\r\n  const genresArr = movieGenres;\r\n  const list = movieGenres.genres;\r\n  let genresarr = [];\r\n  genres.map(genre => {\r\n    list.map(item => {\r\n      if (genre == item.id) {\r\n        genresarr.push(item.name);\r\n      }\r\n    });\r\n  });\r\n  return genresarr.join(', ');\r\n};\r\n\r\n// Loop genres for a movie\r\nconst showMovieGenres = genres => {\r\n  const list = genres;\r\n  let genresarr = [];\r\n  list.map(item => {\r\n    genresarr.push(item.name);\r\n  });\r\n  return genresarr.join(', ');\r\n};\r\n","console.log('connected 1_global.js');\r\n\r\n// TMDb API parameters\r\nconst url_params = new URLSearchParams({ language });\r\nconst img_path = 'https://image.tmdb.org/t/p/w300';\r\nconst img_path_highres = 'https://image.tmdb.org/t/p/w1280';\r\n\r\n// TMDB data proxies\r\nconst url_movie_genres = '/api/movies/genres?';\r\nconst url_search = '/api/movies/search?query=';\r\nconst url_theatersNow = '/api/theaters/nowplaying?';\r\nconst url_theatersUpcoming = '/api/theaters/upcoming?';\r\nconst url_moviesTrend = '/api/movies/trending?';\r\nconst url_moviesPopular = '/api/movies/popular?';\r\nconst url_movieInfo = '/api/movies/movieinfo/';\r\nconst url_similars = '/api/similar/';\r\n\r\nconst marqueeReel = document.querySelector('.marquee-content');\r\nconst gallery = document.querySelector('.carousel-inner');\r\nconst galleryThumbnails = document.querySelector('.carousel-indicators');\r\nconst searchResults = document.querySelectorAll('search-results');\r\nconst sections = document.querySelectorAll('section');\r\nconst header = document.querySelector('header');\r\n\r\n// Search form\r\nconst searchContainerMain = document.querySelector('#search-container-main');\r\nconst searchForm = document.querySelector('.search-form');\r\nconst searchInput = document.querySelector('.search-input');\r\n\r\nlet movieGenres;\r\n\r\n// Clean up Local Storage of old data on second reload of same session\r\n// add flag if there is current session ip data\r\n// if there is flag clean up local storage of data older than 1 month\r\n\r\n/* OPEN DROPDOWNS ON HOVER */\r\n// // Vars\r\n// const dropdowns = document.querySelectorAll('nav .dropdown');\r\n// const dropdownMenus = document.querySelectorAll('nav .dropdown-menu');\r\n\r\n// // Open dropdown menu on hover\r\n// dropdowns.forEach(dropdown => {\r\n//   const dropdownMenu = dropdown.querySelector('.dropdown-menu');\r\n//   dropdown.addEventListener('mouseover', () => {\r\n//     removeClass(dropdownMenus);\r\n//     if(window.getComputedStyle(dropdownMenu).visibility === \"visible\") {\r\n//       dropdownMenu.classList.add(\"show\");\r\n//     // }\r\n//   });\r\n// });\r\n","console.log('listeners.js');\r\n\r\n// Toggle day and night themes\r\ntoggleSwitch.addEventListener('change', switchTheme, false);\r\n\r\n// Prevent closing on click inside dropdown\r\ndocument.querySelectorAll('.dropdown-menu').forEach(menu => {\r\n  menu.addEventListener('click', e => {\r\n    e.stopPropagation();\r\n  });\r\n});\r\n\r\n// Search movies (no caching)\r\nsearchForm.addEventListener('submit', async e => {\r\n  e.preventDefault();\r\n  const searchValue = searchInput.value;\r\n  const url = url_search + searchValue + '&' + url_params;\r\n\r\n  if (searchValue) {\r\n    clearPage();\r\n\r\n    const data = await fetchData(url).then(res => res.results);\r\n    toSection(sections[0], data);\r\n    searchInput.value = '';\r\n  }\r\n});\r\n","console.log('instructions.js');\r\n\r\n// Set Theme according to sunrise and sunset times\r\nconst autoTheme = async () => {\r\n  const suntimes = await getSunTimes();\r\n  conditionTheme(suntimes.sunrise, suntimes.sunset);\r\n};\r\n\r\n// Set Theme\r\nconst setTheme = (() => {\r\n  if (!currentTheme) {\r\n    autoTheme();\r\n  }\r\n})();\r\n\r\n// Check if day or night every 15 mins. Sets theme in auto mode\r\nsetInterval(() => {\r\n  if (!currentTheme) {\r\n    autoTheme();\r\n  }\r\n}, 1000 * 60 * 15);\r\n\r\n// Switch theme on toggle switch\r\nfunction switchTheme(e) {\r\n  document.querySelector('body').style.transition = 'background var(--transition-speed) linear';\r\n  if (e.target.checked) {\r\n    document.documentElement.setAttribute('data-theme', 'dark');\r\n    // localStorage.setItem('theme', 'dark');\r\n    document.cookie = 'theme=dark';\r\n  } else {\r\n    document.documentElement.setAttribute('data-theme', 'light');\r\n    // localStorage.setItem('theme', 'light');\r\n    document.cookie = 'theme=light';\r\n  }\r\n}\r\n\r\n// Reload with Register modal tab open if client-side validation fails\r\nif (sessionStorage.getItem('regformErrors') === 'true') {\r\n  document.addEventListener('DOMContentLoaded', () => {\r\n    authModal.show();\r\n    registerTab.show();\r\n  });\r\n}\r\n// Prevent reOpening registration form on reload\r\nsessionStorage.setItem('regformErrors', false);\r\n\r\n// If login fails open login modal\r\nif (sessionStorage.getItem('loginErrors') === 'true') {\r\n  document.addEventListener('DOMContentLoaded', () => {\r\n    authModal.show();\r\n    loginTab.show();\r\n  });\r\n}\r\n// Prevent reOpening login form on reload\r\nsessionStorage.setItem('loginErrors', false);\r\n\r\n// Redirect to home directory on Authorization modal close if in subdirectories\r\nif (location.pathname != '/') {\r\n  document.querySelector('#auth-modal').addEventListener('hide.bs.modal', e => {\r\n    console.log('hida maida');\r\n    window.location.href = '/';\r\n  });\r\n}\r\n","console.log('connected 2.0_navbar.js');\r\n\r\n// Select language options\r\nconst langSelectors = document.querySelectorAll('#lang a');\r\n// Authorization\r\nconst authBtn = document.querySelector('#auth-btn');\r\n// Modals\r\nconst authModal = new bootstrap.Modal(document.getElementById('auth-modal'));\r\nconst registerTab = new bootstrap.Tab(document.querySelector('#authTab a[href=\"#register-tab-page\"]'));\r\nconst loginTab = new bootstrap.Tab(document.querySelector('#authTab a[href=\"#login-tab-page\"]'));\r\n// Links to Login and Register tabs in Modal Window\r\nconst regbutton = document.querySelector('#btn-register');\r\nconst loginbutton = document.querySelector('#btn-login');\r\nconst reglink = document.querySelector('#register-link');\r\nconst loginlink = document.querySelector('#login-link');\r\n// Register form password visibility toggle\r\nconst hideBtns = document.querySelectorAll('.toggle-hide');\r\n\r\n// Auth button event\r\nif (authBtn) {\r\n  authBtn.addEventListener('click', () => {\r\n    authModal.show();\r\n    loginTab.show();\r\n  });\r\n}\r\n\r\n// Modal form links between Login and Register modals\r\nreglink.addEventListener('click', function (e) {\r\n  e.preventDefault();\r\n  registerTab.show();\r\n});\r\nloginlink.addEventListener('click', function (e) {\r\n  e.preventDefault();\r\n  loginTab.show();\r\n});\r\n\r\n// Toggle Password Visibility\r\nhideBtns.forEach(btn => {\r\n  btn.addEventListener('click', () => {\r\n    toggleShow(btn);\r\n  });\r\n});\r\n\r\nfunction toggleShow(element) {\r\n  if (element.previousElementSibling.type === 'password') {\r\n    element.previousElementSibling.type = 'text';\r\n    element.children[0].style.display = 'none';\r\n    element.children[1].style.display = 'block';\r\n  } else {\r\n    element.previousElementSibling.type = 'password';\r\n    element.children[0].style.display = 'block';\r\n    element.children[1].style.display = 'none';\r\n  }\r\n}\r\n\r\n// Day & Night theme toggle\r\nconst themeCheckbox = document.querySelector('.theme-checkbox');\r\n\r\nthemeCheckbox.addEventListener('change', () => {\r\n  // change theme of the website\r\n  document.body.classList.toggle('light');\r\n});\r\n\r\n// Select language dropdown\r\nconst langCookieAge = 365 * 24 * 60 * 60;\r\nlangSelectors.forEach(option => {\r\n  option.addEventListener('click', () => {\r\n    document.cookie = 'language=' + option.id + '; ' + 'max-age=' + langCookieAge + ';path=/';\r\n    location.reload();\r\n  });\r\n});\r\n","// Show movie information in Movie Column of Movie Megamenu\r\nconst showMegamenuMovie = movie => {\r\n  const movieCol = document.querySelector('.movie-column');\r\n  \r\n  movieCol.innerHTML = '';\r\n\r\n  if(!movie) {\r\n    main.innerHTML = `<div class=\"section-title\">Movie info not available<span class=\"section-backlogo\">Movie info not available</span></div>`;\r\n    return false;\r\n  }\r\n\r\n  const { title, \r\n          poster_path,\r\n          vote_average, \r\n          overview,\r\n          release_date,\r\n          genre_ids,\r\n          id\r\n        } = movie;\r\n\r\n  const movieElement = document.createElement('div');\r\n  movieElement.classList.add('movieCol');\r\n\r\n  movieElement.innerHTML = `\r\n    \r\n      <div style=\"background-image: url('${img_path + poster_path}'); background-size: cover; height: 250px; width: 100px\"></div>\r\n        <div>\r\n          <h3>${title}</h3>\r\n            <span>${new Date(release_date).getFullYear()}</span> \r\n            <span class=\"pipe\">|</span> \r\n            <span class=\"${getClassByRate(vote_average).class}\">\r\n              ${vote_average} <i class=\"${getClassByRate(vote_average).star}\"></i></span>\r\n            <span class=\"pipe\">|</span> \r\n            <span>${getGenres(genre_ids)}</span>\r\n        </div>\r\n        \r\n        <p>${overview}</p>\r\n      </div>\r\n    </div>\r\n  `\r\n\r\n  // Attach button to an element for movie details \r\n  movieCol.appendChild(movieElement);\r\n  movieElement.addEventListener('click', function() {\r\n    fetchMovie(id);\r\n  });\r\n}","console.log('connected 4_body.js');\r\n\r\nconst secTheaters = document.querySelector('.intheaters');\r\nconst secTheatersPick = document.querySelector('.intheaters-pick');\r\nconst secMovies = document.querySelector('.moviespopular');\r\nconst secMoviesPick = document.querySelector('.moviespopular-pick');\r\nconst secTv = document.querySelector('.tvpopular');\r\n\r\n// Check if in Profiles page\r\nif (window.location.pathname == '/') {\r\n  document.addEventListener('DOMContentLoaded', initData());\r\n}\r\n\r\n// Collect initial TMDB data\r\nasync function initData() {\r\n  await showGenres();\r\n  showMoviesTrending();\r\n  showInTheaters();\r\n  showMoviesPopular();\r\n}\r\n\r\n// Collect genres list\r\nasync function showGenres() {\r\n  movieGenres = await fetchData(url_movie_genres + url_params, 24 * 60 * 60 * 1000);\r\n  document.querySelectorAll('.genres-list').forEach(list => {\r\n    toGenresList(movieGenres.genres, list);\r\n  });\r\n}\r\n\r\n// Display movies In theaters and a movie pick\r\nasync function showInTheaters() {\r\n  const moviesIntheaters = await fetchData(url_theatersNow + url_params).then(data => data.results);\r\n  const picked = await pickShow(moviesIntheaters);\r\n\r\n  toSection(secTheaters, moviesIntheaters);\r\n  toTheaterPicked(secTheatersPick, picked);\r\n}\r\n\r\n// Display Popular movies and a movie pick\r\nasync function showMoviesPopular() {\r\n  const movies = await fetchData(url_moviesPopular + url_params).then(data => data.results);\r\n  const picked = await pickShow(movies);\r\n  const similars = await getSimilarShows(picked.id, 0);\r\n\r\n  toSection(secMovies, movies);\r\n  const similarsBox = toMoviePicked(secMoviesPick, picked);\r\n  toSimilars(similarsBox, similars);\r\n}\r\n\r\n// Pick a show from array\r\nfunction pickShow(shows) {\r\n  const index = Math.floor(Math.random() * shows.length);\r\n  const show = shows[index];\r\n  return show;\r\n}\r\n\r\n// Fetch similar shows\r\nasync function getSimilarShows(id, type) {\r\n  // type 0:movie or 1:tv\r\n  type = type ? 'tv' : 'movie';\r\n  const url = url_similars + `${type}/${id}?`;\r\n  const similars = await fetchData(url + url_params).then(data => data.results.slice(0, 5));\r\n  return similars;\r\n}\r\n\r\n// Display Trending movies\r\nasync function showMoviesTrending() {\r\n  moviesTrending = await fetchData(url_moviesTrend + url_params);\r\n  toCarousel(moviesTrending);\r\n}\r\n\r\n// Populate Carousel\r\nfunction toCarousel(array) {\r\n  gallery.innerHTML = '';\r\n  galleryThumbnails.innerHTML = '';\r\n\r\n  array.results.forEach((item, index) => {\r\n    const { title, poster_path, vote_average, backdrop_path, overview, release_date, genre_ids, id } = item;\r\n\r\n    const filmSlide = document.createElement('div');\r\n    filmSlide.classList.add('carousel-item');\r\n    index === 0 ? (filmSlide.className += ' active') : '';\r\n    filmSlide.style.backgroundImage = `url(\"${img_path_highres + backdrop_path}\")`;\r\n\r\n    // Slides output\r\n    filmSlide.innerHTML = `\r\n      <div class=\"fade-overlay\"></div>\r\n      <div class=\"carousel-caption d-md-block\">\r\n      <!-- <div class=\"carousel-caption d-none d-md-block\"> -->\r\n        <h2 class=\"display-4\">${title}</h2>\r\n          <p class=\"lead overview-header__stats\">\r\n            <span class=\"carousel-caption-overview\">${new Date(release_date).getFullYear()}</span> \r\n            <span class=\"pipe carousel-caption-overview\">|</span> \r\n            <span class=\"carousel-caption-overview\">\r\n              <i class=\"${vote_average == 0 ? '' : getClassByRate(vote_average).star}\"></i> ${\r\n      vote_average == 0 ? '' : vote_average\r\n    } </span>\r\n            <span class=\"pipe carousel-caption-overview\">|</span> \r\n            <span class=\"carousel-caption-overview\">${showMovieListGenres(genre_ids)}</span>\r\n          </p>\r\n        <div class=\"film-details\">\r\n          <a class=\"button-container-${index}\" href=\"#\"></a>\r\n          <p class=\"lead\">${overview.substring(0, 200)}...</p>\r\n        </div>\r\n      </div>\r\n      `;\r\n\r\n    gallery.appendChild(filmSlide);\r\n\r\n    // Create a button and attach click event listener\r\n    const button = document.createElement('button');\r\n    button.classList.add('btn-custom');\r\n    button.className += ' mb-3';\r\n    button.innerHTML = '<i class=\"fas fa-play\"></i> Play';\r\n    button.addEventListener('click', function () {\r\n      fetchMovie(id);\r\n    });\r\n    // On each forEach iteration attach the button to an element with\r\n    // a unique id\r\n    document.querySelector('.button-container-' + index).appendChild(button);\r\n\r\n    // Icons output\r\n    const filmElement = document.createElement('li');\r\n    // index === 0 ? filmElement.className += \" active\" : '';\r\n    filmElement.setAttribute('data-target', '#carousel-main');\r\n    filmElement.setAttribute('data-slide-to', `${index}`);\r\n    filmElement.innerHTML = `\r\n      <div class=\"card-dummy\">\r\n        <img src=\"${img_path + poster_path}\">\r\n      </div>\r\n    `;\r\n    marqueeReel.appendChild(filmElement);\r\n  });\r\n\r\n  // Fill marquee space between last and first card\r\n  infiniteMarquee();\r\n}\r\n\r\n// Populate a section\r\nfunction toSection(section, movies) {\r\n  section.innerHTML = '';\r\n  if (movies.length < 1) {\r\n    // Inform user if no results\r\n    section.innerHTML = `<div class=\"section-title\">No Results Found<span class=\"section-backlogo\">No Results Found</span></div>`;\r\n    return false;\r\n  }\r\n\r\n  // Show movie-cards size toggle icons\r\n  section.innerHTML = `\r\n  <div class=\"section-row\">\r\n    <div class=\"section-title\">${section.getAttribute(\r\n      'data-desc'\r\n    )}<span class=\"section-backlogo\">${section.getAttribute('data-desc')}</span></div>\r\n    <div class=\"view-icons-container\">\r\n      <span class=\"view-icons btn-view-sm\">\r\n        <svg class=\"btn-view-sm\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-grid-3x2-gap\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path class=\"btn-view-sm\" fill-rule=\"evenodd\" d=\"M4 4H2v2h2V4zm1 7V9a1 1 0 0 0-1-1H2a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1zm0-5V4a1 1 0 0 0-1-1H2a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1zm5 5V9a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1zm0-5V4a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1zM9 4H7v2h2V4zm5 0h-2v2h2V4zM4 9H2v2h2V9zm5 0H7v2h2V9zm5 0h-2v2h2V9zm-3-5a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1V4zm1 4a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1V9a1 1 0 0 0-1-1h-2z\"/>\r\n        </svg>\r\n      </span>\r\n      <span class=\"view-icons btn-view-lg\">\r\n        <svg class=\"btn-view-lg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-grid\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path class=\"btn-view-lg\" fill-rule=\"evenodd\" d=\"M1 2.5A1.5 1.5 0 0 1 2.5 1h3A1.5 1.5 0 0 1 7 2.5v3A1.5 1.5 0 0 1 5.5 7h-3A1.5 1.5 0 0 1 1 5.5v-3zM2.5 2a.5.5 0 0 0-.5.5v3a.5.5 0 0 0 .5.5h3a.5.5 0 0 0 .5-.5v-3a.5.5 0 0 0-.5-.5h-3zm6.5.5A1.5 1.5 0 0 1 10.5 1h3A1.5 1.5 0 0 1 15 2.5v3A1.5 1.5 0 0 1 13.5 7h-3A1.5 1.5 0 0 1 9 5.5v-3zm1.5-.5a.5.5 0 0 0-.5.5v3a.5.5 0 0 0 .5.5h3a.5.5 0 0 0 .5-.5v-3a.5.5 0 0 0-.5-.5h-3zM1 10.5A1.5 1.5 0 0 1 2.5 9h3A1.5 1.5 0 0 1 7 10.5v3A1.5 1.5 0 0 1 5.5 15h-3A1.5 1.5 0 0 1 1 13.5v-3zm1.5-.5a.5.5 0 0 0-.5.5v3a.5.5 0 0 0 .5.5h3a.5.5 0 0 0 .5-.5v-3a.5.5 0 0 0-.5-.5h-3zm6.5.5A1.5 1.5 0 0 1 10.5 9h3a1.5 1.5 0 0 1 1.5 1.5v3a1.5 1.5 0 0 1-1.5 1.5h-3A1.5 1.5 0 0 1 9 13.5v-3zm1.5-.5a.5.5 0 0 0-.5.5v3a.5.5 0 0 0 .5.5h3a.5.5 0 0 0 .5-.5v-3a.5.5 0 0 0-.5-.5h-3z\"/>\r\n        </svg>\r\n      </span>\r\n    </div>\r\n  </div>\r\n  `;\r\n\r\n  movies.forEach((movie, index) => {\r\n    const { title, poster_path, vote_average, backdrop_path, overview, release_date, genre_ids, id } = movie;\r\n\r\n    const movieElement = document.createElement('div');\r\n    movieElement.className = 'movie';\r\n\r\n    movieElement.innerHTML = `      \r\n      <div class=\"img-container\">\r\n        <div class=\"img\" style=\"background-image: url('${img_path + poster_path}');\"></div>\r\n        <div class=\"overlay\"></div>\r\n      </div>\r\n      <div class=\"movie-info\">\r\n        <div class=\"overview\">\r\n          <div class=\"overview-header\">\r\n            ${title}<br>\r\n            <div class=\"overview-header__stats\">\r\n              <span>${new Date(release_date).getFullYear()}</span> \r\n              <span class=\"pipe\">|</span> \r\n              <span class=\"${getClassByRate(vote_average).class}\">\r\n                ${vote_average} <i class=\"${getClassByRate(vote_average).star}\"></i></span>\r\n              </span><br>\r\n              <span class=\"genres\">${showMovieListGenres(genre_ids)}</span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"overview-body\">\r\n           <!-- <p>${overview}</p> -->\r\n          </div>\r\n          <div class=\"overview-footer\">\r\n          </div>          \r\n        </div>\r\n      </div>\r\n    `;\r\n\r\n    // On each forEach iteration attach a button to an element with a watch movie link\r\n    section.appendChild(movieElement);\r\n    movieElement.addEventListener('click', function () {\r\n      fetchMovie(id);\r\n    });\r\n  });\r\n}\r\n\r\n// Pick a show from array\r\nfunction toTheaterPicked(section, movie) {\r\n  section.innerHTML = '';\r\n  if (movie.length) {\r\n    section.innerHTML = `<div class=\"section-title\">No Results Found<span class=\"section-backlogo\">No Results Found</span></div>`;\r\n    return false;\r\n  }\r\n\r\n  const { title, poster_path, vote_average, backdrop_path, overview, release_date, genre_ids, id } = movie;\r\n  const movieElement = document.createElement('div');\r\n  movieElement.className = 'pickedMovie';\r\n  movieElement.style.backgroundImage = `url(${img_path_highres + backdrop_path})`;\r\n  movieElement.innerHTML = `\r\n    <div class=\"picked-overlay\"></div>\r\n    <div class=\"info-row\">\r\n      <div class=\"info-box\">\r\n        <div class=\"picked-title\">${title} <span>(${new Date(release_date).getFullYear()})</span></div>\r\n        <span class=\"picked-rating\">\r\n          ${vote_average} <i class=\"${getClassByRate(vote_average).star}\"></i></span>\r\n        </span><br>\r\n        <span class=\"genres\">${showMovieListGenres(genre_ids)}</span>\r\n      </div>\r\n      <div class=\"map-box\">\r\n        ${section.getAttribute('data-desc')}<br>\r\n        <div id=\"map\">MAP</div>\r\n      </div>\r\n    </div>\r\n  `;\r\n\r\n  section.appendChild(movieElement);\r\n  const infoBox = movieElement.querySelector('.info-box');\r\n  infoBox.addEventListener('click', () => fetchMovie(id));\r\n  // Show map if coordinates available, if not, try again\r\n  const showMap = () => {\r\n    if (!coordinates) {\r\n      setTimeout(() => {\r\n        showMap();\r\n      }, 200);\r\n    } else {\r\n      initMap(coordinates);\r\n    }\r\n  };\r\n  showMap();\r\n}\r\n\r\n// Display picked popular movie and similars\r\nfunction toMoviePicked(section, movie) {\r\n  section.innerHTML = '';\r\n  if (movie.length) {\r\n    // Inform user if no movie found\r\n    section.innerHTML = `<div class=\"section-title\">No Results Found<span class=\"section-backlogo\">No Results Found</span></div>`;\r\n    return;\r\n  }\r\n\r\n  const { title, poster_path, vote_average, backdrop_path, overview, release_date, genre_ids, id } = movie;\r\n  const movieElement = document.createElement('div');\r\n  movieElement.className = 'picked-movie-similars';\r\n  movieElement.style.backgroundImage = `url(${img_path_highres + backdrop_path})`;\r\n  movieElement.innerHTML = `\r\n    <div class=\"picked-overlay\"></div>\r\n    <div class=\"info-box\">\r\n      ${section.getAttribute('data-desc')}<br>\r\n      <div class=\"picked-title\">${title} <span>(${new Date(release_date).getFullYear()})</span></div>\r\n      <span class=\"picked-rating\">\r\n        ${vote_average} <i class=\"${getClassByRate(vote_average).star}\"></i></span>\r\n      </span><br>\r\n      <span class=\"genres\">${showMovieListGenres(genre_ids)}</span>\r\n    </div>\r\n    <div class=\"similars-box\">\r\n    </div>\r\n    </div>\r\n  `;\r\n\r\n  section.appendChild(movieElement);\r\n  const infoBox = movieElement.querySelector('.info-box');\r\n  infoBox.addEventListener('click', () => fetchMovie(id));\r\n  const similarsBox = movieElement.querySelector('.similars-box');\r\n  return similarsBox;\r\n}\r\n\r\n// Fill Similars section\r\nfunction toSimilars(section, movies) {\r\n  section.innerHTML = '';\r\n  movies.forEach((movie, index) => {\r\n    const { title, poster_path, vote_average, backdrop_path, overview, release_date, genre_ids, id } = movie;\r\n    const movieElement = document.createElement('div');\r\n    movieElement.className = 'similars-card';\r\n    movieElement.innerHTML = `\r\n      <div class=\"similars-bg\" style=\"background-image: url(${img_path + backdrop_path})\"></div>\r\n      <div class=\"movie-info\">\r\n        <div class=\"overview\">\r\n          <div class=\"overview-header\">\r\n            ${title}<br>\r\n            <div class=\"overview-header__stats\">\r\n              <span>${new Date(release_date).getFullYear()}</span> \r\n              <span class=\"pipe\">|</span> \r\n              <span>\r\n                ${vote_average} <i class=\"${getClassByRate(vote_average).star}\"></i></span>\r\n              </span><br>\r\n              <span class=\"genres\">${showMovieListGenres(genre_ids)}</span>\r\n            </div>\r\n          </div>          \r\n        </div>\r\n      </div>\r\n    `;\r\n\r\n    // On each forEach iteration attach the button to an element with\r\n    section.appendChild(movieElement);\r\n    movieElement.addEventListener('click', function () {\r\n      fetchMovie(id);\r\n    });\r\n  });\r\n}\r\n\r\n// Populate Movie details\r\nfunction watchMovie(movie) {\r\n  const { title, poster_path, vote_average, backdrop_path, overview, release_date, genres } = movie;\r\n\r\n  clearPage();\r\n  header.innerHTML = `\r\n    <!-- <div class=\"section-title\">Title<span class=\"section-backlogo\">Title</span></div> -->\r\n    <!-- <h1>Title</h1> -->\r\n\r\n    <section class=\"watch-movie\">\r\n      <div class=\"watch-movie-bg-decor\">${title}</div>\r\n      <div class=\"watch-movie-bg\"></div>\r\n      <div class=\"container\">\r\n        <div class=\"row\">\r\n          <div class=\"col-lg-6 col-sm-12 padding-0\">\r\n            <div class=\"movie-glance\">\r\n              <div class=\"film-page_poster\">\r\n                <img class=\"img-fluid\" src=\"${img_path + poster_path}\" alt=\"${title}\" title=\"${title}\"> \r\n              </div>\r\n              <div class=\"movie-info-container\">\r\n                <div class=\"\">\r\n                  <div class=\"film-page_title\">${title}</div>\r\n                  <div class=\"film-page_title-stats\">\r\n                    <span>${new Date(release_date).getFullYear()}</span>\r\n                    <span>|</span>\r\n                    <span> R </span>\r\n                    <span>|</span>\r\n                    <span> 2hr 20min</span>\r\n                  </div>\r\n                </div>\r\n                <div class=\"film-page_rating\">\r\n                  <span class=\"rating-star\"><i class=\"${getClassByRate(vote_average).star}\"></i></span>\r\n                  <span class=\"rating-score ${getClassByRate(vote_average).class}\">${vote_average}</span>\r\n                  <span class=\"reviews\">87 875 <i class=\"fas fa-user-alt\"></i></span>\r\n                </div>\r\n                <div class=\"film-page_genre\">\r\n                  <span>${showMovieGenres(genres)}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"movie-sources\">\r\n              <ul class=\"play-button-group\">\r\n                <li><a href=\"#\" class=\"btn btn-sm btn-secondary wm-btn\">4K <i class=\"fas fa-play\"></i></a></li>\r\n                <li><a href=\"#\" class=\"btn btn-sm btn-secondary wm-btn\">HD <i class=\"fas fa-play\"></i></a></li>\r\n                <li><a href=\"#\" class=\"btn btn-sm btn-secondary wm-btn\">SD <i class=\"fas fa-play\"></i></a></li>\r\n                <li><a href=\"#\" class=\"btn btn-sm btn-secondary wm-btn\">IN THEATERS <i class=\"fas fa-film\"></i></a></li>\r\n              </ul>\r\n            </div>\r\n          </div> \r\n          <div class=\"col-lg-6 col-sm-12\">\r\n            <div class=\"movie-description\">\r\n              <p>${overview}</p>\r\n            </div>  \r\n          </div> \r\n        </div>\r\n        <div class=\"row\">\r\n        <!-- \r\n          <div class=\"iframe-container\">\r\n            <iframe src=\"https://www.youtube.com/embed/ngWBddVNVZs?autoplay=1&start=13&mute=1\" \r\n            allow=\"autoplay; picture-in-picture;\" frameborder=\"0\" allowfullscreen>\r\n            </iframe>\r\n          </div>\r\n        -->\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n    <section class=\"suggest-movie\">\r\n      <div class=\"container\">\r\n        <div class=\"title\">\r\n          <h4>You Also May Like</h4>\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n    <div class=\"container\" style=\"padding-bottom: 10rem;\">\r\n      <button data-tooltip=\" Tooltip\">Submit Form</button>\r\n    </div>\r\n  `;\r\n  window.scrollTo(0, 0);\r\n}\r\n\r\n// Populate Genre lists\r\nfunction toGenresList(genres, list) {\r\n  list.innerHTML = '';\r\n\r\n  genres.forEach((genre, index) => {\r\n    const { name } = genre;\r\n\r\n    const genreElement = document.createElement('li');\r\n    genreElement.classList.add('genre-li');\r\n\r\n    genreElement.innerHTML = `<a href=\"\">${name}</a>`;\r\n\r\n    // On each forEach iteration attach the button to an element with\r\n    list.appendChild(genreElement);\r\n    genreElement.addEventListener('click', function () {\r\n      // fetchMoviebyGenre(id);\r\n    });\r\n  });\r\n}\r\n\r\n// Click on view-icons for cards size\r\ndocument.addEventListener('click', e => {\r\n  if (e.target.classList == 'btn-view-sm') {\r\n    document.querySelector('.btn-view-sm').style.opacity = 1;\r\n    document.querySelector('.btn-view-lg').style.opacity = 0.6;\r\n    document.querySelectorAll('.movie').forEach(movie => {\r\n      movie.className = 'movie-small';\r\n    });\r\n  }\r\n  if (e.target.classList == 'btn-view-lg') {\r\n    document.querySelector('.btn-view-sm').style.opacity = 0.6;\r\n    document.querySelector('.btn-view-lg').style.opacity = 1;\r\n    document.querySelectorAll('.movie-small').forEach(movie => {\r\n      movie.className = 'movie';\r\n    });\r\n  }\r\n});\r\n\r\n// // event added to target if = #burger\r\n// document.addEventListener('click', function(e){\r\n//   if(e.target && e.target.id == 'burger'){\r\n//     console.log('listener attached to document');\r\n//    }\r\n// });\r\n\r\n// burger menu listener assigned to parent\r\n// document.querySelector(\"#burger\").click();\r\n\r\n//   // Show movie card in Megamenu\r\n//   const randMovie = Math.floor(Math.random() * 20);\r\n//   showMegamenuMovie(respData.results[randMovie]);\r\n\r\n// Loop search inputs for value\r\n// searchForms.forEach((form) => {\r\n//   form.addEventListener('submit', (e) => {\r\n//     let searchValue = form.querySelector('.search-input').value;\r\n//     e.preventDefault();\r\n\r\n//     if (searchValue) {\r\n//       main.innerHTML = '';\r\n//       document.querySelector('header').innerHTML = '';\r\n//       document.querySelector('#search-container-nav').style.visibility = 'unset';\r\n//       getMovies(search_url + searchValue);\r\n//       form.querySelector('.search-input').value = '';\r\n//     }\r\n//   });\r\n// });\r\n\r\n// function onhover() {\r\n//   console.log('hi');\r\n//   document.querySelector('.movie-info').className = 'movie-info-active';\r\n// }\r\n\r\n// function clickWatch(index) {\r\n//   document.addEventListener('click', function(e) {\r\n//     if(e.target && e.target.id == 'movie-link') {\r\n//       console.log('clicked from closure ', index);\r\n//     }\r\n//   });\r\n// }\r\n","console.log('connected 5_marquee.js');\r\n\r\nfunction infiniteMarquee() {\r\n  const root = document.documentElement;\r\n  const marqueeElementsDisplayed = getComputedStyle(root).getPropertyValue('--marquee-elements-displayed');\r\n  const marqueeContent = document.querySelector('.marquee-content');\r\n\r\n  root.style.setProperty(\"--marquee-elements\", marqueeContent.children.length);\r\n\r\n  for (let i = 0; i < marqueeElementsDisplayed; i++) {\r\n    marqueeContent.appendChild(marqueeContent.children[i].cloneNode(true));\r\n  }\r\n}","console.log('connected 6_forms.js');\r\n\r\n// Check if in Profiles page\r\nif (window.location.pathname == '/info/contact') {\r\n  document.addEventListener('DOMContentLoaded', contactForm());\r\n}\r\n\r\n// Contact form\r\nfunction contactForm() {\r\n  document.getElementById('contact-form').addEventListener('submit', async e => {\r\n    e.preventDefault();\r\n    const name = document.querySelector('#contact-form-name').value;\r\n    const email = document.querySelector('#contact-form-email').value;\r\n    const message = document.querySelector('#contact-form-message').value;\r\n\r\n    const res = await fetch('/info/contact', {\r\n      method: 'POST',\r\n      headers: { 'Content-type': 'application/json' },\r\n      body: JSON.stringify({ name, email, message }),\r\n    });\r\n    const data = await res.json();\r\n    console.log(data);\r\n    // if (data.success) {\r\n    //   console.log('successfully registered');\r\n    //   registrationErrors.recaptca = false;\r\n    //   return (window.location.href = '/');\r\n    // }\r\n  });\r\n}\r\n","console.log('connected 2.1_regvalidate.js');\r\n\r\n// Register form\r\nconst regform = document.querySelector('#reg-form');\r\nconst regemail = document.querySelector('#reg-email');\r\nconst regpassword = document.querySelector('#reg-password');\r\nconst regcaptcha = document.querySelector('#reg-form .g-recaptcha');\r\n// Registration email errors from backend validation\r\nconst emailsmall = document.querySelector('#reg-form .email-small');\r\nconst emailerr = document.querySelector('#reg-form .email-error');\r\nconst captchasmall = document.querySelector('#reg-form .captcha-small');\r\n// Login form\r\nconst loginForm = document.querySelector('#login-form');\r\nconst loginemail = document.querySelector('#login-email');\r\nconst loginCaptcha = document.querySelector('#login-form .g-recaptcha');\r\nconst loginBtn = document.querySelector('#btn-login');\r\n// Login errors display\r\nconst loginEmailsmall = document.querySelector('#login-form .email-small');\r\nconst loginCaptchasmall = document.querySelector('#login-form .captcha-small');\r\n\r\n// Registration form Monitor errors\r\nlet registrationErrors = {\r\n  emailbackend: true,\r\n  email: true,\r\n  password: true,\r\n  recaptcha: true\r\n};\r\n// Login form errors monitor\r\nlet loginErrors = {\r\n  email: true,\r\n};\r\n\r\n// Email field error set True on focus in\r\nregemail.addEventListener('focusin', () => {\r\n  registrationErrors.emailbackend = true;\r\n});\r\n\r\n// Form processing\r\ndocument.querySelectorAll('.auth-form').forEach(form => {\r\n  const loader = form.querySelector('.submit-loader');\r\n  const btn = form.querySelector('.auth-btn');\r\n  // On form submit action\r\n  form.addEventListener('submit', (e) => {\r\n    // Validate registration\r\n    if(form.id === 'reg-form') {\r\n      if(!allFalse(registrationErrors)) {\r\n        e.preventDefault();\r\n        validateEmail(regemail);\r\n        validatePassword();\r\n        validateCaptcha();\r\n        checkEmail();\r\n\r\n        console.log('reg-form validation');\r\n        console.log(registrationErrors);\r\n        console.log(allFalse(registrationErrors));\r\n        return false;\r\n      }\r\n    }\r\n    // Validate login\r\n    if(form.id === 'login-form') {\r\n      validateEmail(loginemail);\r\n      if(!allFalse(loginErrors)) {\r\n        e.preventDefault();\r\n\r\n        console.log('login-form validation');\r\n        console.log(loginErrors);\r\n        console.log(allFalse(loginErrors));\r\n        return false;\r\n      }\r\n    }\r\n    // On wait: disable button and show loader\r\n    btn.disabled = true;\r\n    btn.style.pointerEvents = \"none\"; \r\n    btn.style.opacity = 0.3;\r\n    loader.innerHTML = `\r\n      <?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" style=\"margin: auto; background: none; display: block; shape-rendering: auto;\" width=\"50px\" height=\"50px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n      <path d=\"M10 50A40 40 0 0 0 90 50A40 43 0 0 1 10 50\" fill=\"#ececec\" stroke=\"none\">\r\n        <animateTransform attributeName=\"transform\" type=\"rotate\" dur=\"1s\" repeatCount=\"indefinite\" keyTimes=\"0;1\" values=\"0 50 51.5;360 50 51.5\"></animateTransform>\r\n      </path>\r\n      <!-- [ldio] generated by https://loading.io/ --></svg>\r\n    `;\r\n  });\r\n});\r\n\r\n// Email presence in database validation \r\nregemail.addEventListener('focusout', () => {\r\n  checkEmail();\r\n});\r\n\r\n// Validate registration email\r\nregemail.addEventListener('keyup', (e) => {\r\n  validateEmail(regemail);\r\n});\r\n\r\n// Validate login email\r\nloginemail.addEventListener('focusout', (e) => {\r\n  validateEmail(loginemail);\r\n});\r\n\r\n// Validate password\r\nregpassword.addEventListener('keyup', (e) => {\r\n  validatePassword();\r\n});\r\n\r\n// Output message and style on Successful Validation\r\nfunction setErrorFor(input, message) {\r\n  const formControl = input.parentElement;\r\n  const small = formControl.querySelector('.small');\r\n\r\n  // add error message inside small\r\n  small.innerText = message;\r\n\r\n  // add error class\r\n  formControl.className = 'form-group error';\r\n}\r\n\r\n// Output message and style on Error\r\nfunction setSuccessFor(input) {\r\n  const formControl = input.parentElement;\r\n  formControl.className = 'form-group success';\r\n}\r\n\r\n// Validate email structure\r\nfunction isEmail(email) {\r\n  return /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email);\r\n}\r\n\r\n// Check database for Email presence\r\nfunction checkEmail() {\r\n  let email = document.querySelector('#reg-email').value.toLowerCase();\r\n  \r\n  // send email input value to /usercheck route of the API\r\n  fetch('/usercheck', {\r\n    method: 'post',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({email})\r\n  })\r\n  // receive and process response from the API\r\n  .then(res => res.json())\r\n  .then(data => {\r\n    console.log(data);\r\n    if(data.message != 'success'){\r\n      emailsmall.innerHTML = `${data.message}`;\r\n\r\n      const formControl = emailsmall.parentElement;\r\n      formControl.className = 'form-group error';\r\n      registrationErrors.emailbackend = true;\r\n    } else {\r\n      // emailerr.innerHTML = '';\r\n      registrationErrors.emailbackend = false;\r\n    }\r\n  });\r\n}\r\n\r\n// Check if all errors cleared\r\nfunction allFalse(obj) {\r\n  for(let item in obj)\r\n    if(obj[item]) return false;\r\n    \r\n  return true;\r\n}\r\n\r\n// Validate Email\r\nfunction validateEmail(element) {\r\n  const emailValue = element.value;\r\n    \r\n  if(emailValue === '' || emailValue === null) {\r\n    setErrorFor(element, \"Email cannot be blank\");\r\n    registrationErrors.email = true;\r\n    loginErrors.email = true;\r\n  } else if(emailValue.length <=6) {\r\n    setErrorFor(element, \"Email too short\");\r\n    registrationErrors.email = true;\r\n    loginErrors.email = true;\r\n  } else if(!isEmail(emailValue)) {\r\n    setErrorFor(element, \"Email is not valid\");\r\n    registrationErrors.email = true;\r\n    loginErrors.email = true;\r\n  } else {\r\n    setSuccessFor(element);\r\n    registrationErrors.email = false;\r\n    loginErrors.email = false;\r\n  } \r\n}\r\n\r\n// Validate Password\r\nfunction validatePassword() {\r\n  passValue = regpassword.value;\r\n  \r\n  if(passValue === '' || passValue === null) {\r\n    setErrorFor(regpassword, \"Password cannot be blank\");\r\n    registrationErrors.password = true;\r\n  } else if(passValue.length <= 6) {\r\n    setErrorFor(regpassword, \"Password must be 7+ characters\");\r\n    registrationErrors.password = true;\r\n  } else {\r\n    setSuccessFor(regpassword);\r\n    registrationErrors.password = false;\r\n  }\r\n}\r\n\r\n// Google reCaptcha validation\r\nfunction validateCaptcha() {\r\n  const captchaValue = regemail.value;\r\n    \r\n  if(registrationErrors.recaptcha != false) {\r\n    setErrorFor(regcaptcha, \"Are you human? Please check captcha\");\r\n  } else {\r\n    setSuccessFor(regcaptcha);\r\n  } \r\n}\r\nfunction recaptchaCheck() {\r\n  registrationErrors.recaptcha = false;\r\n  setSuccessFor(regcaptcha);\r\n}\r\nfunction recaptchaCheckExp() {\r\n  registrationErrors.recaptcha = true;\r\n  setErrorFor(regcaptcha, \"Are you human?\");\r\n}","console.log('connected 2.2_pwmeter.js');\r\n\r\ndocument.querySelector('#reg-password').addEventListener('keyup', function() {\r\n  const msg = document.getElementById('passwordmessage');\r\n  const meters = document.querySelectorAll('.pwmeter span');\r\n\r\n  // Calculate the strength of the password\r\n  let passwordScore = calPasswordStrength(this.value);\r\n\r\n  // Set the width of the password meter to a multiple of the score\r\n  // meter.style.width = (passwordScore+1) * 1 + 'px';\r\n\r\n  if (passwordScore <= 40) {\r\n    meters[0].style.backgroundColor = 'red';\r\n    meters[0].className = 'meter-span-on';\r\n    meters[1].className = 'meter-span-off';\r\n    meters[2].className = 'meter-span-off';\r\n    msg.style.color = 'coral';\r\n    msg.innerHTML = 'Weak password';\r\n  } else if (passwordScore <= 77) {\r\n    meters[1].style.backgroundColor = 'orange';\r\n    meters[1].className = 'meter-span-on';\r\n    meters[2].className = 'meter-span-off';\r\n    msg.style.color = 'orange';\r\n    msg.innerHTML = 'Password is average';\r\n  } else {\r\n    meters[2].style.backgroundColor = 'green';\r\n    meters[2].className = 'meter-span-on';\r\n    msg.style.color = 'green';\r\n    msg.innerHTML = 'Your password is strong';\r\n  }\r\n\r\n  // If input empty, there is no text output\r\n  if (this.value == \"\") {\r\n    meters[0].className = 'meter-span-off';\r\n    meters[1].className = 'meter-span-off';\r\n    meters[2].className = 'meter-span-off';\r\n    msg.innerHTML = '';\r\n  }\r\n});\r\n\r\n// Return password score\r\nfunction calPasswordStrength(pass) {\r\n  var score = 0;\r\n  if (!pass) return score;\r\n\r\n  // award every unique letter until 5 repetitions\r\n  var letters = new Object();\r\n  for (var i=0; i<pass.length; i++) {\r\n    letters[pass[i]] = (letters[pass[i]] || 0) + 1;\r\n    score += 5.0 / letters[pass[i]];\r\n  }\r\n\r\n  // bonus points for mixing it up\r\n  var variations = {\r\n    digits: /\\d/.test(pass),\r\n    lower: /[a-z]/.test(pass),\r\n    upper: /[A-Z]/.test(pass),\r\n    nonWords: /\\W/.test(pass),\r\n  }\r\n\r\n  variationCount = 0;\r\n  for (var check in variations) {\r\n    variationCount += (variations[check] == true) ? 1 : 0;\r\n  }\r\n  score += (variationCount - 1) * 10;\r\n\r\n  return parseInt(score);\r\n}","console.log('connected 4.5_profile.js');\r\n\r\nconst url_weatherInfo = `/api/weather?`;\r\nconst weather = document.querySelector('.weather-data');\r\nconst clientInfo = document.querySelector('.client-data');\r\n\r\n// Check if in Profiles page\r\nif (window.location.href.indexOf('/profile/') != -1) {\r\n  document.addEventListener('DOMContentLoaded', profileInit());\r\n}\r\n\r\n// Init Profiles page\r\nasync function profileInit() {\r\n  const ipdata = await sessionIpData('https://freegeoip.app/json/');\r\n  showWeather(ipdata);\r\n  showClientside(ipdata);\r\n}\r\n\r\n// Display Weather info\r\nasync function showWeather(data) {\r\n  if (weather) {\r\n    const params = new URLSearchParams({\r\n      lat: data.latitude,\r\n      lon: data.longitude,\r\n      units: 'metric', // \"metric\", \"imperial\", \"kelvin\"\r\n      lang: language,\r\n    });\r\n    const resdata = await fetchData(url_weatherInfo + params);\r\n    toWeather(resdata);\r\n  }\r\n}\r\n\r\n// Display Clientside info\r\nasync function showClientside(data) {\r\n  if (clientInfo) {\r\n    let browser_geolocation = false;\r\n\r\n    if (true) {\r\n    } else {\r\n    }\r\n\r\n    toClientInfo(data);\r\n\r\n    // console.log('received weather data: ', \"resdata\");\r\n  }\r\n}\r\n\r\nfunction toWeather(data) {\r\n  if (data.length < 1) {\r\n    weather.innerHTML = '';\r\n    weather.innerHTML = `<div>No Weather Data</div>`;\r\n    return;\r\n  }\r\n  weather.innerHTML = '';\r\n  weather.innerHTML = `<div><strong>Weather Info with OpenWeatherMap:</strong></div>`;\r\n\r\n  const lang = data.locale;\r\n  const city = data.name;\r\n  const temp = data.main.temp;\r\n  const icon = data.weather[0].icon;\r\n  const desc = data.weather[0].description;\r\n\r\n  const weatherElement = document.createElement('div');\r\n  weatherElement.classList.add('weather');\r\n  weatherElement.innerHTML = `\r\n    ${lang.city}: ${city}<br>\r\n    ${lang.temp}: ${temp} &deg;C <br>\r\n    ${desc}<br>\r\n    <img class=\"weather-icon\" src=\"http://openweathermap.org/img/wn/${icon}@2x.png\"> <br>\r\n  `;\r\n\r\n  // On each forEach iteration attach the button to an element with\r\n  weather.appendChild(weatherElement);\r\n  weatherElement.addEventListener('click', function () {\r\n    // fetchMovie(id);\r\n  });\r\n}\r\n\r\n// Display ClienInfo\r\nfunction toClientInfo(data) {\r\n  const spans = document.querySelectorAll('.client-data span');\r\n  spans[0].innerHTML = data.ip;\r\n  spans[1].innerHTML = data.latitude;\r\n  spans[2].innerHTML = data.longitude;\r\n  spans[3].innerHTML = data.city;\r\n  spans[4].innerHTML = data.country_name;\r\n  spans[5].innerHTML = data.time_zone;\r\n}\r\n","console.log('gmap.js');\r\n\r\nlet map;\r\nlet marker;\r\n\r\nfunction initMap(coords) {\r\n  const myLatLng = { lat: coords.lat, lng: coords.lon };\r\n\r\n  map = new google.maps.Map(document.getElementById('map'), {\r\n    center: myLatLng,\r\n    zoom: 14,\r\n    disableDefaultUI: true,\r\n  });\r\n  marker = new google.maps.Marker({\r\n    position: myLatLng,\r\n    map,\r\n    animation: google.maps.Animation.DROP,\r\n    title: 'Your data shows you are here!',\r\n  });\r\n  marker.addListener('mouseover', toggleBounce);\r\n  marker.addListener('mouseout', toggleBounce);\r\n}\r\n\r\nfunction toggleBounce() {\r\n  if (marker.getAnimation() !== null) {\r\n    marker.setAnimation(null);\r\n  } else {\r\n    marker.setAnimation(google.maps.Animation.BOUNCE);\r\n  }\r\n}\r\n"]}