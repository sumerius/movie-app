{"version":3,"sources":["1.0_startup.js","1.1_utilities.js","1.3_instructions.js","2.0_navbar.js","2.1_regvalidate.js","2.2_pwmeter.js","2.3_operations.js","2.4_megamenu.js","2_global.js","3_data_prep.js","4.5_profile.js","4_body.js","5_marquee.js","6_forms.js"],"names":["console","log","currentTheme","localStorage","getItem","toggleSwitch","document","querySelector","switchTheme","e","style","transition","target","checked","documentElement","setAttribute","setItem","cacheInterval","timeFormat","ms","h","getHours","toString","m","getMinutes","checkTime","parseInt","i","conditionTheme","sunrise","sunset","now","Date","dayTheme","nightTheme","goBack","window","history","back","writeToCache","url","data","JSON","stringify","readFromCache","parse","fetchFresh","async","res","fetch","valid","ok","Error","statusText","json","time","err","fetchData","interval","cache","cacheData","fetchMovie","movieId","url_movieInfo","url_params","watchMovie","getGeoip","getLocation","Promise","rej","navigator","geolocation","getCurrentPosition","getCoords","permission","permissions","query","name","state","location","latitude","parseFloat","coords","toFixed","longitude","getWeather","getSunTimes","geoip","weather","suntimes","sys","message","clearPage","header","innerHTML","sections","forEach","section","getClassByRate","rate","class","star","addEventListener","autoTheme","setTheme","setInterval","querySelectorAll","menu","stopPropagation","searchContainerMain","searchForm","searchInput","langSelectors","authBtn","authModal","bootstrap","Modal","getElementById","registerTab","Tab","loginTab","regbutton","loginbutton","reglink","loginlink","hideBtns","toggleShow","element","previousElementSibling","type","children","display","show","preventDefault","btn","themeCheckbox","body","classList","toggle","langCookieAge","option","cookie","id","reload","regform","regemail","regpassword","regcaptcha","emailsmall","emailerr","captchasmall","loginForm","loginemail","loginCaptcha","loginBtn","loginEmailsmall","loginCaptchasmall","registrationErrors","emailbackend","email","password","recaptcha","loginErrors","setErrorFor","input","formControl","parentElement","innerText","className","setSuccessFor","isEmail","test","checkEmail","value","toLowerCase","method","headers","Content-Type","then","allFalse","obj","item","validateEmail","emailValue","length","validatePassword","passValue","validateCaptcha","recaptchaCheck","recaptchaCheckExp","calPasswordStrength","pass","score","letters","Object","variations","digits","lower","upper","nonWords","check","variationCount","form","loader","disabled","pointerEvents","opacity","msg","meters","passwordScore","this","backgroundColor","color","sessionStorage","pathname","href","showMegamenuMovie","movie","movieCol","main","title","poster_path","vote_average","overview","release_date","genre_ids","movieElement","createElement","add","img_path","getFullYear","getGenres","appendChild","supportedLangs","locale","getLocale","language","sessionIpData","ipObj","addtoIpHistory","Array","prototype","pushMax","max","shift","push","entries","langArray","lang","getCookie","indexOf","languages","substring","cname","ca","split","c","charAt","Intl","DateTimeFormat","resolvedOptions","timeZone","URLSearchParams","img_path_highres","url_movie_genres","url_search","url_theatersNow","url_theatersUpcoming","url_moviesTrend","url_moviesPopular","url_similars","marqueeReel","gallery","galleryThumbnails","searchResults","movieGenres","searchValue","results","toSection","showMovieListGenres","genres","list","genresarr","map","genre","join","showMovieGenres","url_weatherInfo","clientInfo","profileInit","ipdata","showWeather","showClientside","params","lat","lon","units","resdata","toWeather","toClientInfo","city","temp","icon","desc","description","weatherElement","spans","ip","country_name","time_zone","secTheaters","secTheatersPick","secMovies","secMoviesPick","secTv","initData","showGenres","showMoviesTrending","showInTheaters","showMoviesPopular","toGenresList","moviesIntheaters","picked","pickShow","toTheaterPicked","movies","similars","getSimilarShows","toSimilars","toMoviePicked","shows","Math","floor","random","slice","moviesTrending","toCarousel","array","index","backdrop_path","filmSlide","backgroundImage","button","filmElement","infiniteMarquee","getAttribute","scrollTo","genreElement","root","marqueeElementsDisplayed","getComputedStyle","getPropertyValue","marqueeContent","setProperty","cloneNode","contactForm","Content-type"],"mappings":"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","file":"main.min.js","sourcesContent":["console.log('startup.js');\r\n\r\nconst currentTheme = localStorage.getItem('theme') ? localStorage.getItem('theme') : null;\r\nconst toggleSwitch = document.querySelector('.theme-checkbox');\r\n\r\n// // Immediately set Theme based on previous cache data if exists, otherwise use defaults. Then evaluate the following code\r\n// const initialTheme = (() => {\r\n//   if (currentTheme) {\r\n//     document.documentElement.setAttribute('data-theme', currentTheme);\r\n//     if (currentTheme === 'light') {\r\n//       toggleSwitch.checked = true;\r\n//     }\r\n//   } else {\r\n//     conditionTheme(700, 2000);\r\n//   }\r\n// })();\r\n\r\n// Switch theme on toggle switch\r\nfunction switchTheme(e) {\r\n  document.querySelector('body').style.transition = 'background var(--transition-speed) linear';\r\n  if (e.target.checked) {\r\n    document.documentElement.setAttribute('data-theme', 'light');\r\n    localStorage.setItem('theme', 'light');\r\n  } else {\r\n    document.documentElement.setAttribute('data-theme', 'dark');\r\n    localStorage.setItem('theme', 'dark');\r\n  }\r\n}\r\n","console.log('utilities.js');\r\n\r\n// Default caching interval\r\nconst cacheInterval = 1000 * 60 * 60;\r\n\r\n// Format Date object to hrs mins integer (military format like)\r\nfunction timeFormat(ms) {\r\n  let h = ms.getHours().toString();\r\n  let m = ms.getMinutes().toString();\r\n  h = checkTime(h);\r\n  m = checkTime(m);\r\n  return parseInt(h + m);\r\n\r\n  // Add leading 0s\r\n  function checkTime(i) {\r\n    return i < 10 ? (i = '0' + i) : i;\r\n  }\r\n}\r\n\r\n// Set theme depending on sun position\r\nfunction conditionTheme(sunrise, sunset) {\r\n  const now = timeFormat(new Date());\r\n  const isDay = now > sunrise && now < sunset;\r\n  isDay ? dayTheme() : nightTheme();\r\n}\r\n\r\n// set Day Theme\r\nfunction dayTheme() {\r\n  document.documentElement.setAttribute('data-theme', 'light');\r\n  toggleSwitch.checked = true;\r\n  console.log('dayTheme');\r\n}\r\n\r\n// set Night Theme\r\nfunction nightTheme() {\r\n  document.documentElement.setAttribute('data-theme', 'dark');\r\n  toggleSwitch.checked = false;\r\n  console.log('nightTheme');\r\n}\r\n\r\n// Go back in browser history\r\nconst goBack = () => {\r\n  window.history.back();\r\n};\r\n\r\n// Read and Write data to local storage\r\nconst writeToCache = (url, data) => localStorage.setItem(url, JSON.stringify(data));\r\nconst readFromCache = url => JSON.parse(localStorage.getItem(url)) || null;\r\n\r\n// Fetch new data\r\nconst fetchFresh = async url => {\r\n  try {\r\n    const res = await fetch(url);\r\n    const valid = res.ok ? res : new Error(res.statusText);\r\n    const data = await valid.json();\r\n    data.time = Date.now();\r\n    return data;\r\n  } catch (err) {\r\n    console.log('error:', err);\r\n  }\r\n};\r\n\r\n// Fetch Fresh or Cached Data\r\nconst fetchData = async (url, interval = cacheInterval, cache = true) => {\r\n  const cacheData = readFromCache(url);\r\n  if (cacheData && cacheData.time > Date.now() - interval) {\r\n    return cacheData;\r\n  } else {\r\n    const data = await fetchFresh(url);\r\n    // Cache data if cache option set to true and there is data\r\n    if (cache && data) {\r\n      writeToCache(url, data);\r\n    }\r\n    // If unable to fetch data from API then use cache data\r\n    return data ? data : cacheData;\r\n  }\r\n};\r\n\r\n// Fetch movie details by Id\r\nasync function fetchMovie(movieId) {\r\n  const url = `${url_movieInfo + movieId}?${url_params}`;\r\n  const data = await fetchData(url);\r\n  watchMovie(data);\r\n}\r\n\r\n// Receive coordinates via GeoIP service\r\nconst getGeoip = () => {\r\n  const url = 'https://freegeoip.app/json/'; // 15 000 requests per hour\r\n  const cacheInterval = 1000 * 60 * 30; // 30 minutes\r\n  return fetchData(url, cacheInterval);\r\n};\r\n\r\n// Receive coordinates via Browser's geolocation\r\nconst getLocation = async () => {\r\n  return new Promise((res, rej) => {\r\n    navigator.geolocation.getCurrentPosition(res, rej);\r\n  });\r\n};\r\n\r\n// Get latitude and longitude\r\nconst getCoords = async () => {\r\n  const permission = await navigator.permissions.query({ name: 'geolocation' });\r\n  if (navigator.geolocation && permission.state == 'granted') {\r\n    console.log('from navigator.geolocation...');\r\n    try {\r\n      const location = await getLocation();\r\n      return {\r\n        latitude: parseFloat(location.coords.latitude.toFixed(4)),\r\n        longitude: parseFloat(location.coords.longitude.toFixed(4)),\r\n      };\r\n    } catch (err) {\r\n      console.log('ERRORS...', err);\r\n      return getGeoip();\r\n    }\r\n  } else {\r\n    console.log('from geoIP...');\r\n    return getGeoip();\r\n  }\r\n};\r\n\r\n// Collect local Weather data based on latitude and longitude from GeoIP data\r\nconst getWeather = async data => {\r\n  const coords = { lat: data.latitude, lon: data.longitude };\r\n  const key = '73ccfb39651ee95f5ba9a7a7ae60941a';\r\n  const url = `https://api.openweathermap.org/data/2.5/weather?lat=${coords.lat}&lon=${coords.lon}&units=metric&lang=ru&appid=${key}`;\r\n  return await fetchData(url);\r\n};\r\n\r\n// Get sunrise and sunset times based on weather data\r\nconst getSunTimes = async () => {\r\n  try {\r\n    const geoip = await getCoords();\r\n    const weather = await getWeather(geoip);\r\n    const suntimes = {\r\n      sunrise: timeFormat(new Date(weather.sys.sunrise * 1000)),\r\n      sunset: timeFormat(new Date(weather.sys.sunset * 1000)),\r\n    };\r\n\r\n    console.log(JSON.stringify(suntimes));\r\n    // document.cookie\r\n    return suntimes;\r\n  } catch (err) {\r\n    console.log('new ERRORs...', err.message);\r\n  }\r\n};\r\n\r\n// Clear page of data\r\nconst clearPage = () => {\r\n  header.innerHTML = '';\r\n  sections.forEach(section => {\r\n    section.innerHTML = '';\r\n  });\r\n};\r\n\r\n// Evaluate movie rating scores\r\nfunction getClassByRate(rate) {\r\n  if (rate == 0) {\r\n    return {\r\n      class: 'hide',\r\n    };\r\n  } else if (rate >= 7) {\r\n    return {\r\n      class: 'green',\r\n      star: 'fas fa-star',\r\n    };\r\n  } else if (rate > 5) {\r\n    return {\r\n      class: 'orange',\r\n      star: 'fas fa-star-half',\r\n    };\r\n  } else {\r\n    return {\r\n      class: 'red',\r\n      star: 'far fa-star',\r\n    };\r\n  }\r\n}\r\n","console.log('instructions.js');\r\n\r\n// Toggle day and night themes\r\ntoggleSwitch.addEventListener('change', switchTheme, false);\r\n\r\n// Set Theme according to sunrise and sunset times\r\nconst autoTheme = async () => {\r\n  const suntimes = await getSunTimes();\r\n  // console.log('\\n now:', now, '\\n suntimes:', suntimes);\r\n  conditionTheme(suntimes.sunrise, suntimes.sunset);\r\n};\r\n\r\n// Set Theme\r\nconst setTheme = (() => {\r\n  if (!currentTheme) {\r\n    autoTheme();\r\n  }\r\n})();\r\n\r\n// Check if day or night every 15 mins. Sets theme in auto mode\r\nsetInterval(() => {\r\n  if (!currentTheme) {\r\n    autoTheme();\r\n  }\r\n}, 1000 * 60 * 15);\r\n\r\n// Prevent closing on click inside dropdown\r\ndocument.querySelectorAll('.dropdown-menu').forEach(menu => {\r\n  menu.addEventListener('click', e => {\r\n    e.stopPropagation();\r\n  });\r\n});\r\n","console.log('connected 2.0_navbar.js');\r\n\r\n// Search form\r\nconst searchContainerMain = document.querySelector('#search-container-main');\r\nconst searchForm = document.querySelector('.search-form');\r\nconst searchInput = document.querySelector('.search-input');\r\n// Select language options\r\nconst langSelectors = document.querySelectorAll('#lang a');\r\n// Authorization\r\nconst authBtn = document.querySelector('#auth-btn');\r\n// Modals\r\nconst authModal = new bootstrap.Modal(document.getElementById('auth-modal')); \r\nconst registerTab = new bootstrap.Tab(document.querySelector('#authTab a[href=\"#register-tab-page\"]'));\r\nconst loginTab = new bootstrap.Tab(document.querySelector('#authTab a[href=\"#login-tab-page\"]'));\r\n// Links to Login and Register tabs in Modal Window\r\nconst regbutton = document.querySelector('#btn-register');\r\nconst loginbutton = document.querySelector('#btn-login');\r\nconst reglink = document.querySelector('#register-link');\r\nconst loginlink = document.querySelector('#login-link');\r\n// Register form password visibility toggle\r\nconst hideBtns = document.querySelectorAll('.toggle-hide');\r\n\r\n// Auth button event\r\nif(authBtn) {\r\n  authBtn.addEventListener('click', () => {\r\n    authModal.show();\r\n    loginTab.show();\r\n  });\r\n}\r\n\r\n// Modal form links between Login and Register modals\r\nreglink.addEventListener('click', function (e) {\r\n  e.preventDefault()\r\n  registerTab.show();\r\n});\r\nloginlink.addEventListener('click', function (e) {\r\n  e.preventDefault()\r\n  loginTab.show();\r\n});\r\n\r\n// Toggle Password Visibility\r\nhideBtns.forEach(btn => {\r\n  btn.addEventListener('click', () => {\r\n    toggleShow(btn);\r\n  });\r\n});\r\n\r\nfunction toggleShow(element) {\r\n  if (element.previousElementSibling.type === \"password\") {\r\n    \r\n    element.previousElementSibling.type = \"text\";\r\n    element.children[0].style.display = 'none';\r\n    element.children[1].style.display = 'block';\r\n  } else {\r\n    element.previousElementSibling.type = \"password\";\r\n    element.children[0].style.display = 'block';\r\n    element.children[1].style.display = 'none';\r\n  }\r\n}\r\n\r\n// Day & Night theme toggle\r\nconst themeCheckbox = document.querySelector('.theme-checkbox');\r\n\r\nthemeCheckbox.addEventListener('change', () => {\r\n  // change theme of the website\r\n  document.body.classList.toggle('light');\r\n});\r\n\r\n// Select language dropdown\r\nconst langCookieAge = 365 * 24 * 60 * 60;\r\nlangSelectors.forEach(option => {\r\n  option.addEventListener('click', () => {\r\n    document.cookie = \"language=\" + option.id + \"; \" + \"max-age=\" +  langCookieAge + \";path=/\";\r\n    location.reload();\r\n  });\r\n});","console.log('connected 2.1_regvalidate.js');\r\n\r\n// Register form\r\nconst regform = document.querySelector('#reg-form');\r\nconst regemail = document.querySelector('#reg-email');\r\nconst regpassword = document.querySelector('#reg-password');\r\nconst regcaptcha = document.querySelector('#reg-form .g-recaptcha');\r\n// Registration email errors from backend validation\r\nconst emailsmall = document.querySelector('#reg-form .email-small');\r\nconst emailerr = document.querySelector('#reg-form .email-error');\r\nconst captchasmall = document.querySelector('#reg-form .captcha-small');\r\n// Login form\r\nconst loginForm = document.querySelector('#login-form');\r\nconst loginemail = document.querySelector('#login-email');\r\nconst loginCaptcha = document.querySelector('#login-form .g-recaptcha');\r\nconst loginBtn = document.querySelector('#btn-login');\r\n// Login errors display\r\nconst loginEmailsmall = document.querySelector('#login-form .email-small');\r\nconst loginCaptchasmall = document.querySelector('#login-form .captcha-small');\r\n\r\n// Registration form Monitor errors\r\nlet registrationErrors = {\r\n  emailbackend: true,\r\n  email: true,\r\n  password: true,\r\n  recaptcha: true\r\n};\r\n// Login form errors monitor\r\nlet loginErrors = {\r\n  email: true,\r\n};\r\n\r\n// Email field error set True on focus in\r\nregemail.addEventListener('focusin', () => {\r\n  registrationErrors.emailbackend = true;\r\n});\r\n\r\n// Form processing\r\ndocument.querySelectorAll('.auth-form').forEach(form => {\r\n  const loader = form.querySelector('.submit-loader');\r\n  const btn = form.querySelector('.auth-btn');\r\n  // On form submit action\r\n  form.addEventListener('submit', (e) => {\r\n    // Validate registration\r\n    if(form.id === 'reg-form') {\r\n      if(!allFalse(registrationErrors)) {\r\n        e.preventDefault();\r\n        validateEmail(regemail);\r\n        validatePassword();\r\n        validateCaptcha();\r\n        checkEmail();\r\n\r\n        console.log('reg-form validation');\r\n        console.log(registrationErrors);\r\n        console.log(allFalse(registrationErrors));\r\n        return false;\r\n      }\r\n    }\r\n    // Validate login\r\n    if(form.id === 'login-form') {\r\n      validateEmail(loginemail);\r\n      if(!allFalse(loginErrors)) {\r\n        e.preventDefault();\r\n\r\n        console.log('login-form validation');\r\n        console.log(loginErrors);\r\n        console.log(allFalse(loginErrors));\r\n        return false;\r\n      }\r\n    }\r\n    // On wait: disable button and show loader\r\n    btn.disabled = true;\r\n    btn.style.pointerEvents = \"none\"; \r\n    btn.style.opacity = 0.3;\r\n    loader.innerHTML = `\r\n      <?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" style=\"margin: auto; background: none; display: block; shape-rendering: auto;\" width=\"50px\" height=\"50px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n      <path d=\"M10 50A40 40 0 0 0 90 50A40 43 0 0 1 10 50\" fill=\"#ececec\" stroke=\"none\">\r\n        <animateTransform attributeName=\"transform\" type=\"rotate\" dur=\"1s\" repeatCount=\"indefinite\" keyTimes=\"0;1\" values=\"0 50 51.5;360 50 51.5\"></animateTransform>\r\n      </path>\r\n      <!-- [ldio] generated by https://loading.io/ --></svg>\r\n    `;\r\n  });\r\n});\r\n\r\n// Email presence in database validation \r\nregemail.addEventListener('focusout', () => {\r\n  checkEmail();\r\n});\r\n\r\n// Validate registration email\r\nregemail.addEventListener('keyup', (e) => {\r\n  validateEmail(regemail);\r\n});\r\n\r\n// Validate login email\r\nloginemail.addEventListener('focusout', (e) => {\r\n  validateEmail(loginemail);\r\n});\r\n\r\n// Validate password\r\nregpassword.addEventListener('keyup', (e) => {\r\n  validatePassword();\r\n});\r\n\r\n// Output message and style on Successful Validation\r\nfunction setErrorFor(input, message) {\r\n  const formControl = input.parentElement;\r\n  const small = formControl.querySelector('.small');\r\n\r\n  // add error message inside small\r\n  small.innerText = message;\r\n\r\n  // add error class\r\n  formControl.className = 'form-group error';\r\n}\r\n\r\n// Output message and style on Error\r\nfunction setSuccessFor(input) {\r\n  const formControl = input.parentElement;\r\n  formControl.className = 'form-group success';\r\n}\r\n\r\n// Validate email structure\r\nfunction isEmail(email) {\r\n  return /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email);\r\n}\r\n\r\n// Check database for Email presence\r\nfunction checkEmail() {\r\n  let email = document.querySelector('#reg-email').value.toLowerCase();\r\n  \r\n  // send email input value to /usercheck route of the API\r\n  fetch('/usercheck', {\r\n    method: 'post',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({email})\r\n  })\r\n  // receive and process response from the API\r\n  .then(res => res.json())\r\n  .then(data => {\r\n    console.log(data);\r\n    if(data.message != 'success'){\r\n      emailsmall.innerHTML = `${data.message}`;\r\n\r\n      const formControl = emailsmall.parentElement;\r\n      formControl.className = 'form-group error';\r\n      registrationErrors.emailbackend = true;\r\n    } else {\r\n      // emailerr.innerHTML = '';\r\n      registrationErrors.emailbackend = false;\r\n    }\r\n  });\r\n}\r\n\r\n// Check if all errors cleared\r\nfunction allFalse(obj) {\r\n  for(let item in obj)\r\n    if(obj[item]) return false;\r\n    \r\n  return true;\r\n}\r\n\r\n// Validate Email\r\nfunction validateEmail(element) {\r\n  const emailValue = element.value;\r\n    \r\n  if(emailValue === '' || emailValue === null) {\r\n    setErrorFor(element, \"Email cannot be blank\");\r\n    registrationErrors.email = true;\r\n    loginErrors.email = true;\r\n  } else if(emailValue.length <=6) {\r\n    setErrorFor(element, \"Email too short\");\r\n    registrationErrors.email = true;\r\n    loginErrors.email = true;\r\n  } else if(!isEmail(emailValue)) {\r\n    setErrorFor(element, \"Email is not valid\");\r\n    registrationErrors.email = true;\r\n    loginErrors.email = true;\r\n  } else {\r\n    setSuccessFor(element);\r\n    registrationErrors.email = false;\r\n    loginErrors.email = false;\r\n  } \r\n}\r\n\r\n// Validate Password\r\nfunction validatePassword() {\r\n  passValue = regpassword.value;\r\n  \r\n  if(passValue === '' || passValue === null) {\r\n    setErrorFor(regpassword, \"Password cannot be blank\");\r\n    registrationErrors.password = true;\r\n  } else if(passValue.length <= 6) {\r\n    setErrorFor(regpassword, \"Password must be 7+ characters\");\r\n    registrationErrors.password = true;\r\n  } else {\r\n    setSuccessFor(regpassword);\r\n    registrationErrors.password = false;\r\n  }\r\n}\r\n\r\n// Google reCaptcha validation\r\nfunction validateCaptcha() {\r\n  const captchaValue = regemail.value;\r\n    \r\n  if(registrationErrors.recaptcha != false) {\r\n    setErrorFor(regcaptcha, \"Are you human? Please check captcha\");\r\n  } else {\r\n    setSuccessFor(regcaptcha);\r\n  } \r\n}\r\nfunction recaptchaCheck() {\r\n  registrationErrors.recaptcha = false;\r\n  setSuccessFor(regcaptcha);\r\n}\r\nfunction recaptchaCheckExp() {\r\n  registrationErrors.recaptcha = true;\r\n  setErrorFor(regcaptcha, \"Are you human?\");\r\n}","console.log('connected 2.2_pwmeter.js');\r\n\r\ndocument.querySelector('#reg-password').addEventListener('keyup', function() {\r\n  const msg = document.getElementById('passwordmessage');\r\n  const meters = document.querySelectorAll('.pwmeter span');\r\n\r\n  // Calculate the strength of the password\r\n  let passwordScore = calPasswordStrength(this.value);\r\n\r\n  // Set the width of the password meter to a multiple of the score\r\n  // meter.style.width = (passwordScore+1) * 1 + 'px';\r\n\r\n  if (passwordScore <= 40) {\r\n    meters[0].style.backgroundColor = 'red';\r\n    meters[0].className = 'meter-span-on';\r\n    meters[1].className = 'meter-span-off';\r\n    meters[2].className = 'meter-span-off';\r\n    msg.style.color = 'coral';\r\n    msg.innerHTML = 'Weak password';\r\n  } else if (passwordScore <= 77) {\r\n    meters[1].style.backgroundColor = 'orange';\r\n    meters[1].className = 'meter-span-on';\r\n    meters[2].className = 'meter-span-off';\r\n    msg.style.color = 'orange';\r\n    msg.innerHTML = 'Password is average';\r\n  } else {\r\n    meters[2].style.backgroundColor = 'green';\r\n    meters[2].className = 'meter-span-on';\r\n    msg.style.color = 'green';\r\n    msg.innerHTML = 'Your password is strong';\r\n  }\r\n\r\n  // If input empty, there is no text output\r\n  if (this.value == \"\") {\r\n    meters[0].className = 'meter-span-off';\r\n    meters[1].className = 'meter-span-off';\r\n    meters[2].className = 'meter-span-off';\r\n    msg.innerHTML = '';\r\n  }\r\n});\r\n\r\n// Return password score\r\nfunction calPasswordStrength(pass) {\r\n  var score = 0;\r\n  if (!pass) return score;\r\n\r\n  // award every unique letter until 5 repetitions\r\n  var letters = new Object();\r\n  for (var i=0; i<pass.length; i++) {\r\n    letters[pass[i]] = (letters[pass[i]] || 0) + 1;\r\n    score += 5.0 / letters[pass[i]];\r\n  }\r\n\r\n  // bonus points for mixing it up\r\n  var variations = {\r\n    digits: /\\d/.test(pass),\r\n    lower: /[a-z]/.test(pass),\r\n    upper: /[A-Z]/.test(pass),\r\n    nonWords: /\\W/.test(pass),\r\n  }\r\n\r\n  variationCount = 0;\r\n  for (var check in variations) {\r\n    variationCount += (variations[check] == true) ? 1 : 0;\r\n  }\r\n  score += (variationCount - 1) * 10;\r\n\r\n  return parseInt(score);\r\n}","console.log('connected 2.3_operations.js');\r\n\r\n// Reload with Register modal tab open if client-side validation fails\r\nif(sessionStorage.getItem('regformErrors') === 'true') {\r\n  document.addEventListener(\"DOMContentLoaded\", () => {\r\n    authModal.show();\r\n    registerTab.show();\r\n  });\r\n}\r\n// Prevent reOpening registration form on reload\r\nsessionStorage.setItem('regformErrors', false);\r\n\r\n// If login fails open login modal\r\nif(sessionStorage.getItem('loginErrors') === 'true') {\r\n  document.addEventListener(\"DOMContentLoaded\", () => {\r\n    authModal.show();\r\n    loginTab.show();\r\n  });\r\n}\r\n// Prevent reOpening login form on reload\r\nsessionStorage.setItem('loginErrors', false);\r\n\r\n// Redirect to home directory on Authorization modal close if in subdirectories\r\nif(location.pathname != '/') {\r\n  document.querySelector('#auth-modal').addEventListener('hide.bs.modal', (e) => {\r\n    console.log('hida maida');\r\n    window.location.href = '/';\r\n  });\r\n}\r\n","// Show movie information in Movie Column of Movie Megamenu\r\nconst showMegamenuMovie = movie => {\r\n  const movieCol = document.querySelector('.movie-column');\r\n  \r\n  movieCol.innerHTML = '';\r\n\r\n  if(!movie) {\r\n    main.innerHTML = `<div class=\"section-title\">Movie info not available<span class=\"section-backlogo\">Movie info not available</span></div>`;\r\n    return false;\r\n  }\r\n\r\n  const { title, \r\n          poster_path,\r\n          vote_average, \r\n          overview,\r\n          release_date,\r\n          genre_ids,\r\n          id\r\n        } = movie;\r\n\r\n  const movieElement = document.createElement('div');\r\n  movieElement.classList.add('movieCol');\r\n\r\n  movieElement.innerHTML = `\r\n    \r\n      <div style=\"background-image: url('${img_path + poster_path}'); background-size: cover; height: 250px; width: 100px\"></div>\r\n        <div>\r\n          <h3>${title}</h3>\r\n            <span>${new Date(release_date).getFullYear()}</span> \r\n            <span class=\"pipe\">|</span> \r\n            <span class=\"${getClassByRate(vote_average).class}\">\r\n              ${vote_average} <i class=\"${getClassByRate(vote_average).star}\"></i></span>\r\n            <span class=\"pipe\">|</span> \r\n            <span>${getGenres(genre_ids)}</span>\r\n        </div>\r\n        \r\n        <p>${overview}</p>\r\n      </div>\r\n    </div>\r\n  `\r\n\r\n  // Attach button to an element for movie details \r\n  movieCol.appendChild(movieElement);\r\n  movieElement.addEventListener('click', function() {\r\n    fetchMovie(id);\r\n  });\r\n}","console.log('connected 1_global.js');\r\n\r\n// Toggle Day and Night mode\r\n// let currentTheme = localStorage.getItem('theme') ? localStorage.getItem('theme') : null;\r\n// const toggleSwitch = document.querySelector('.theme-checkbox');\r\n\r\n// if (currentTheme) {\r\n//   document.documentElement.setAttribute('data-theme', currentTheme);\r\n\r\n//   if (currentTheme === 'dark') {\r\n//     toggleSwitch.checked = true;\r\n//   }\r\n// } else {\r\n//   autoThemeMode();\r\n// }\r\n\r\n// function switchTheme(e) {\r\n//   if (e.target.checked) {\r\n//     document.documentElement.setAttribute('data-theme', 'dark');\r\n//     // Save theme setting to local storage\r\n//     localStorage.setItem('theme', 'dark');\r\n//   } else {\r\n//     document.documentElement.setAttribute('data-theme', 'light');\r\n//     localStorage.setItem('theme', 'light');\r\n//   }\r\n// }\r\n\r\n// toggleSwitch.addEventListener('change', switchTheme, false);\r\n\r\n// function autoThemeMode() {\r\n//   now = new Date().getHours();\r\n\r\n//   if (now > 19 || now < 7) {\r\n//     document.documentElement.setAttribute('data-theme', 'dark');\r\n//     toggleSwitch.checked = true;\r\n\r\n//     console.log('auto night mode');\r\n//   } else {\r\n//     document.documentElement.setAttribute('data-theme', 'light');\r\n//     toggleSwitch.checked = false;\r\n\r\n//     console.log('auto day mode');\r\n//   }\r\n// }\r\n\r\n// // Check if day or night every 15 mins. Sets theme in auto mode\r\n// setInterval(() => {\r\n//   currentTheme = localStorage.getItem('theme') ? localStorage.getItem('theme') : null;\r\n//   if (!currentTheme) {\r\n//     autoThemeMode();\r\n//   }\r\n// }, 1000 * 60 * 15);\r\n\r\n// ------------\r\n\r\n// Set Global frontend language locale\r\nconst supportedLangs = ['en', 'ru', 'es']; // List of site supported languages\r\nlet locale = getLocale(supportedLangs);\r\nconst language = locale; // TMDB API locale for fetch\r\n\r\n// Clean up Local Storage of old data on second reload of same session\r\n// add flag if there is current session ip data\r\n// if there is flag clean up local storage of data older than 1 month\r\n\r\n// Track IP lookup\r\nconst sessionIpData = async url => {\r\n  const sessionIpObj = sessionStorage.getItem(url) || null;\r\n  // if no url-named item in current SESSION then create one\r\n  if (!sessionIpObj) {\r\n    const ipObj = await fetchFresh(url);\r\n    sessionStorage.setItem(url, JSON.stringify(ipObj));\r\n    addtoIpHistory(ipObj);\r\n    return ipObj;\r\n  } else {\r\n    const ipData = JSON.parse(sessionStorage.getItem(url)) || null;\r\n    return ipData;\r\n  }\r\n};\r\n\r\n// Add locale object to localstorage history array\r\nfunction addtoIpHistory(obj) {\r\n  // If max items then push to last and delete first\r\n  Array.prototype.pushMax = function (value, max) {\r\n    if (this.length >= max) {\r\n      this.shift();\r\n    }\r\n    this.push(value);\r\n  };\r\n\r\n  const entries = JSON.parse(localStorage.getItem('ipHistory')) || [];\r\n  entries.pushMax(obj, 10);\r\n  localStorage.setItem('ipHistory', JSON.stringify(entries));\r\n}\r\n\r\n// Evaluate preferred language\r\nfunction getLocale(langArray) {\r\n  let lang;\r\n  if (!getCookie('language')) {\r\n    lang = navigator.languages[0].substring(0, 2);\r\n  } else {\r\n    const index = langArray.indexOf(getCookie('language'));\r\n    lang = index >= 0 ? getCookie('language') : 'en'; // default to english\r\n  }\r\n  return lang;\r\n}\r\n\r\n// Parse and get cookie data by keyname\r\nfunction getCookie(cname) {\r\n  const name = cname + '=';\r\n  const ca = document.cookie.split(';');\r\n  for (let i = 0; i < ca.length; i++) {\r\n    let c = ca[i];\r\n    while (c.charAt(0) == ' ') {\r\n      c = c.substring(1);\r\n    }\r\n    if (c.indexOf(name) == 0) {\r\n      return c.substring(name.length, c.length);\r\n    }\r\n  }\r\n  return '';\r\n}\r\n\r\nconsole.log(Intl.DateTimeFormat().resolvedOptions().timeZone);\r\n\r\n// // Use HTML5 Geolocation\r\n// function geoLocate() {\r\n//   if (!navigator.geolocation) {\r\n//     console.log('Geolocation is not supported by your browser');\r\n//     return;\r\n//   }\r\n\r\n//   function success(position) {\r\n//     // for when getting location is a success\r\n//     const lat = position.coords.latitude;\r\n//     const lon = position.coords.longitude;\r\n//     console.log('latitude', lat, 'longitude', lon);\r\n//     // reverseGeocode(lat, lon);\r\n//   }\r\n\r\n//   function error() {\r\n//     console.error();\r\n//     // get your location some other way with function\r\n//   }\r\n\r\n//   navigator.geolocation.getCurrentPosition(success, error); // options: optional\r\n// }\r\n\r\n/* OPEN DROPDOWNS ON HOVER */\r\n// // Vars\r\n// const dropdowns = document.querySelectorAll('nav .dropdown');\r\n// const dropdownMenus = document.querySelectorAll('nav .dropdown-menu');\r\n\r\n// // Open dropdown menu on hover\r\n// dropdowns.forEach(dropdown => {\r\n//   const dropdownMenu = dropdown.querySelector('.dropdown-menu');\r\n//   dropdown.addEventListener('mouseover', () => {\r\n//     removeClass(dropdownMenus);\r\n//     if(window.getComputedStyle(dropdownMenu).visibility === \"visible\") {\r\n//       dropdownMenu.classList.add(\"show\");\r\n//     // }\r\n//   });\r\n// });\r\n\r\n// // Remove class from elements array\r\n// function removeClass(elements) {\r\n//   elements.forEach(element => {\r\n//     element.classList.remove(\"show\");\r\n//   });\r\n// }\r\n/* ======================= */\r\n","console.log('connected 3_data_prep.js');\r\n\r\n// TMDb API parameters\r\nconst url_params = new URLSearchParams({ language });\r\nconst img_path = 'https://image.tmdb.org/t/p/w300';\r\nconst img_path_highres = 'https://image.tmdb.org/t/p/w1280';\r\n\r\n// TMDB data proxies\r\nconst url_movie_genres = '/api/movies/genres?';\r\nconst url_search = '/api/movies/search?query=';\r\nconst url_theatersNow = '/api/theaters/nowplaying?';\r\nconst url_theatersUpcoming = '/api/theaters/upcoming?';\r\nconst url_moviesTrend = '/api/movies/trending?';\r\nconst url_moviesPopular = '/api/movies/popular?';\r\nconst url_movieInfo = '/api/movies/movieinfo/';\r\nconst url_similars = '/api/similar/';\r\n\r\nconst marqueeReel = document.querySelector('.marquee-content');\r\nconst gallery = document.querySelector('.carousel-inner');\r\nconst galleryThumbnails = document.querySelector('.carousel-indicators');\r\nconst searchResults = document.querySelectorAll('search-results');\r\nconst sections = document.querySelectorAll('section');\r\nconst header = document.querySelector('header');\r\n\r\nlet movieGenres;\r\n\r\n// Search movies (no caching)\r\nsearchForm.addEventListener('submit', async e => {\r\n  e.preventDefault();\r\n  const searchValue = searchInput.value;\r\n  const url = url_search + searchValue + '&' + url_params;\r\n\r\n  if (searchValue) {\r\n    clearPage();\r\n\r\n    const data = await fetchData(url).then(res => res.results);\r\n    toSection(sections[0], data);\r\n    searchInput.value = '';\r\n  }\r\n});\r\n\r\n// Loop genres for Movie list\r\nconst showMovieListGenres = genres => {\r\n  const genresArr = movieGenres;\r\n  const list = movieGenres.genres;\r\n  let genresarr = [];\r\n  genres.map(genre => {\r\n    list.map(item => {\r\n      if (genre == item.id) {\r\n        genresarr.push(item.name);\r\n      }\r\n    });\r\n  });\r\n  return genresarr.join(', ');\r\n};\r\n\r\n// Loop genres for a movie\r\nconst showMovieGenres = genres => {\r\n  const list = genres;\r\n  let genresarr = [];\r\n  list.map(item => {\r\n    genresarr.push(item.name);\r\n  });\r\n  return genresarr.join(', ');\r\n};\r\n","console.log('connected 4.5_profile.js');\r\n\r\nconst url_weatherInfo = `/api/weather?`;\r\nconst weather = document.querySelector('.weather-data');\r\nconst clientInfo = document.querySelector('.client-data');\r\n\r\n// Check if in Profiles page\r\nif (window.location.href.indexOf('/profile/') != -1) {\r\n  document.addEventListener('DOMContentLoaded', profileInit());\r\n}\r\n\r\n// Init Profiles page\r\nasync function profileInit() {\r\n  const ipdata = await sessionIpData('https://freegeoip.app/json/');\r\n  showWeather(ipdata);\r\n  showClientside(ipdata);\r\n}\r\n\r\n// Display Weather info\r\nasync function showWeather(data) {\r\n  if (weather) {\r\n    const params = new URLSearchParams({\r\n      lat: data.latitude,\r\n      lon: data.longitude,\r\n      units: 'metric', // \"metric\", \"imperial\", \"kelvin\"\r\n      lang: language,\r\n    });\r\n    const resdata = await fetchData(url_weatherInfo + params);\r\n    toWeather(resdata);\r\n\r\n    console.log('received weather data: ', resdata);\r\n  }\r\n}\r\n\r\n// Display Clientside info\r\nasync function showClientside(data) {\r\n  if (clientInfo) {\r\n    let browser_geolocation = false;\r\n\r\n    if (true) {\r\n    } else {\r\n    }\r\n\r\n    toClientInfo(data);\r\n\r\n    // console.log('received weather data: ', \"resdata\");\r\n  }\r\n}\r\n\r\nfunction toWeather(data) {\r\n  if (data.length < 1) {\r\n    weather.innerHTML = '';\r\n    weather.innerHTML = `<div>No Weather Data</div>`;\r\n    return;\r\n  }\r\n  weather.innerHTML = '';\r\n  weather.innerHTML = `<div><strong>Weather Info with OpenWeatherMap:</strong></div>`;\r\n\r\n  const lang = data.locale;\r\n  const city = data.name;\r\n  const temp = data.main.temp;\r\n  const icon = data.weather[0].icon;\r\n  const desc = data.weather[0].description;\r\n\r\n  const weatherElement = document.createElement('div');\r\n  weatherElement.classList.add('weather');\r\n  weatherElement.innerHTML = `\r\n    ${lang.city}: ${city}<br>\r\n    ${lang.temp}: ${temp} &deg;C <br>\r\n    ${desc}<br>\r\n    <img class=\"weather-icon\" src=\"http://openweathermap.org/img/wn/${icon}@2x.png\"> <br>\r\n  `;\r\n\r\n  // On each forEach iteration attach the button to an element with\r\n  weather.appendChild(weatherElement);\r\n  weatherElement.addEventListener('click', function () {\r\n    // fetchMovie(id);\r\n  });\r\n}\r\n\r\n// Display ClienInfo\r\nfunction toClientInfo(data) {\r\n  const spans = document.querySelectorAll('.client-data span');\r\n  spans[0].innerHTML = data.ip;\r\n  spans[1].innerHTML = data.latitude;\r\n  spans[2].innerHTML = data.longitude;\r\n  spans[3].innerHTML = data.city;\r\n  spans[4].innerHTML = data.country_name;\r\n  spans[5].innerHTML = data.time_zone;\r\n}\r\n","console.log('connected 4_body.js');\r\n\r\nconst secTheaters = document.querySelector('.intheaters');\r\nconst secTheatersPick = document.querySelector('.intheaters-pick');\r\nconst secMovies = document.querySelector('.moviespopular');\r\nconst secMoviesPick = document.querySelector('.moviespopular-pick');\r\nconst secTv = document.querySelector('.tvpopular');\r\n\r\n// Check if in Profiles page\r\nif (window.location.pathname == \"/\") {\r\n  document.addEventListener('DOMContentLoaded', initData());\r\n}\r\n\r\n// Collect initial TMDB data\r\nasync function initData() {\r\n  await showGenres();\r\n  showMoviesTrending();\r\n  showInTheaters();\r\n  showMoviesPopular();\r\n}\r\n\r\n// Collect genres list\r\nasync function showGenres() {\r\n  movieGenres = await fetchData(url_movie_genres + url_params, 24 * 60 * 60 * 1000);\r\n  document.querySelectorAll('.genres-list').forEach(list => {\r\n    toGenresList(movieGenres.genres, list);\r\n  });\r\n}\r\n\r\n// Display movies In theaters and a movie pick\r\nasync function showInTheaters() {\r\n  const moviesIntheaters = await fetchData(url_theatersNow + url_params).then(data => data.results);\r\n  const picked = await pickShow(moviesIntheaters);\r\n  \r\n  toSection(secTheaters, moviesIntheaters);\r\n  toTheaterPicked(secTheatersPick, picked);\r\n}\r\n\r\n// Display Popular movies and a movie pick\r\nasync function showMoviesPopular() {\r\n  const movies = await fetchData(url_moviesPopular + url_params).then(data => data.results);\r\n  const picked = await pickShow(movies);\r\n  const similars = await getSimilarShows(picked.id, 0);\r\n  \r\n  toSection(secMovies, movies);\r\n  const similarsBox = toMoviePicked(secMoviesPick, picked);\r\n  toSimilars(similarsBox, similars);\r\n}\r\n\r\n// Pick a show from array\r\nfunction pickShow(shows) {\r\n  const index = Math.floor(Math.random() * shows.length);\r\n  const show = shows[index];\r\n  return show;\r\n}\r\n\r\n// Fetch similar shows\r\nasync function getSimilarShows(id, type) {    // type 0:movie or 1:tv\r\n  type = type ? 'tv' : 'movie';\r\n  const url = url_similars + `${type}/${id}?`;\r\n  const similars = await fetchData(url + url_params).then(data => data.results.slice(0, 5));\r\n  return similars;\r\n}\r\n\r\n// Display Trending movies\r\nasync function showMoviesTrending() {\r\n  moviesTrending = await fetchData(url_moviesTrend + url_params);\r\n  toCarousel(moviesTrending);\r\n}\r\n\r\n// Populate Carousel\r\nfunction toCarousel(array) {\r\n  gallery.innerHTML = '';\r\n  galleryThumbnails.innerHTML = '';\r\n\r\n  array.results.forEach((item, index) => {\r\n    const { title,\r\n            poster_path,\r\n            vote_average,\r\n            backdrop_path,\r\n            overview,\r\n            release_date,\r\n            genre_ids,\r\n            id\r\n          } = item;\r\n\r\n    const filmSlide = document.createElement('div');\r\n    filmSlide.classList.add('carousel-item');\r\n    index === 0 ? filmSlide.className += \" active\" : '';\r\n    filmSlide.style.backgroundImage = `url(\"${img_path_highres + backdrop_path}\")`;\r\n    \r\n    // Slides output\r\n    filmSlide.innerHTML = `\r\n      <div class=\"fade-overlay\"></div>\r\n      <div class=\"carousel-caption d-md-block\">\r\n      <!-- <div class=\"carousel-caption d-none d-md-block\"> -->\r\n        <h2 class=\"display-4\">${title}</h2>\r\n          <p class=\"lead overview-header__stats\">\r\n            <span class=\"carousel-caption-overview\">${new Date(release_date).getFullYear()}</span> \r\n            <span class=\"pipe carousel-caption-overview\">|</span> \r\n            <span class=\"carousel-caption-overview\">\r\n              <i class=\"${vote_average == 0 ? \"\" : getClassByRate(vote_average).star}\"></i> ${vote_average == 0 ? \"\" : vote_average} </span>\r\n            <span class=\"pipe carousel-caption-overview\">|</span> \r\n            <span class=\"carousel-caption-overview\">${showMovieListGenres(genre_ids)}</span>\r\n          </p>\r\n        <div class=\"film-details\">\r\n          <a class=\"button-container-${index}\" href=\"#\"></a>\r\n          <p class=\"lead\">${overview.substring(0, 200)}...</p>\r\n        </div>\r\n      </div>\r\n      `;\r\n      \r\n      gallery.appendChild(filmSlide);\r\n\r\n      // Create a button and attach click event listener\r\n      const button = document.createElement(\"button\");\r\n      button.classList.add('btn-custom');\r\n      button.className += ' mb-3'\r\n      button.innerHTML = '<i class=\"fas fa-play\"></i> Play';\r\n      button.addEventListener('click', function() {\r\n        fetchMovie(id);\r\n      });\r\n      // On each forEach iteration attach the button to an element with \r\n      // a unique id\r\n      document.querySelector(\".button-container-\" + index).appendChild(button);\r\n\r\n    // Icons output\r\n    const filmElement = document.createElement('li');\r\n    // index === 0 ? filmElement.className += \" active\" : '';\r\n    filmElement.setAttribute(\"data-target\", \"#carousel-main\");\r\n    filmElement.setAttribute(\"data-slide-to\", `${index}`);\r\n    filmElement.innerHTML = `\r\n      <div class=\"card-dummy\">\r\n        <img src=\"${img_path + poster_path}\">\r\n      </div>\r\n    `\r\n    marqueeReel.appendChild(filmElement);\r\n  });\r\n\r\n  // Fill marquee space between last and first card \r\n  infiniteMarquee();\r\n}\r\n\r\n// Populate a section\r\nfunction toSection(section, movies) {\r\n  section.innerHTML = '';\r\n  if(movies.length < 1) {   // Inform user if no results\r\n    section.innerHTML = `<div class=\"section-title\">No Results Found<span class=\"section-backlogo\">No Results Found</span></div>`;\r\n    return false;\r\n  }\r\n\r\n  // Show movie-cards size toggle icons\r\n  section.innerHTML = `\r\n  <div class=\"section-row\">\r\n    <div class=\"section-title\">${section.getAttribute('data-desc')}<span class=\"section-backlogo\">${section.getAttribute('data-desc')}</span></div>\r\n    <div class=\"view-icons-container\">\r\n      <span class=\"view-icons btn-view-sm\">\r\n        <svg class=\"btn-view-sm\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-grid-3x2-gap\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path class=\"btn-view-sm\" fill-rule=\"evenodd\" d=\"M4 4H2v2h2V4zm1 7V9a1 1 0 0 0-1-1H2a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1zm0-5V4a1 1 0 0 0-1-1H2a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1zm5 5V9a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1zm0-5V4a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1zM9 4H7v2h2V4zm5 0h-2v2h2V4zM4 9H2v2h2V9zm5 0H7v2h2V9zm5 0h-2v2h2V9zm-3-5a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1V4zm1 4a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1V9a1 1 0 0 0-1-1h-2z\"/>\r\n        </svg>\r\n      </span>\r\n      <span class=\"view-icons btn-view-lg\">\r\n        <svg class=\"btn-view-lg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-grid\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path class=\"btn-view-lg\" fill-rule=\"evenodd\" d=\"M1 2.5A1.5 1.5 0 0 1 2.5 1h3A1.5 1.5 0 0 1 7 2.5v3A1.5 1.5 0 0 1 5.5 7h-3A1.5 1.5 0 0 1 1 5.5v-3zM2.5 2a.5.5 0 0 0-.5.5v3a.5.5 0 0 0 .5.5h3a.5.5 0 0 0 .5-.5v-3a.5.5 0 0 0-.5-.5h-3zm6.5.5A1.5 1.5 0 0 1 10.5 1h3A1.5 1.5 0 0 1 15 2.5v3A1.5 1.5 0 0 1 13.5 7h-3A1.5 1.5 0 0 1 9 5.5v-3zm1.5-.5a.5.5 0 0 0-.5.5v3a.5.5 0 0 0 .5.5h3a.5.5 0 0 0 .5-.5v-3a.5.5 0 0 0-.5-.5h-3zM1 10.5A1.5 1.5 0 0 1 2.5 9h3A1.5 1.5 0 0 1 7 10.5v3A1.5 1.5 0 0 1 5.5 15h-3A1.5 1.5 0 0 1 1 13.5v-3zm1.5-.5a.5.5 0 0 0-.5.5v3a.5.5 0 0 0 .5.5h3a.5.5 0 0 0 .5-.5v-3a.5.5 0 0 0-.5-.5h-3zm6.5.5A1.5 1.5 0 0 1 10.5 9h3a1.5 1.5 0 0 1 1.5 1.5v3a1.5 1.5 0 0 1-1.5 1.5h-3A1.5 1.5 0 0 1 9 13.5v-3zm1.5-.5a.5.5 0 0 0-.5.5v3a.5.5 0 0 0 .5.5h3a.5.5 0 0 0 .5-.5v-3a.5.5 0 0 0-.5-.5h-3z\"/>\r\n        </svg>\r\n      </span>\r\n    </div>\r\n  </div>\r\n  `;\r\n\r\n  movies.forEach((movie, index) => {\r\n    const { title, \r\n            poster_path,\r\n            vote_average, \r\n            backdrop_path,\r\n            overview,\r\n            release_date,\r\n            genre_ids,\r\n            id\r\n          } = movie;\r\n\r\n    const movieElement = document.createElement('div');\r\n    movieElement.className = 'movie';\r\n\r\n    movieElement.innerHTML = `      \r\n      <div class=\"img-container\">\r\n        <div class=\"img\" style=\"background-image: url('${img_path + poster_path}');\"></div>\r\n        <div class=\"overlay\"></div>\r\n      </div>\r\n      <div class=\"movie-info\">\r\n        <div class=\"overview\">\r\n          <div class=\"overview-header\">\r\n            ${title}<br>\r\n            <div class=\"overview-header__stats\">\r\n              <span>${new Date(release_date).getFullYear()}</span> \r\n              <span class=\"pipe\">|</span> \r\n              <span class=\"${getClassByRate(vote_average).class}\">\r\n                ${vote_average} <i class=\"${getClassByRate(vote_average).star}\"></i></span>\r\n              </span><br>\r\n              <span class=\"genres\">${showMovieListGenres(genre_ids)}</span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"overview-body\">\r\n           <!-- <p>${overview}</p> -->\r\n          </div>\r\n          <div class=\"overview-footer\">\r\n          </div>          \r\n        </div>\r\n      </div>\r\n    `\r\n\r\n    // On each forEach iteration attach a button to an element with a watch movie link\r\n    section.appendChild(movieElement);\r\n    movieElement.addEventListener('click', function() {\r\n      fetchMovie(id);\r\n    });\r\n  });\r\n}\r\n\r\n// Pick a show from array\r\nfunction toTheaterPicked(section, movie) {\r\n  section.innerHTML = '';\r\n  if(movie.length) {\r\n    section.innerHTML = `<div class=\"section-title\">No Results Found<span class=\"section-backlogo\">No Results Found</span></div>`;\r\n    return false;\r\n  }\r\n\r\n  const { title, poster_path, vote_average, backdrop_path, overview, release_date, genre_ids, id } = movie;\r\n  const movieElement = document.createElement('div');\r\n  movieElement.className = 'pickedMovie';\r\n  movieElement.style.backgroundImage = `url(${img_path_highres + backdrop_path})`;\r\n  movieElement.innerHTML = `\r\n    <div class=\"picked-overlay\"></div>\r\n    <div class=\"info-row\">\r\n      <div class=\"info-box\">\r\n        ${title}<br>\r\n        <span class=\"${getClassByRate(vote_average).class}\">\r\n          ${vote_average} <i class=\"${getClassByRate(vote_average).star}\"></i></span>\r\n        </span><br>\r\n        <span class=\"genres\">${showMovieListGenres(genre_ids)}</span>\r\n        <p>${overview}</p>\r\n      </div>\r\n      <div class=\"purchase-box\">\r\n        ${section.getAttribute('data-desc')}<br>\r\n        <div id=\"map-page\">MAP</div>\r\n      </div>\r\n    </div>\r\n  `;\r\n\r\n  section.appendChild(movieElement);\r\n  // movieElement.addEventListener('click', function() {\r\n  //   fetchMovie(id);\r\n  // });  \r\n}\r\n\r\n// Display picked popular movie and similars\r\nfunction toMoviePicked(section, movie) {\r\n  section.innerHTML = '';\r\n  if(movie.length) {    // Inform user if no movie found\r\n    section.innerHTML = `<div class=\"section-title\">No Results Found<span class=\"section-backlogo\">No Results Found</span></div>`;\r\n    return;\r\n  }\r\n\r\n  const { title, poster_path, vote_average, backdrop_path, overview, release_date, genre_ids, id } = movie;\r\n  const movieElement = document.createElement('div');\r\n  movieElement.className = 'picked-movie-similars';\r\n  movieElement.style.backgroundImage = `url(${img_path_highres + backdrop_path})`;\r\n  movieElement.innerHTML = `\r\n    <div class=\"picked-overlay\"></div>\r\n    <div class=\"info-box\">\r\n      ${section.getAttribute('data-desc')}<br>\r\n      <div class=\"picked-title\">${title} <span>(${new Date(release_date).getFullYear()})</span></div>\r\n      <span class=\"picked-rating\">\r\n        ${vote_average} <i class=\"${getClassByRate(vote_average).star}\"></i></span>\r\n      </span><br>\r\n      <span class=\"genres\">${showMovieListGenres(genre_ids)}</span>\r\n    </div>\r\n    <div class=\"similars-box\">\r\n    </div>\r\n    </div>\r\n  `;\r\n\r\n  section.appendChild(movieElement);\r\n  const infoBox = movieElement.querySelector('.info-box');\r\n  infoBox.addEventListener('click', () => fetchMovie(id));\r\n  const similarsBox = movieElement.querySelector('.similars-box');\r\n  return similarsBox;\r\n}\r\n\r\n// Fill Similars section\r\nfunction toSimilars(section, movies) {\r\n  section.innerHTML = '';\r\n  movies.forEach((movie, index) => {\r\n    const { title, poster_path, vote_average, backdrop_path, overview, release_date, genre_ids, id } = movie;\r\n    const movieElement = document.createElement('div');\r\n    movieElement.className = 'similars-card';\r\n    movieElement.innerHTML = `\r\n      <div class=\"similars-bg\" style=\"background-image: url(${img_path + backdrop_path})\"></div>\r\n      <div class=\"movie-info\">\r\n        <div class=\"overview\">\r\n          <div class=\"overview-header\">\r\n            ${title}<br>\r\n            <div class=\"overview-header__stats\">\r\n              <span>${new Date(release_date).getFullYear()}</span> \r\n              <span class=\"pipe\">|</span> \r\n              <span>\r\n                ${vote_average} <i class=\"${getClassByRate(vote_average).star}\"></i></span>\r\n              </span><br>\r\n              <span class=\"genres\">${showMovieListGenres(genre_ids)}</span>\r\n            </div>\r\n          </div>          \r\n        </div>\r\n      </div>\r\n    `;\r\n\r\n    // On each forEach iteration attach the button to an element with \r\n    section.appendChild(movieElement);\r\n    movieElement.addEventListener('click', function() {\r\n      fetchMovie(id);\r\n    });\r\n  });\r\n}\r\n\r\n// Populate Movie details\r\nfunction watchMovie(movie) {\r\n  const { \r\n    title, \r\n    poster_path,\r\n    vote_average, \r\n    backdrop_path,\r\n    overview,\r\n    release_date,\r\n    genres\r\n  } = movie;\r\n\r\n  clearPage();\r\n  header.innerHTML = `\r\n    <!-- <div class=\"section-title\">Title<span class=\"section-backlogo\">Title</span></div> -->\r\n    <!-- <h1>Title</h1> -->\r\n\r\n    <section class=\"watch-movie\">\r\n      <div class=\"watch-movie-bg-decor\">${title}</div>\r\n      <div class=\"watch-movie-bg\"></div>\r\n      <div class=\"container\">\r\n        <div class=\"row\">\r\n          <div class=\"col-lg-6 col-sm-12 padding-0\">\r\n            <div class=\"movie-glance\">\r\n              <div class=\"film-page_poster\">\r\n                <img class=\"img-fluid\" src=\"${img_path + poster_path}\" alt=\"${title}\" title=\"${title}\"> \r\n              </div>\r\n              <div class=\"movie-info-container\">\r\n                <div class=\"\">\r\n                  <div class=\"film-page_title\">${title}</div>\r\n                  <div class=\"film-page_title-stats\">\r\n                    <span>${new Date(release_date).getFullYear()}</span>\r\n                    <span>|</span>\r\n                    <span> R </span>\r\n                    <span>|</span>\r\n                    <span> 2hr 20min</span>\r\n                  </div>\r\n                </div>\r\n                <div class=\"film-page_rating\">\r\n                  <span class=\"rating-star\"><i class=\"${getClassByRate(vote_average).star}\"></i></span>\r\n                  <span class=\"rating-score ${getClassByRate(vote_average).class}\">${vote_average}</span>\r\n                  <span class=\"reviews\">87 875 <i class=\"fas fa-user-alt\"></i></span>\r\n                </div>\r\n                <div class=\"film-page_genre\">\r\n                  <span>${showMovieGenres(genres)}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"movie-sources\">\r\n              <ul class=\"play-button-group\">\r\n                <li><a href=\"#\" class=\"btn btn-sm btn-secondary wm-btn\">4K <i class=\"fas fa-play\"></i></a></li>\r\n                <li><a href=\"#\" class=\"btn btn-sm btn-secondary wm-btn\">HD <i class=\"fas fa-play\"></i></a></li>\r\n                <li><a href=\"#\" class=\"btn btn-sm btn-secondary wm-btn\">SD <i class=\"fas fa-play\"></i></a></li>\r\n                <li><a href=\"#\" class=\"btn btn-sm btn-secondary wm-btn\">IN THEATERS <i class=\"fas fa-film\"></i></a></li>\r\n              </ul>\r\n            </div>\r\n          </div> \r\n          <div class=\"col-lg-6 col-sm-12\">\r\n            <div class=\"movie-description\">\r\n              <p>${overview}</p>\r\n            </div>  \r\n          </div> \r\n        </div>\r\n        <div class=\"row\">\r\n        <!-- \r\n          <div class=\"iframe-container\">\r\n            <iframe src=\"https://www.youtube.com/embed/ngWBddVNVZs?autoplay=1&start=13&mute=1\" \r\n            allow=\"autoplay; picture-in-picture;\" frameborder=\"0\" allowfullscreen>\r\n            </iframe>\r\n          </div>\r\n        -->\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n    <section class=\"suggest-movie\">\r\n      <div class=\"container\">\r\n        <div class=\"title\">\r\n          <h4>You Also May Like</h4>\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n    <div class=\"container\" style=\"padding-bottom: 10rem;\">\r\n      <button data-tooltip=\" Tooltip\">Submit Form</button>\r\n    </div>\r\n  `\r\n  window.scrollTo(0, 0);\r\n}\r\n\r\n// Populate Genre lists\r\nfunction toGenresList(genres, list) {\r\n  list.innerHTML = '';\r\n\r\n  genres.forEach((genre, index) => {\r\n    const { name } = genre;\r\n\r\n    const genreElement = document.createElement('li');\r\n    genreElement.classList.add('genre-li');\r\n\r\n    genreElement.innerHTML = `<a href=\"\">${name}</a>`;\r\n\r\n    // On each forEach iteration attach the button to an element with \r\n    list.appendChild(genreElement);\r\n    genreElement.addEventListener('click', function() {\r\n      // fetchMoviebyGenre(id);\r\n    });\r\n  });\r\n}\r\n\r\n// Click on view-icons for cards size\r\ndocument.addEventListener('click', (e) => {\r\n  if(e.target.classList == 'btn-view-sm') {\r\n    document.querySelector('.btn-view-sm').style.opacity = 1;\r\n    document.querySelector('.btn-view-lg').style.opacity = .6;\r\n    document.querySelectorAll('.movie').forEach(movie => {\r\n      \r\n      movie.className = 'movie-small';\r\n    });\r\n  }\r\n  if(e.target.classList == 'btn-view-lg') {\r\n    document.querySelector('.btn-view-sm').style.opacity = .6;\r\n    document.querySelector('.btn-view-lg').style.opacity = 1;\r\n    document.querySelectorAll('.movie-small').forEach(movie => {\r\n\r\n      movie.className = 'movie';\r\n    });\r\n  }\r\n});\r\n\r\n\r\n\r\n// // event added to target if = #burger\r\n// document.addEventListener('click', function(e){\r\n//   if(e.target && e.target.id == 'burger'){\r\n//     console.log('listener attached to document');\r\n//    }\r\n// });\r\n\r\n\r\n// burger menu listener assigned to parent\r\n// document.querySelector(\"#burger\").click();\r\n\r\n//   // Show movie card in Megamenu\r\n//   const randMovie = Math.floor(Math.random() * 20);\r\n//   showMegamenuMovie(respData.results[randMovie]);\r\n\r\n\r\n// Loop search inputs for value\r\n// searchForms.forEach((form) => {\r\n//   form.addEventListener('submit', (e) => {\r\n//     let searchValue = form.querySelector('.search-input').value;\r\n//     e.preventDefault();\r\n    \r\n//     if (searchValue) {\r\n//       main.innerHTML = '';\r\n//       document.querySelector('header').innerHTML = '';\r\n//       document.querySelector('#search-container-nav').style.visibility = 'unset';\r\n//       getMovies(search_url + searchValue);\r\n//       form.querySelector('.search-input').value = '';\r\n//     }\r\n//   });\r\n// });\r\n\r\n// function onhover() {\r\n//   console.log('hi');\r\n//   document.querySelector('.movie-info').className = 'movie-info-active';\r\n// }\r\n\r\n\r\n// function clickWatch(index) {\r\n//   document.addEventListener('click', function(e) {\r\n//     if(e.target && e.target.id == 'movie-link') {\r\n//       console.log('clicked from closure ', index);\r\n//     }\r\n//   });\r\n// }","console.log('connected 5_marquee.js');\r\n\r\nfunction infiniteMarquee() {\r\n  const root = document.documentElement;\r\n  const marqueeElementsDisplayed = getComputedStyle(root).getPropertyValue('--marquee-elements-displayed');\r\n  const marqueeContent = document.querySelector('.marquee-content');\r\n\r\n  root.style.setProperty(\"--marquee-elements\", marqueeContent.children.length);\r\n\r\n  for (let i = 0; i < marqueeElementsDisplayed; i++) {\r\n    marqueeContent.appendChild(marqueeContent.children[i].cloneNode(true));\r\n  }\r\n}","console.log('connected 6_forms.js');\r\n\r\n// Check if in Profiles page\r\nif (window.location.pathname == '/info/contact') {\r\n  document.addEventListener('DOMContentLoaded', contactForm());\r\n}\r\n\r\n// Contact form\r\nfunction contactForm() {\r\n  document.getElementById('contact-form').addEventListener('submit', async e => {\r\n    e.preventDefault();\r\n    const name = document.querySelector('#contact-form-name').value;\r\n    const email = document.querySelector('#contact-form-email').value;\r\n    const message = document.querySelector('#contact-form-message').value;\r\n\r\n    const res = await fetch('/info/contact', {\r\n      method: 'POST',\r\n      headers: { 'Content-type': 'application/json' },\r\n      body: JSON.stringify({ name, email, message }),\r\n    });\r\n    const data = await res.json();\r\n    console.log(data);\r\n    // if (data.success) {\r\n    //   console.log('successfully registered');\r\n    //   registrationErrors.recaptca = false;\r\n    //   return (window.location.href = '/');\r\n    // }\r\n  });\r\n}\r\n"]}